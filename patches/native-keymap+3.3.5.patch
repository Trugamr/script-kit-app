diff --git a/node_modules/native-keymap/License.txt b/node_modules/native-keymap/License.txt
deleted file mode 100644
index ad2a8b1..0000000
--- a/node_modules/native-keymap/License.txt
+++ /dev/null
@@ -1,17 +0,0 @@
-Copyright (c) Microsoft Corporation
-
-All rights reserved.
-
-MIT License
-
-Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation
-files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy,
-modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software
-is furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
-BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT
-OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
\ No newline at end of file
diff --git a/node_modules/native-keymap/PoliCheckExclusions.xml b/node_modules/native-keymap/PoliCheckExclusions.xml
deleted file mode 100644
index 76dae39..0000000
--- a/node_modules/native-keymap/PoliCheckExclusions.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<PoliCheckExclusions>
-  <!-- All strings must be UPPER CASE -->
-  <!--Each of these exclusions is a folder name -if \[name]\exists in the file path, it will be skipped -->
-  <Exclusion Type="FolderPathFull">DEPS</Exclusion>
-  <!--Each of these exclusions is a folder name -if any folder or file starts with "\[name]", it will be skipped -->
-  <!--<Exclusion Type="FolderPathStart">ABC|XYZ</Exclusion>-->
-  <!--Each of these file types will be completely skipped for the entire scan -->
-  <!--<Exclusion Type="FileType">.ABC|.XYZ</Exclusion>-->
-  <!--The specified file names will be skipped during the scan regardless which folder they are in -->
-  <!--<Exclusion Type="FileName">ABC.TXT|XYZ.CS</Exclusion>-->
-</PoliCheckExclusions>
diff --git a/node_modules/native-keymap/README.md b/node_modules/native-keymap/README.md
deleted file mode 100644
index 6e68471..0000000
--- a/node_modules/native-keymap/README.md
+++ /dev/null
@@ -1,78 +0,0 @@
-# OS key mapping node module [![Build Status](https://dev.azure.com/ms/node-native-keymap/_apis/build/status/microsoft.node-native-keymap?branchName=master)](https://dev.azure.com/ms/node-native-keymap/_build/latest?definitionId=138&branchName=master)
-Returns what characters are produced by pressing keys with different modifiers on the current system keyboard layout.
-
-## Installing
-
-* On Debian-based Linux: `sudo apt-get install libx11-dev libxkbfile-dev`
-* On Red Hat-based Linux: `sudo yum install libx11-devel.x86_64 libxkbfile-devel.x86_64 # or .i686`
-* On SUSE-based Linux: `sudo zypper install libX11-devel libxkbfile-devel`
-* On FreeBSD: `sudo pkg install libX11`
-
-```sh
-npm install native-keymap
-```
-
-## Using
-
-```javascript
-var keymap = require('native-keymap');
-console.log(keymap.getKeyMap());
-```
-
-Example output when using standard US keyboard layout (on Windows):
-```
-[
-  ...
-  Space:        { vkey: 'VK_SPACE',      value: ' ',  withShift: ' ', withAltGr: '', withShiftAltGr: '' },
-  Minus:        { vkey: 'VK_OEM_MINUS',  value: '-',  withShift: '_', withAltGr: '', withShiftAltGr: '' },
-  Equal:        { vkey: 'VK_OEM_PLUS',   value: '=',  withShift: '+', withAltGr: '', withShiftAltGr: '' },
-  BracketLeft:  { vkey: 'VK_OEM_4',      value: '[',  withShift: '{', withAltGr: '', withShiftAltGr: '' },
-  BracketRight: { vkey: 'VK_OEM_6',      value: ']',  withShift: '}', withAltGr: '', withShiftAltGr: '' },
-  Backslash:    { vkey: 'VK_OEM_5',      value: '\\', withShift: '|', withAltGr: '', withShiftAltGr: '' },
-  Semicolon:    { vkey: 'VK_OEM_1',      value: ';',  withShift: ':', withAltGr: '', withShiftAltGr: '' },
-  Quote:        { vkey: 'VK_OEM_7',      value: '\'', withShift: '"', withAltGr: '', withShiftAltGr: '' },
-  Backquote:    { vkey: 'VK_OEM_3',      value: '`',  withShift: '~', withAltGr: '', withShiftAltGr: '' },
-  Comma:        { vkey: 'VK_OEM_COMMA',  value: ',',  withShift: '<', withAltGr: '', withShiftAltGr: '' },
-  Period:       { vkey: 'VK_OEM_PERIOD', value: '.',  withShift: '>', withAltGr: '', withShiftAltGr: '' },
-  Slash:        { vkey: 'VK_OEM_2',      value: '/',  withShift: '?', withAltGr: '', withShiftAltGr: '' },
-  ...
-]
-```
-
-Example output when using German (Swiss) keyboard layout (on Windows):
-```
-[
-  ...
-  Space:        { vkey: 'VK_SPACE',      value: ' ',  withShift: ' ', withAltGr: '',  withShiftAltGr: '' },
-  Minus:        { vkey: 'VK_OEM_4',      value: '\'', withShift: '?', withAltGr: '´', withShiftAltGr: '' },
-  Equal:        { vkey: 'VK_OEM_6',      value: '^',  withShift: '`', withAltGr: '~', withShiftAltGr: '' },
-  BracketLeft:  { vkey: 'VK_OEM_1',      value: 'ü',  withShift: 'è', withAltGr: '[', withShiftAltGr: '' },
-  BracketRight: { vkey: 'VK_OEM_3',      value: '¨',  withShift: '!', withAltGr: ']', withShiftAltGr: '' },
-  Backslash:    { vkey: 'VK_OEM_8',      value: '$',  withShift: '£', withAltGr: '}', withShiftAltGr: '' },
-  Semicolon:    { vkey: 'VK_OEM_7',      value: 'ö',  withShift: 'é', withAltGr: '',  withShiftAltGr: '' },
-  Quote:        { vkey: 'VK_OEM_5',      value: 'ä',  withShift: 'à', withAltGr: '{', withShiftAltGr: '' },
-  Backquote:    { vkey: 'VK_OEM_2',      value: '§',  withShift: '°', withAltGr: '',  withShiftAltGr: '' },
-  Comma:        { vkey: 'VK_OEM_COMMA',  value: ',',  withShift: ';', withAltGr: '',  withShiftAltGr: '' },
-  Period:       { vkey: 'VK_OEM_PERIOD', value: '.',  withShift: ':', withAltGr: '',  withShiftAltGr: '' },
-  Slash:        { vkey: 'VK_OEM_MINUS',  value: '-',  withShift: '_', withAltGr: '',  withShiftAltGr: '' },
-  ...
-]
-```
-
-## Supported OSes
- * linux (X11)
- * windows
- * mac
- * freebsd
-
-## Known issues
- * only tested from the Electron Main process
-
-## Developing
- * `npm install -g node-gyp`
- * `node-gyp configure` (for debugging use `node-gyp configure -d`)
- * `node-gyp build`
- * `npm test` (for debugging change `index.js` to load the node module from the `Debug` folder and press `F5`)
-
-## License
-[MIT](https://github.com/Microsoft/node-native-keymap/blob/master/License.txt)
diff --git a/node_modules/native-keymap/SECURITY.md b/node_modules/native-keymap/SECURITY.md
deleted file mode 100644
index a050f36..0000000
--- a/node_modules/native-keymap/SECURITY.md
+++ /dev/null
@@ -1,41 +0,0 @@
-<!-- BEGIN MICROSOFT SECURITY.MD V0.0.5 BLOCK -->
-
-## Security
-
-Microsoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).
-
-If you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc751383(v=technet.10)), please report it to us as described below.
-
-## Reporting Security Issues
-
-**Please do not report security vulnerabilities through public GitHub issues.**
-
-Instead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://msrc.microsoft.com/create-report).
-
-If you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://www.microsoft.com/en-us/msrc/pgp-key-msrc).
-
-You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://www.microsoft.com/msrc).
-
-Please include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:
-
-  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)
-  * Full paths of source file(s) related to the manifestation of the issue
-  * The location of the affected source code (tag/branch/commit or direct URL)
-  * Any special configuration required to reproduce the issue
-  * Step-by-step instructions to reproduce the issue
-  * Proof-of-concept or exploit code (if possible)
-  * Impact of the issue, including how an attacker might exploit the issue
-
-This information will help us triage your report more quickly.
-
-If you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://microsoft.com/msrc/bounty) page for more details about our active programs.
-
-## Preferred Languages
-
-We prefer all communications to be in English.
-
-## Policy
-
-Microsoft follows the principle of [Coordinated Vulnerability Disclosure](https://www.microsoft.com/en-us/msrc/cvd).
-
-<!-- END MICROSOFT SECURITY.MD BLOCK -->
diff --git a/node_modules/native-keymap/ThirdPartyNotices.txt b/node_modules/native-keymap/ThirdPartyNotices.txt
deleted file mode 100644
index 490780d..0000000
--- a/node_modules/native-keymap/ThirdPartyNotices.txt
+++ /dev/null
@@ -1,42 +0,0 @@
-THIRD-PARTY SOFTWARE NOTICES AND INFORMATION
-Do Not Translate or Localize
-
-This project incorporates material from the project(s) listed below (collectively, “Third Party Code”).
-Microsoft is not the original author of the Third Party Code.  The original copyright notice and license
-under which Microsoft received such Third Party Code are set out below. This Third Party Code is licensed
-to you under their original license terms set forth below.  Microsoft reserves all other rights not
-expressly granted, whether by implication, estoppel or otherwise.
-
-The following files/folders contain third party software:
-
-=========================================================================================================
-deps/chromium/**
----------------------------------------------------------------------------------------------------------
-// Copyright 2015 The Chromium Authors. All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are
-// met:
-//
-//    * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-//    * Redistributions in binary form must reproduce the above
-// copyright notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-//    * Neither the name of Google Inc. nor the names of its
-// contributors may be used to endorse or promote products derived from
-// this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-=========================================================================================================
diff --git a/node_modules/native-keymap/binding.gyp b/node_modules/native-keymap/binding.gyp
deleted file mode 100644
index 9e0db01..0000000
--- a/node_modules/native-keymap/binding.gyp
+++ /dev/null
@@ -1,86 +0,0 @@
-{
-  "targets": [
-    {
-      "target_name": "keymapping",
-      "sources": [
-        "src/string_conversion.cc",
-        "src/keymapping.cc"
-      ],
-      'msvs_configuration_attributes': {
-        'SpectreMitigation': 'Spectre'
-      },
-      'msvs_settings': {
-        'VCCLCompilerTool': {
-          'AdditionalOptions': [
-            '/guard:cf',
-            '/w34244',
-            '/we4267',
-            '/ZH:SHA_256'
-          ]
-        },
-        'VCLinkerTool': {
-          'AdditionalOptions': [
-            '/guard:cf'
-          ]
-        }
-      },
-      "conditions": [
-        ['OS=="linux"', {
-          "sources": [
-            "deps/chromium/x/keysym_to_unicode.cc",
-            "src/keyboard_x.cc"
-          ],
-          "include_dirs": [
-            "<!@(${PKG_CONFIG:-pkg-config} x11 xkbfile --cflags | sed s/-I//g)"
-          ],
-          "libraries": [
-            "<!@(${PKG_CONFIG:-pkg-config} x11 xkbfile --libs)"
-          ]
-        }],
-        ['OS=="freebsd"', {
-          "sources": [
-            "deps/chromium/x/keysym_to_unicode.cc",
-            "src/keyboard_x.cc"
-          ],
-          "include_dirs": [
-            "/usr/local/include"
-          ],
-          "link_settings": {
-            "libraries": [
-              "-lX11",
-              "-lxkbfile",
-              "-L/usr/local/lib"
-            ]
-          }
-        }],
-        ['OS=="win"', {
-          "sources": [
-            "src/keyboard_win.cc"
-          ]
-        }],
-        ['OS=="mac"', {
-          "sources": [
-            "src/keyboard_mac.mm"
-          ],
-          'link_settings' : {
-            'libraries' : [
-              '-framework Cocoa'
-            ]
-          }
-        }],
-        ['OS=="aix"', {
-          "sources": [
-            "deps/chromium/x/keysym_to_unicode.cc",
-            "src/keyboard_x.cc"
-          ],
-          "link_settings": {
-            "libraries": [
-              "-lX11",
-              "-lxkbfile"
-            ]
-          }
-        }]
-      ]
-    }
-  ]
-}
diff --git a/node_modules/native-keymap/build/Makefile b/node_modules/native-keymap/build/Makefile
deleted file mode 100644
index 7d78c4d..0000000
--- a/node_modules/native-keymap/build/Makefile
+++ /dev/null
@@ -1,347 +0,0 @@
-# We borrow heavily from the kernel build setup, though we are simpler since
-# we don't have Kconfig tweaking settings on us.
-
-# The implicit make rules have it looking for RCS files, among other things.
-# We instead explicitly write all the rules we care about.
-# It's even quicker (saves ~200ms) to pass -r on the command line.
-MAKEFLAGS=-r
-
-# The source directory tree.
-srcdir := ..
-abs_srcdir := $(abspath $(srcdir))
-
-# The name of the builddir.
-builddir_name ?= .
-
-# The V=1 flag on command line makes us verbosely print command lines.
-ifdef V
-  quiet=
-else
-  quiet=quiet_
-endif
-
-# Specify BUILDTYPE=Release on the command line for a release build.
-BUILDTYPE ?= Release
-
-# Directory all our build output goes into.
-# Note that this must be two directories beneath src/ for unit tests to pass,
-# as they reach into the src/ directory for data with relative paths.
-builddir ?= $(builddir_name)/$(BUILDTYPE)
-abs_builddir := $(abspath $(builddir))
-depsdir := $(builddir)/.deps
-
-# Object output directory.
-obj := $(builddir)/obj
-abs_obj := $(abspath $(obj))
-
-# We build up a list of every single one of the targets so we can slurp in the
-# generated dependency rule Makefiles in one pass.
-all_deps :=
-
-
-
-CC.target ?= $(CC)
-CFLAGS.target ?= $(CPPFLAGS) $(CFLAGS)
-CXX.target ?= $(CXX)
-CXXFLAGS.target ?= $(CPPFLAGS) $(CXXFLAGS)
-LINK.target ?= $(LINK)
-LDFLAGS.target ?= $(LDFLAGS)
-AR.target ?= $(AR)
-PLI.target ?= pli
-
-# C++ apps need to be linked with g++.
-LINK ?= $(CXX.target)
-
-# TODO(evan): move all cross-compilation logic to gyp-time so we don't need
-# to replicate this environment fallback in make as well.
-CC.host ?= gcc
-CFLAGS.host ?= $(CPPFLAGS_host) $(CFLAGS_host)
-CXX.host ?= g++
-CXXFLAGS.host ?= $(CPPFLAGS_host) $(CXXFLAGS_host)
-LINK.host ?= $(CXX.host)
-LDFLAGS.host ?= $(LDFLAGS_host)
-AR.host ?= ar
-PLI.host ?= pli
-
-# Define a dir function that can handle spaces.
-# http://www.gnu.org/software/make/manual/make.html#Syntax-of-Functions
-# "leading spaces cannot appear in the text of the first argument as written.
-# These characters can be put into the argument value by variable substitution."
-empty :=
-space := $(empty) $(empty)
-
-# http://stackoverflow.com/questions/1189781/using-make-dir-or-notdir-on-a-path-with-spaces
-replace_spaces = $(subst $(space),?,$1)
-unreplace_spaces = $(subst ?,$(space),$1)
-dirx = $(call unreplace_spaces,$(dir $(call replace_spaces,$1)))
-
-# Flags to make gcc output dependency info.  Note that you need to be
-# careful here to use the flags that ccache and distcc can understand.
-# We write to a dep file on the side first and then rename at the end
-# so we can't end up with a broken dep file.
-depfile = $(depsdir)/$(call replace_spaces,$@).d
-DEPFLAGS = -MMD -MF $(depfile).raw
-
-# We have to fixup the deps output in a few ways.
-# (1) the file output should mention the proper .o file.
-# ccache or distcc lose the path to the target, so we convert a rule of
-# the form:
-#   foobar.o: DEP1 DEP2
-# into
-#   path/to/foobar.o: DEP1 DEP2
-# (2) we want missing files not to cause us to fail to build.
-# We want to rewrite
-#   foobar.o: DEP1 DEP2 \
-#               DEP3
-# to
-#   DEP1:
-#   DEP2:
-#   DEP3:
-# so if the files are missing, they're just considered phony rules.
-# We have to do some pretty insane escaping to get those backslashes
-# and dollar signs past make, the shell, and sed at the same time.
-# Doesn't work with spaces, but that's fine: .d files have spaces in
-# their names replaced with other characters.
-define fixup_dep
-# The depfile may not exist if the input file didn't have any #includes.
-touch $(depfile).raw
-# Fixup path as in (1).
-sed -e "s|^$(notdir $@)|$@|" $(depfile).raw >> $(depfile)
-# Add extra rules as in (2).
-# We remove slashes and replace spaces with new lines;
-# remove blank lines;
-# delete the first line and append a colon to the remaining lines.
-sed -e 's|\\||' -e 'y| |\n|' $(depfile).raw |\
-  grep -v '^$$'                             |\
-  sed -e 1d -e 's|$$|:|'                     \
-    >> $(depfile)
-rm $(depfile).raw
-endef
-
-# Command definitions:
-# - cmd_foo is the actual command to run;
-# - quiet_cmd_foo is the brief-output summary of the command.
-
-quiet_cmd_cc = CC($(TOOLSET)) $@
-cmd_cc = $(CC.$(TOOLSET)) -o $@ $< $(GYP_CFLAGS) $(DEPFLAGS) $(CFLAGS.$(TOOLSET)) -c
-
-quiet_cmd_cxx = CXX($(TOOLSET)) $@
-cmd_cxx = $(CXX.$(TOOLSET)) -o $@ $< $(GYP_CXXFLAGS) $(DEPFLAGS) $(CXXFLAGS.$(TOOLSET)) -c
-
-quiet_cmd_objc = CXX($(TOOLSET)) $@
-cmd_objc = $(CC.$(TOOLSET)) $(GYP_OBJCFLAGS) $(DEPFLAGS) -c -o $@ $<
-
-quiet_cmd_objcxx = CXX($(TOOLSET)) $@
-cmd_objcxx = $(CXX.$(TOOLSET)) $(GYP_OBJCXXFLAGS) $(DEPFLAGS) -c -o $@ $<
-
-# Commands for precompiled header files.
-quiet_cmd_pch_c = CXX($(TOOLSET)) $@
-cmd_pch_c = $(CC.$(TOOLSET)) $(GYP_PCH_CFLAGS) $(DEPFLAGS) $(CXXFLAGS.$(TOOLSET)) -c -o $@ $<
-quiet_cmd_pch_cc = CXX($(TOOLSET)) $@
-cmd_pch_cc = $(CC.$(TOOLSET)) $(GYP_PCH_CXXFLAGS) $(DEPFLAGS) $(CXXFLAGS.$(TOOLSET)) -c -o $@ $<
-quiet_cmd_pch_m = CXX($(TOOLSET)) $@
-cmd_pch_m = $(CC.$(TOOLSET)) $(GYP_PCH_OBJCFLAGS) $(DEPFLAGS) -c -o $@ $<
-quiet_cmd_pch_mm = CXX($(TOOLSET)) $@
-cmd_pch_mm = $(CC.$(TOOLSET)) $(GYP_PCH_OBJCXXFLAGS) $(DEPFLAGS) -c -o $@ $<
-
-# gyp-mac-tool is written next to the root Makefile by gyp.
-# Use $(4) for the command, since $(2) and $(3) are used as flag by do_cmd
-# already.
-quiet_cmd_mac_tool = MACTOOL $(4) $<
-cmd_mac_tool = ./gyp-mac-tool $(4) $< "$@"
-
-quiet_cmd_mac_package_framework = PACKAGE FRAMEWORK $@
-cmd_mac_package_framework = ./gyp-mac-tool package-framework "$@" $(4)
-
-quiet_cmd_infoplist = INFOPLIST $@
-cmd_infoplist = $(CC.$(TOOLSET)) -E -P -Wno-trigraphs -x c $(INFOPLIST_DEFINES) "$<" -o "$@"
-
-quiet_cmd_touch = TOUCH $@
-cmd_touch = touch $@
-
-quiet_cmd_copy = COPY $@
-# send stderr to /dev/null to ignore messages when linking directories.
-cmd_copy = ln -f "$<" "$@" 2>/dev/null || (rm -rf "$@" && cp -af "$<" "$@")
-
-quiet_cmd_symlink = SYMLINK $@
-cmd_symlink = ln -sf "$<" "$@"
-
-quiet_cmd_alink = LIBTOOL-STATIC $@
-cmd_alink = rm -f $@ && ./gyp-mac-tool filter-libtool libtool $(GYP_LIBTOOLFLAGS) -static -o $@ $(filter %.o,$^)
-
-quiet_cmd_link = LINK($(TOOLSET)) $@
-cmd_link = $(LINK.$(TOOLSET)) $(GYP_LDFLAGS) $(LDFLAGS.$(TOOLSET)) -o "$@" $(LD_INPUTS) $(LIBS)
-
-quiet_cmd_solink = SOLINK($(TOOLSET)) $@
-cmd_solink = $(LINK.$(TOOLSET)) -shared $(GYP_LDFLAGS) $(LDFLAGS.$(TOOLSET)) -o "$@" $(LD_INPUTS) $(LIBS)
-
-quiet_cmd_solink_module = SOLINK_MODULE($(TOOLSET)) $@
-cmd_solink_module = $(LINK.$(TOOLSET)) -bundle $(GYP_LDFLAGS) $(LDFLAGS.$(TOOLSET)) -o $@ $(filter-out FORCE_DO_CMD, $^) $(LIBS)
-
-
-# Define an escape_quotes function to escape single quotes.
-# This allows us to handle quotes properly as long as we always use
-# use single quotes and escape_quotes.
-escape_quotes = $(subst ','\'',$(1))
-# This comment is here just to include a ' to unconfuse syntax highlighting.
-# Define an escape_vars function to escape '$' variable syntax.
-# This allows us to read/write command lines with shell variables (e.g.
-# $LD_LIBRARY_PATH), without triggering make substitution.
-escape_vars = $(subst $$,$$$$,$(1))
-# Helper that expands to a shell command to echo a string exactly as it is in
-# make. This uses printf instead of echo because printf's behaviour with respect
-# to escape sequences is more portable than echo's across different shells
-# (e.g., dash, bash).
-exact_echo = printf '%s\n' '$(call escape_quotes,$(1))'
-
-# Helper to compare the command we're about to run against the command
-# we logged the last time we ran the command.  Produces an empty
-# string (false) when the commands match.
-# Tricky point: Make has no string-equality test function.
-# The kernel uses the following, but it seems like it would have false
-# positives, where one string reordered its arguments.
-#   arg_check = $(strip $(filter-out $(cmd_$(1)), $(cmd_$@)) \
-#                       $(filter-out $(cmd_$@), $(cmd_$(1))))
-# We instead substitute each for the empty string into the other, and
-# say they're equal if both substitutions produce the empty string.
-# .d files contain ? instead of spaces, take that into account.
-command_changed = $(or $(subst $(cmd_$(1)),,$(cmd_$(call replace_spaces,$@))),\
-                       $(subst $(cmd_$(call replace_spaces,$@)),,$(cmd_$(1))))
-
-# Helper that is non-empty when a prerequisite changes.
-# Normally make does this implicitly, but we force rules to always run
-# so we can check their command lines.
-#   $? -- new prerequisites
-#   $| -- order-only dependencies
-prereq_changed = $(filter-out FORCE_DO_CMD,$(filter-out $|,$?))
-
-# Helper that executes all postbuilds until one fails.
-define do_postbuilds
-  @E=0;\
-  for p in $(POSTBUILDS); do\
-    eval $$p;\
-    E=$$?;\
-    if [ $$E -ne 0 ]; then\
-      break;\
-    fi;\
-  done;\
-  if [ $$E -ne 0 ]; then\
-    rm -rf "$@";\
-    exit $$E;\
-  fi
-endef
-
-# do_cmd: run a command via the above cmd_foo names, if necessary.
-# Should always run for a given target to handle command-line changes.
-# Second argument, if non-zero, makes it do asm/C/C++ dependency munging.
-# Third argument, if non-zero, makes it do POSTBUILDS processing.
-# Note: We intentionally do NOT call dirx for depfile, since it contains ? for
-# spaces already and dirx strips the ? characters.
-define do_cmd
-$(if $(or $(command_changed),$(prereq_changed)),
-  @$(call exact_echo,  $($(quiet)cmd_$(1)))
-  @mkdir -p "$(call dirx,$@)" "$(dir $(depfile))"
-  $(if $(findstring flock,$(word 2,$(cmd_$1))),
-    @$(cmd_$(1))
-    @echo "  $(quiet_cmd_$(1)): Finished",
-    @$(cmd_$(1))
-  )
-  @$(call exact_echo,$(call escape_vars,cmd_$(call replace_spaces,$@) := $(cmd_$(1)))) > $(depfile)
-  @$(if $(2),$(fixup_dep))
-  $(if $(and $(3), $(POSTBUILDS)),
-    $(call do_postbuilds)
-  )
-)
-endef
-
-# Declare the "all" target first so it is the default,
-# even though we don't have the deps yet.
-.PHONY: all
-all:
-
-# make looks for ways to re-generate included makefiles, but in our case, we
-# don't have a direct way. Explicitly telling make that it has nothing to do
-# for them makes it go faster.
-%.d: ;
-
-# Use FORCE_DO_CMD to force a target to run.  Should be coupled with
-# do_cmd.
-.PHONY: FORCE_DO_CMD
-FORCE_DO_CMD:
-
-TOOLSET := target
-# Suffix rules, putting all outputs into $(obj).
-$(obj).$(TOOLSET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
-	@$(call do_cmd,cc,1)
-$(obj).$(TOOLSET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
-	@$(call do_cmd,cxx,1)
-$(obj).$(TOOLSET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
-	@$(call do_cmd,cxx,1)
-$(obj).$(TOOLSET)/%.o: $(srcdir)/%.cxx FORCE_DO_CMD
-	@$(call do_cmd,cxx,1)
-$(obj).$(TOOLSET)/%.o: $(srcdir)/%.m FORCE_DO_CMD
-	@$(call do_cmd,objc,1)
-$(obj).$(TOOLSET)/%.o: $(srcdir)/%.mm FORCE_DO_CMD
-	@$(call do_cmd,objcxx,1)
-$(obj).$(TOOLSET)/%.o: $(srcdir)/%.s FORCE_DO_CMD
-	@$(call do_cmd,cc,1)
-$(obj).$(TOOLSET)/%.o: $(srcdir)/%.S FORCE_DO_CMD
-	@$(call do_cmd,cc,1)
-
-# Try building from generated source, too.
-$(obj).$(TOOLSET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
-	@$(call do_cmd,cc,1)
-$(obj).$(TOOLSET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
-	@$(call do_cmd,cxx,1)
-$(obj).$(TOOLSET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
-	@$(call do_cmd,cxx,1)
-$(obj).$(TOOLSET)/%.o: $(obj).$(TOOLSET)/%.cxx FORCE_DO_CMD
-	@$(call do_cmd,cxx,1)
-$(obj).$(TOOLSET)/%.o: $(obj).$(TOOLSET)/%.m FORCE_DO_CMD
-	@$(call do_cmd,objc,1)
-$(obj).$(TOOLSET)/%.o: $(obj).$(TOOLSET)/%.mm FORCE_DO_CMD
-	@$(call do_cmd,objcxx,1)
-$(obj).$(TOOLSET)/%.o: $(obj).$(TOOLSET)/%.s FORCE_DO_CMD
-	@$(call do_cmd,cc,1)
-$(obj).$(TOOLSET)/%.o: $(obj).$(TOOLSET)/%.S FORCE_DO_CMD
-	@$(call do_cmd,cc,1)
-
-$(obj).$(TOOLSET)/%.o: $(obj)/%.c FORCE_DO_CMD
-	@$(call do_cmd,cc,1)
-$(obj).$(TOOLSET)/%.o: $(obj)/%.cc FORCE_DO_CMD
-	@$(call do_cmd,cxx,1)
-$(obj).$(TOOLSET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
-	@$(call do_cmd,cxx,1)
-$(obj).$(TOOLSET)/%.o: $(obj)/%.cxx FORCE_DO_CMD
-	@$(call do_cmd,cxx,1)
-$(obj).$(TOOLSET)/%.o: $(obj)/%.m FORCE_DO_CMD
-	@$(call do_cmd,objc,1)
-$(obj).$(TOOLSET)/%.o: $(obj)/%.mm FORCE_DO_CMD
-	@$(call do_cmd,objcxx,1)
-$(obj).$(TOOLSET)/%.o: $(obj)/%.s FORCE_DO_CMD
-	@$(call do_cmd,cc,1)
-$(obj).$(TOOLSET)/%.o: $(obj)/%.S FORCE_DO_CMD
-	@$(call do_cmd,cc,1)
-
-
-ifeq ($(strip $(foreach prefix,$(NO_LOAD),\
-    $(findstring $(join ^,$(prefix)),\
-                 $(join ^,keymapping.target.mk)))),)
-  include keymapping.target.mk
-endif
-
-quiet_cmd_regen_makefile = ACTION Regenerating $@
-cmd_regen_makefile = cd $(srcdir); /Users/johnlindquist/.volta/tools/image/node/20.16.0/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py -fmake --ignore-environment "-Dlibrary=shared_library" "-Dvisibility=default" "-Dnode_root_dir=/Users/johnlindquist/Library/Caches/node-gyp/20.16.0" "-Dnode_gyp_dir=/Users/johnlindquist/.volta/tools/image/node/20.16.0/lib/node_modules/npm/node_modules/node-gyp" "-Dnode_lib_file=/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/<(target_arch)/node.lib" "-Dmodule_root_dir=/private/var/folders/h4/h6yds2nj2bx141vxzb4km39m0000gp/T/tmp-14377BVKvASvxSyBA/node_modules/native-keymap" "-Dnode_engine=v8" "--depth=." "-Goutput_dir=." "--generator-output=build" -I/private/var/folders/h4/h6yds2nj2bx141vxzb4km39m0000gp/T/tmp-14377BVKvASvxSyBA/node_modules/native-keymap/build/config.gypi -I/Users/johnlindquist/.volta/tools/image/node/20.16.0/lib/node_modules/npm/node_modules/node-gyp/addon.gypi -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/common.gypi "--toplevel-dir=." binding.gyp
-Makefile: $(srcdir)/../../../../../../../../../Users/johnlindquist/.volta/tools/image/node/20.16.0/lib/node_modules/npm/node_modules/node-gyp/addon.gypi $(srcdir)/binding.gyp $(srcdir)/../../../../../../../../../Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/common.gypi $(srcdir)/build/config.gypi
-	$(call do_cmd,regen_makefile)
-
-# "all" is a concatenation of the "all" targets from all the included
-# sub-makefiles. This is just here to clarify.
-all:
-
-# Add in dependency-tracking rules.  $(all_deps) is the list of every single
-# target in our tree. Only consider the ones with .d (dependency) info:
-d_files := $(wildcard $(foreach f,$(all_deps),$(depsdir)/$(f).d))
-ifneq ($(d_files),)
-  include $(d_files)
-endif
diff --git a/node_modules/native-keymap/build/Release/.deps/Release/keymapping.node.d b/node_modules/native-keymap/build/Release/.deps/Release/keymapping.node.d
deleted file mode 100644
index 24b6f49..0000000
--- a/node_modules/native-keymap/build/Release/.deps/Release/keymapping.node.d
+++ /dev/null
@@ -1 +0,0 @@
-cmd_Release/keymapping.node := c++ -bundle -undefined dynamic_lookup -Wl,-search_paths_first -mmacosx-version-min=10.15 -arch arm64 -L./Release -stdlib=libc++  -o Release/keymapping.node Release/obj.target/keymapping/src/string_conversion.o Release/obj.target/keymapping/src/keymapping.o Release/obj.target/keymapping/src/keyboard_mac.o -framework Cocoa
diff --git a/node_modules/native-keymap/build/Release/.deps/Release/obj.target/keymapping/src/keyboard_mac.o.d b/node_modules/native-keymap/build/Release/.deps/Release/obj.target/keymapping/src/keyboard_mac.o.d
deleted file mode 100644
index 15e6656..0000000
--- a/node_modules/native-keymap/build/Release/.deps/Release/obj.target/keymapping/src/keyboard_mac.o.d
+++ /dev/null
@@ -1,21 +0,0 @@
-cmd_Release/obj.target/keymapping/src/keyboard_mac.o := c++ '-DNODE_GYP_MODULE_NAME=keymapping' '-DUSING_UV_SHARED=1' '-DUSING_V8_SHARED=1' '-DV8_DEPRECATION_WARNINGS=1' '-D_GLIBCXX_USE_CXX11_ABI=1' '-D_DARWIN_USE_64_BIT_INODE=1' '-D_LARGEFILE_SOURCE' '-D_FILE_OFFSET_BITS=64' '-DOPENSSL_NO_PINSHARED' '-DOPENSSL_THREADS' '-DBUILDING_NODE_EXTENSION' -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/src -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/openssl/config -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/openssl/openssl/include -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/uv/include -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/zlib -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/v8/include  -O3 -gdwarf-2 -mmacosx-version-min=10.15 -arch arm64 -Wall -Wendif-labels -W -Wno-unused-parameter -std=gnu++17 -stdlib=libc++ -fno-rtti -fno-exceptions -fno-strict-aliasing  -MMD -MF ./Release/.deps/Release/obj.target/keymapping/src/keyboard_mac.o.d.raw -c -o Release/obj.target/keymapping/src/keyboard_mac.o ../src/keyboard_mac.mm
-Release/obj.target/keymapping/src/keyboard_mac.o: ../src/keyboard_mac.mm \
-  ../src/string_conversion.h ../src/keymapping.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/node_api.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/js_native_api.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/js_native_api_types.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/node_api_types.h \
-  ../src/../deps/chromium/keyboard_codes.h ../src/common.h \
-  ../src/../deps/chromium/macros.h \
-  ../src/../deps/chromium/dom_code_data.inc
-../src/keyboard_mac.mm:
-../src/string_conversion.h:
-../src/keymapping.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/node_api.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/js_native_api.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/js_native_api_types.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/node_api_types.h:
-../src/../deps/chromium/keyboard_codes.h:
-../src/common.h:
-../src/../deps/chromium/macros.h:
-../src/../deps/chromium/dom_code_data.inc:
diff --git a/node_modules/native-keymap/build/Release/.deps/Release/obj.target/keymapping/src/keymapping.o.d b/node_modules/native-keymap/build/Release/.deps/Release/obj.target/keymapping/src/keymapping.o.d
deleted file mode 100644
index 88391f0..0000000
--- a/node_modules/native-keymap/build/Release/.deps/Release/obj.target/keymapping/src/keymapping.o.d
+++ /dev/null
@@ -1,116 +0,0 @@
-cmd_Release/obj.target/keymapping/src/keymapping.o := c++ -o Release/obj.target/keymapping/src/keymapping.o ../src/keymapping.cc '-DNODE_GYP_MODULE_NAME=keymapping' '-DUSING_UV_SHARED=1' '-DUSING_V8_SHARED=1' '-DV8_DEPRECATION_WARNINGS=1' '-D_GLIBCXX_USE_CXX11_ABI=1' '-D_DARWIN_USE_64_BIT_INODE=1' '-D_LARGEFILE_SOURCE' '-D_FILE_OFFSET_BITS=64' '-DOPENSSL_NO_PINSHARED' '-DOPENSSL_THREADS' '-DBUILDING_NODE_EXTENSION' -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/src -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/openssl/config -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/openssl/openssl/include -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/uv/include -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/zlib -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/v8/include  -O3 -gdwarf-2 -mmacosx-version-min=10.15 -arch arm64 -Wall -Wendif-labels -W -Wno-unused-parameter -std=gnu++17 -stdlib=libc++ -fno-rtti -fno-exceptions -fno-strict-aliasing -MMD -MF ./Release/.deps/Release/obj.target/keymapping/src/keymapping.o.d.raw   -c
-Release/obj.target/keymapping/src/keymapping.o: ../src/keymapping.cc \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/node.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/cppgc/common.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8config.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-array-buffer.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-local-handle.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-internal.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-version.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-object.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-maybe.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-persistent-handle.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-weak-callback-info.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-primitive.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-data.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-value.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-traced-handle.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-container.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-context.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-snapshot.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-date.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-debug.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-script.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-callbacks.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-promise.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-message.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-exception.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-extension.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-external.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-function.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-function-callback.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-template.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-memory-span.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-initialization.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-isolate.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-embedder-heap.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-microtask.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-statistics.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-unwinder.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-embedder-state-scope.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-platform.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-json.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-locker.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-microtask-queue.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-primitive-object.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-proxy.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-regexp.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-typed-array.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-value-serializer.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-wasm.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/node_version.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/node_api.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/js_native_api.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/js_native_api_types.h \
-  /Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/node_api_types.h \
-  ../src/keymapping.h ../src/../deps/chromium/keyboard_codes.h \
-  ../src/common.h
-../src/keymapping.cc:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/node.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/cppgc/common.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8config.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-array-buffer.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-local-handle.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-internal.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-version.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-object.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-maybe.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-persistent-handle.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-weak-callback-info.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-primitive.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-data.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-value.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-traced-handle.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-container.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-context.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-snapshot.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-date.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-debug.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-script.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-callbacks.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-promise.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-message.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-exception.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-extension.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-external.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-function.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-function-callback.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-template.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-memory-span.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-initialization.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-isolate.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-embedder-heap.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-microtask.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-statistics.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-unwinder.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-embedder-state-scope.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-platform.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-json.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-locker.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-microtask-queue.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-primitive-object.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-proxy.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-regexp.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-typed-array.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-value-serializer.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/v8-wasm.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/node_version.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/node_api.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/js_native_api.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/js_native_api_types.h:
-/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node/node_api_types.h:
-../src/keymapping.h:
-../src/../deps/chromium/keyboard_codes.h:
-../src/common.h:
diff --git a/node_modules/native-keymap/build/Release/.deps/Release/obj.target/keymapping/src/string_conversion.o.d b/node_modules/native-keymap/build/Release/.deps/Release/obj.target/keymapping/src/string_conversion.o.d
deleted file mode 100644
index 1912c5f..0000000
--- a/node_modules/native-keymap/build/Release/.deps/Release/obj.target/keymapping/src/string_conversion.o.d
+++ /dev/null
@@ -1,5 +0,0 @@
-cmd_Release/obj.target/keymapping/src/string_conversion.o := c++ -o Release/obj.target/keymapping/src/string_conversion.o ../src/string_conversion.cc '-DNODE_GYP_MODULE_NAME=keymapping' '-DUSING_UV_SHARED=1' '-DUSING_V8_SHARED=1' '-DV8_DEPRECATION_WARNINGS=1' '-D_GLIBCXX_USE_CXX11_ABI=1' '-D_DARWIN_USE_64_BIT_INODE=1' '-D_LARGEFILE_SOURCE' '-D_FILE_OFFSET_BITS=64' '-DOPENSSL_NO_PINSHARED' '-DOPENSSL_THREADS' '-DBUILDING_NODE_EXTENSION' -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/src -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/openssl/config -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/openssl/openssl/include -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/uv/include -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/zlib -I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/v8/include  -O3 -gdwarf-2 -mmacosx-version-min=10.15 -arch arm64 -Wall -Wendif-labels -W -Wno-unused-parameter -std=gnu++17 -stdlib=libc++ -fno-rtti -fno-exceptions -fno-strict-aliasing -MMD -MF ./Release/.deps/Release/obj.target/keymapping/src/string_conversion.o.d.raw   -c
-Release/obj.target/keymapping/src/string_conversion.o: \
-  ../src/string_conversion.cc ../src/string_conversion.h
-../src/string_conversion.cc:
-../src/string_conversion.h:
diff --git a/node_modules/native-keymap/build/Release/keymapping.node b/node_modules/native-keymap/build/Release/keymapping.node
deleted file mode 100755
index ad2c671..0000000
Binary files a/node_modules/native-keymap/build/Release/keymapping.node and /dev/null differ
diff --git a/node_modules/native-keymap/build/Release/obj.target/keymapping/src/keyboard_mac.o b/node_modules/native-keymap/build/Release/obj.target/keymapping/src/keyboard_mac.o
deleted file mode 100644
index 1ea656a..0000000
Binary files a/node_modules/native-keymap/build/Release/obj.target/keymapping/src/keyboard_mac.o and /dev/null differ
diff --git a/node_modules/native-keymap/build/Release/obj.target/keymapping/src/keymapping.o b/node_modules/native-keymap/build/Release/obj.target/keymapping/src/keymapping.o
deleted file mode 100644
index 09cd953..0000000
Binary files a/node_modules/native-keymap/build/Release/obj.target/keymapping/src/keymapping.o and /dev/null differ
diff --git a/node_modules/native-keymap/build/Release/obj.target/keymapping/src/string_conversion.o b/node_modules/native-keymap/build/Release/obj.target/keymapping/src/string_conversion.o
deleted file mode 100644
index 7f473d4..0000000
Binary files a/node_modules/native-keymap/build/Release/obj.target/keymapping/src/string_conversion.o and /dev/null differ
diff --git a/node_modules/native-keymap/build/binding.Makefile b/node_modules/native-keymap/build/binding.Makefile
deleted file mode 100644
index dd10ad9..0000000
--- a/node_modules/native-keymap/build/binding.Makefile
+++ /dev/null
@@ -1,6 +0,0 @@
-# This file is generated by gyp; do not edit.
-
-export builddir_name ?= ./build/.
-.PHONY: all
-all:
-	$(MAKE) keymapping
diff --git a/node_modules/native-keymap/build/config.gypi b/node_modules/native-keymap/build/config.gypi
deleted file mode 100644
index 9bc614f..0000000
--- a/node_modules/native-keymap/build/config.gypi
+++ /dev/null
@@ -1,436 +0,0 @@
-# Do not edit. File was generated by node-gyp's "configure" step
-{
-  "target_defaults": {
-    "cflags": [],
-    "default_configuration": "Release",
-    "defines": [],
-    "include_dirs": [],
-    "libraries": [],
-    "msvs_configuration_platform": "ARM64",
-    "xcode_configuration_platform": "arm64"
-  },
-  "variables": {
-    "arm_fpu": "neon",
-    "asan": 0,
-    "coverage": "false",
-    "dcheck_always_on": 0,
-    "debug_nghttp2": "false",
-    "debug_node": "false",
-    "enable_lto": "false",
-    "enable_pgo_generate": "false",
-    "enable_pgo_use": "false",
-    "error_on_warn": "false",
-    "force_dynamic_crt": 0,
-    "host_arch": "arm64",
-    "icu_data_in": "../../deps/icu-tmp/icudt75l.dat",
-    "icu_endianness": "l",
-    "icu_gyp_path": "tools/icu/icu-generic.gyp",
-    "icu_path": "deps/icu-small",
-    "icu_small": "false",
-    "icu_ver_major": "75",
-    "is_debug": 0,
-    "libdir": "lib",
-    "llvm_version": "13.0",
-    "napi_build_version": "9",
-    "node_builtin_shareable_builtins": [
-      "deps/cjs-module-lexer/lexer.js",
-      "deps/cjs-module-lexer/dist/lexer.js",
-      "deps/undici/undici.js"
-    ],
-    "node_byteorder": "little",
-    "node_debug_lib": "false",
-    "node_enable_d8": "false",
-    "node_enable_v8_vtunejit": "false",
-    "node_fipsinstall": "false",
-    "node_install_corepack": "true",
-    "node_install_npm": "true",
-    "node_library_files": [
-      "lib/_http_agent.js",
-      "lib/_http_client.js",
-      "lib/_http_common.js",
-      "lib/_http_incoming.js",
-      "lib/_http_outgoing.js",
-      "lib/_http_server.js",
-      "lib/_stream_duplex.js",
-      "lib/_stream_passthrough.js",
-      "lib/_stream_readable.js",
-      "lib/_stream_transform.js",
-      "lib/_stream_wrap.js",
-      "lib/_stream_writable.js",
-      "lib/_tls_common.js",
-      "lib/_tls_wrap.js",
-      "lib/assert.js",
-      "lib/assert/strict.js",
-      "lib/async_hooks.js",
-      "lib/buffer.js",
-      "lib/child_process.js",
-      "lib/cluster.js",
-      "lib/console.js",
-      "lib/constants.js",
-      "lib/crypto.js",
-      "lib/dgram.js",
-      "lib/diagnostics_channel.js",
-      "lib/dns.js",
-      "lib/dns/promises.js",
-      "lib/domain.js",
-      "lib/events.js",
-      "lib/fs.js",
-      "lib/fs/promises.js",
-      "lib/http.js",
-      "lib/http2.js",
-      "lib/https.js",
-      "lib/inspector.js",
-      "lib/inspector/promises.js",
-      "lib/internal/abort_controller.js",
-      "lib/internal/assert.js",
-      "lib/internal/assert/assertion_error.js",
-      "lib/internal/assert/calltracker.js",
-      "lib/internal/async_hooks.js",
-      "lib/internal/blob.js",
-      "lib/internal/blocklist.js",
-      "lib/internal/bootstrap/node.js",
-      "lib/internal/bootstrap/realm.js",
-      "lib/internal/bootstrap/shadow_realm.js",
-      "lib/internal/bootstrap/switches/does_not_own_process_state.js",
-      "lib/internal/bootstrap/switches/does_own_process_state.js",
-      "lib/internal/bootstrap/switches/is_main_thread.js",
-      "lib/internal/bootstrap/switches/is_not_main_thread.js",
-      "lib/internal/bootstrap/web/exposed-wildcard.js",
-      "lib/internal/bootstrap/web/exposed-window-or-worker.js",
-      "lib/internal/buffer.js",
-      "lib/internal/child_process.js",
-      "lib/internal/child_process/serialization.js",
-      "lib/internal/cli_table.js",
-      "lib/internal/cluster/child.js",
-      "lib/internal/cluster/primary.js",
-      "lib/internal/cluster/round_robin_handle.js",
-      "lib/internal/cluster/shared_handle.js",
-      "lib/internal/cluster/utils.js",
-      "lib/internal/cluster/worker.js",
-      "lib/internal/console/constructor.js",
-      "lib/internal/console/global.js",
-      "lib/internal/constants.js",
-      "lib/internal/crypto/aes.js",
-      "lib/internal/crypto/certificate.js",
-      "lib/internal/crypto/cfrg.js",
-      "lib/internal/crypto/cipher.js",
-      "lib/internal/crypto/diffiehellman.js",
-      "lib/internal/crypto/ec.js",
-      "lib/internal/crypto/hash.js",
-      "lib/internal/crypto/hashnames.js",
-      "lib/internal/crypto/hkdf.js",
-      "lib/internal/crypto/keygen.js",
-      "lib/internal/crypto/keys.js",
-      "lib/internal/crypto/mac.js",
-      "lib/internal/crypto/pbkdf2.js",
-      "lib/internal/crypto/random.js",
-      "lib/internal/crypto/rsa.js",
-      "lib/internal/crypto/scrypt.js",
-      "lib/internal/crypto/sig.js",
-      "lib/internal/crypto/util.js",
-      "lib/internal/crypto/webcrypto.js",
-      "lib/internal/crypto/webidl.js",
-      "lib/internal/crypto/x509.js",
-      "lib/internal/debugger/inspect.js",
-      "lib/internal/debugger/inspect_client.js",
-      "lib/internal/debugger/inspect_repl.js",
-      "lib/internal/dgram.js",
-      "lib/internal/dns/callback_resolver.js",
-      "lib/internal/dns/promises.js",
-      "lib/internal/dns/utils.js",
-      "lib/internal/encoding.js",
-      "lib/internal/error_serdes.js",
-      "lib/internal/errors.js",
-      "lib/internal/event_target.js",
-      "lib/internal/events/abort_listener.js",
-      "lib/internal/events/symbols.js",
-      "lib/internal/file.js",
-      "lib/internal/fixed_queue.js",
-      "lib/internal/freelist.js",
-      "lib/internal/freeze_intrinsics.js",
-      "lib/internal/fs/cp/cp-sync.js",
-      "lib/internal/fs/cp/cp.js",
-      "lib/internal/fs/dir.js",
-      "lib/internal/fs/promises.js",
-      "lib/internal/fs/read/context.js",
-      "lib/internal/fs/recursive_watch.js",
-      "lib/internal/fs/rimraf.js",
-      "lib/internal/fs/streams.js",
-      "lib/internal/fs/sync_write_stream.js",
-      "lib/internal/fs/utils.js",
-      "lib/internal/fs/watchers.js",
-      "lib/internal/heap_utils.js",
-      "lib/internal/histogram.js",
-      "lib/internal/http.js",
-      "lib/internal/http2/compat.js",
-      "lib/internal/http2/core.js",
-      "lib/internal/http2/util.js",
-      "lib/internal/idna.js",
-      "lib/internal/inspector_async_hook.js",
-      "lib/internal/js_stream_socket.js",
-      "lib/internal/legacy/processbinding.js",
-      "lib/internal/linkedlist.js",
-      "lib/internal/main/check_syntax.js",
-      "lib/internal/main/embedding.js",
-      "lib/internal/main/eval_stdin.js",
-      "lib/internal/main/eval_string.js",
-      "lib/internal/main/inspect.js",
-      "lib/internal/main/mksnapshot.js",
-      "lib/internal/main/print_help.js",
-      "lib/internal/main/prof_process.js",
-      "lib/internal/main/repl.js",
-      "lib/internal/main/run_main_module.js",
-      "lib/internal/main/test_runner.js",
-      "lib/internal/main/watch_mode.js",
-      "lib/internal/main/worker_thread.js",
-      "lib/internal/mime.js",
-      "lib/internal/modules/cjs/loader.js",
-      "lib/internal/modules/esm/assert.js",
-      "lib/internal/modules/esm/create_dynamic_module.js",
-      "lib/internal/modules/esm/fetch_module.js",
-      "lib/internal/modules/esm/formats.js",
-      "lib/internal/modules/esm/get_format.js",
-      "lib/internal/modules/esm/hooks.js",
-      "lib/internal/modules/esm/initialize_import_meta.js",
-      "lib/internal/modules/esm/load.js",
-      "lib/internal/modules/esm/loader.js",
-      "lib/internal/modules/esm/module_job.js",
-      "lib/internal/modules/esm/module_map.js",
-      "lib/internal/modules/esm/package_config.js",
-      "lib/internal/modules/esm/resolve.js",
-      "lib/internal/modules/esm/shared_constants.js",
-      "lib/internal/modules/esm/translators.js",
-      "lib/internal/modules/esm/utils.js",
-      "lib/internal/modules/esm/worker.js",
-      "lib/internal/modules/helpers.js",
-      "lib/internal/modules/package_json_reader.js",
-      "lib/internal/modules/run_main.js",
-      "lib/internal/navigator.js",
-      "lib/internal/net.js",
-      "lib/internal/options.js",
-      "lib/internal/per_context/domexception.js",
-      "lib/internal/per_context/messageport.js",
-      "lib/internal/per_context/primordials.js",
-      "lib/internal/perf/event_loop_delay.js",
-      "lib/internal/perf/event_loop_utilization.js",
-      "lib/internal/perf/nodetiming.js",
-      "lib/internal/perf/observe.js",
-      "lib/internal/perf/performance.js",
-      "lib/internal/perf/performance_entry.js",
-      "lib/internal/perf/resource_timing.js",
-      "lib/internal/perf/timerify.js",
-      "lib/internal/perf/usertiming.js",
-      "lib/internal/perf/utils.js",
-      "lib/internal/policy/manifest.js",
-      "lib/internal/policy/sri.js",
-      "lib/internal/priority_queue.js",
-      "lib/internal/process/execution.js",
-      "lib/internal/process/per_thread.js",
-      "lib/internal/process/permission.js",
-      "lib/internal/process/policy.js",
-      "lib/internal/process/pre_execution.js",
-      "lib/internal/process/promises.js",
-      "lib/internal/process/report.js",
-      "lib/internal/process/signal.js",
-      "lib/internal/process/task_queues.js",
-      "lib/internal/process/warning.js",
-      "lib/internal/process/worker_thread_only.js",
-      "lib/internal/promise_hooks.js",
-      "lib/internal/querystring.js",
-      "lib/internal/readline/callbacks.js",
-      "lib/internal/readline/emitKeypressEvents.js",
-      "lib/internal/readline/interface.js",
-      "lib/internal/readline/promises.js",
-      "lib/internal/readline/utils.js",
-      "lib/internal/repl.js",
-      "lib/internal/repl/await.js",
-      "lib/internal/repl/history.js",
-      "lib/internal/repl/utils.js",
-      "lib/internal/socket_list.js",
-      "lib/internal/socketaddress.js",
-      "lib/internal/source_map/prepare_stack_trace.js",
-      "lib/internal/source_map/source_map.js",
-      "lib/internal/source_map/source_map_cache.js",
-      "lib/internal/stream_base_commons.js",
-      "lib/internal/streams/add-abort-signal.js",
-      "lib/internal/streams/compose.js",
-      "lib/internal/streams/destroy.js",
-      "lib/internal/streams/duplex.js",
-      "lib/internal/streams/duplexify.js",
-      "lib/internal/streams/end-of-stream.js",
-      "lib/internal/streams/from.js",
-      "lib/internal/streams/lazy_transform.js",
-      "lib/internal/streams/legacy.js",
-      "lib/internal/streams/operators.js",
-      "lib/internal/streams/passthrough.js",
-      "lib/internal/streams/pipeline.js",
-      "lib/internal/streams/readable.js",
-      "lib/internal/streams/state.js",
-      "lib/internal/streams/transform.js",
-      "lib/internal/streams/utils.js",
-      "lib/internal/streams/writable.js",
-      "lib/internal/test/binding.js",
-      "lib/internal/test/transfer.js",
-      "lib/internal/test_runner/coverage.js",
-      "lib/internal/test_runner/harness.js",
-      "lib/internal/test_runner/mock/mock.js",
-      "lib/internal/test_runner/mock/mock_timers.js",
-      "lib/internal/test_runner/reporter/dot.js",
-      "lib/internal/test_runner/reporter/junit.js",
-      "lib/internal/test_runner/reporter/lcov.js",
-      "lib/internal/test_runner/reporter/spec.js",
-      "lib/internal/test_runner/reporter/tap.js",
-      "lib/internal/test_runner/reporter/v8-serializer.js",
-      "lib/internal/test_runner/runner.js",
-      "lib/internal/test_runner/test.js",
-      "lib/internal/test_runner/tests_stream.js",
-      "lib/internal/test_runner/utils.js",
-      "lib/internal/timers.js",
-      "lib/internal/tls/secure-context.js",
-      "lib/internal/tls/secure-pair.js",
-      "lib/internal/trace_events_async_hooks.js",
-      "lib/internal/tty.js",
-      "lib/internal/url.js",
-      "lib/internal/util.js",
-      "lib/internal/util/colors.js",
-      "lib/internal/util/comparisons.js",
-      "lib/internal/util/debuglog.js",
-      "lib/internal/util/embedding.js",
-      "lib/internal/util/inspect.js",
-      "lib/internal/util/inspector.js",
-      "lib/internal/util/iterable_weak_map.js",
-      "lib/internal/util/parse_args/parse_args.js",
-      "lib/internal/util/parse_args/utils.js",
-      "lib/internal/util/types.js",
-      "lib/internal/v8/startup_snapshot.js",
-      "lib/internal/v8_prof_polyfill.js",
-      "lib/internal/v8_prof_processor.js",
-      "lib/internal/validators.js",
-      "lib/internal/vm.js",
-      "lib/internal/vm/module.js",
-      "lib/internal/wasm_web_api.js",
-      "lib/internal/watch_mode/files_watcher.js",
-      "lib/internal/watchdog.js",
-      "lib/internal/webidl.js",
-      "lib/internal/webstreams/adapters.js",
-      "lib/internal/webstreams/compression.js",
-      "lib/internal/webstreams/encoding.js",
-      "lib/internal/webstreams/queuingstrategies.js",
-      "lib/internal/webstreams/readablestream.js",
-      "lib/internal/webstreams/transfer.js",
-      "lib/internal/webstreams/transformstream.js",
-      "lib/internal/webstreams/util.js",
-      "lib/internal/webstreams/writablestream.js",
-      "lib/internal/worker.js",
-      "lib/internal/worker/io.js",
-      "lib/internal/worker/js_transferable.js",
-      "lib/module.js",
-      "lib/net.js",
-      "lib/os.js",
-      "lib/path.js",
-      "lib/path/posix.js",
-      "lib/path/win32.js",
-      "lib/perf_hooks.js",
-      "lib/process.js",
-      "lib/punycode.js",
-      "lib/querystring.js",
-      "lib/readline.js",
-      "lib/readline/promises.js",
-      "lib/repl.js",
-      "lib/sea.js",
-      "lib/stream.js",
-      "lib/stream/consumers.js",
-      "lib/stream/promises.js",
-      "lib/stream/web.js",
-      "lib/string_decoder.js",
-      "lib/sys.js",
-      "lib/test.js",
-      "lib/test/reporters.js",
-      "lib/timers.js",
-      "lib/timers/promises.js",
-      "lib/tls.js",
-      "lib/trace_events.js",
-      "lib/tty.js",
-      "lib/url.js",
-      "lib/util.js",
-      "lib/util/types.js",
-      "lib/v8.js",
-      "lib/vm.js",
-      "lib/wasi.js",
-      "lib/worker_threads.js",
-      "lib/zlib.js"
-    ],
-    "node_module_version": 115,
-    "node_no_browser_globals": "false",
-    "node_prefix": "/",
-    "node_release_urlbase": "https://nodejs.org/download/release/",
-    "node_shared": "false",
-    "node_shared_ada": "false",
-    "node_shared_brotli": "false",
-    "node_shared_cares": "false",
-    "node_shared_http_parser": "false",
-    "node_shared_libuv": "false",
-    "node_shared_nghttp2": "false",
-    "node_shared_nghttp3": "false",
-    "node_shared_ngtcp2": "false",
-    "node_shared_openssl": "false",
-    "node_shared_simdjson": "false",
-    "node_shared_simdutf": "false",
-    "node_shared_zlib": "false",
-    "node_tag": "",
-    "node_target_type": "executable",
-    "node_use_bundled_v8": "true",
-    "node_use_node_code_cache": "true",
-    "node_use_node_snapshot": "true",
-    "node_use_openssl": "true",
-    "node_use_v8_platform": "true",
-    "node_with_ltcg": "false",
-    "node_without_node_options": "false",
-    "node_write_snapshot_as_array_literals": "false",
-    "openssl_is_fips": "false",
-    "openssl_quic": "true",
-    "ossfuzz": "false",
-    "shlib_suffix": "115.dylib",
-    "single_executable_application": "true",
-    "target_arch": "arm64",
-    "ubsan": 0,
-    "use_prefix_to_find_headers": "false",
-    "v8_enable_31bit_smis_on_64bit_arch": 0,
-    "v8_enable_extensible_ro_snapshot": 0,
-    "v8_enable_gdbjit": 0,
-    "v8_enable_hugepage": 0,
-    "v8_enable_i18n_support": 1,
-    "v8_enable_inspector": 1,
-    "v8_enable_javascript_promise_hooks": 1,
-    "v8_enable_lite_mode": 0,
-    "v8_enable_maglev": 0,
-    "v8_enable_object_print": 1,
-    "v8_enable_pointer_compression": 0,
-    "v8_enable_shared_ro_heap": 1,
-    "v8_enable_v8_checks": 0,
-    "v8_enable_webassembly": 1,
-    "v8_no_strict_aliasing": 1,
-    "v8_optimized_debug": 1,
-    "v8_promise_internal_field_count": 1,
-    "v8_random_seed": 0,
-    "v8_trace_maps": 0,
-    "v8_use_siphash": 1,
-    "want_separate_host_toolset": 0,
-    "xcode_version": "13.0",
-    "nodedir": "/Users/johnlindquist/Library/Caches/node-gyp/20.16.0",
-    "python": "/opt/homebrew/opt/python@3.12/bin/python3.12",
-    "standalone_static_library": 1,
-    "legacy_peer_deps": "true",
-    "global_prefix": "/Users/johnlindquist/.volta/tools/image/node/20.16.0",
-    "local_prefix": "/private/var/folders/h4/h6yds2nj2bx141vxzb4km39m0000gp/T/tmp-14377BVKvASvxSyBA",
-    "globalconfig": "/Users/johnlindquist/.volta/tools/image/node/20.16.0/etc/npmrc",
-    "init_module": "/Users/johnlindquist/.npm-init.js",
-    "userconfig": "/Users/johnlindquist/.npmrc",
-    "npm_version": "10.8.1",
-    "force": "true",
-    "node_gyp": "/Users/johnlindquist/.volta/tools/image/node/20.16.0/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",
-    "cache": "/Users/johnlindquist/.npm",
-    "user_agent": "npm/10.8.1 node/v20.16.0 darwin arm64 workspaces/false",
-    "prefix": "/Users/johnlindquist/.volta/tools/image/node/20.16.0"
-  }
-}
diff --git a/node_modules/native-keymap/build/gyp-mac-tool b/node_modules/native-keymap/build/gyp-mac-tool
deleted file mode 100755
index ffef860..0000000
--- a/node_modules/native-keymap/build/gyp-mac-tool
+++ /dev/null
@@ -1,772 +0,0 @@
-#!/usr/bin/env python3
-# Generated by gyp. Do not edit.
-# Copyright (c) 2012 Google Inc. All rights reserved.
-# Use of this source code is governed by a BSD-style license that can be
-# found in the LICENSE file.
-
-"""Utility functions to perform Xcode-style build steps.
-
-These functions are executed via gyp-mac-tool when using the Makefile generator.
-"""
-
-
-import fcntl
-import fnmatch
-import glob
-import json
-import os
-import plistlib
-import re
-import shutil
-import struct
-import subprocess
-import sys
-import tempfile
-
-
-def main(args):
-    executor = MacTool()
-    exit_code = executor.Dispatch(args)
-    if exit_code is not None:
-        sys.exit(exit_code)
-
-
-class MacTool:
-    """This class performs all the Mac tooling steps. The methods can either be
-  executed directly, or dispatched from an argument list."""
-
-    def Dispatch(self, args):
-        """Dispatches a string command to a method."""
-        if len(args) < 1:
-            raise Exception("Not enough arguments")
-
-        method = "Exec%s" % self._CommandifyName(args[0])
-        return getattr(self, method)(*args[1:])
-
-    def _CommandifyName(self, name_string):
-        """Transforms a tool name like copy-info-plist to CopyInfoPlist"""
-        return name_string.title().replace("-", "")
-
-    def ExecCopyBundleResource(self, source, dest, convert_to_binary):
-        """Copies a resource file to the bundle/Resources directory, performing any
-    necessary compilation on each resource."""
-        convert_to_binary = convert_to_binary == "True"
-        extension = os.path.splitext(source)[1].lower()
-        if os.path.isdir(source):
-            # Copy tree.
-            # TODO(thakis): This copies file attributes like mtime, while the
-            # single-file branch below doesn't. This should probably be changed to
-            # be consistent with the single-file branch.
-            if os.path.exists(dest):
-                shutil.rmtree(dest)
-            shutil.copytree(source, dest)
-        elif extension == ".xib":
-            return self._CopyXIBFile(source, dest)
-        elif extension == ".storyboard":
-            return self._CopyXIBFile(source, dest)
-        elif extension == ".strings" and not convert_to_binary:
-            self._CopyStringsFile(source, dest)
-        else:
-            if os.path.exists(dest):
-                os.unlink(dest)
-            shutil.copy(source, dest)
-
-        if convert_to_binary and extension in (".plist", ".strings"):
-            self._ConvertToBinary(dest)
-
-    def _CopyXIBFile(self, source, dest):
-        """Compiles a XIB file with ibtool into a binary plist in the bundle."""
-
-        # ibtool sometimes crashes with relative paths. See crbug.com/314728.
-        base = os.path.dirname(os.path.realpath(__file__))
-        if os.path.relpath(source):
-            source = os.path.join(base, source)
-        if os.path.relpath(dest):
-            dest = os.path.join(base, dest)
-
-        args = ["xcrun", "ibtool", "--errors", "--warnings", "--notices"]
-
-        if os.environ["XCODE_VERSION_ACTUAL"] > "0700":
-            args.extend(["--auto-activate-custom-fonts"])
-            if "IPHONEOS_DEPLOYMENT_TARGET" in os.environ:
-                args.extend(
-                    [
-                        "--target-device",
-                        "iphone",
-                        "--target-device",
-                        "ipad",
-                        "--minimum-deployment-target",
-                        os.environ["IPHONEOS_DEPLOYMENT_TARGET"],
-                    ]
-                )
-            else:
-                args.extend(
-                    [
-                        "--target-device",
-                        "mac",
-                        "--minimum-deployment-target",
-                        os.environ["MACOSX_DEPLOYMENT_TARGET"],
-                    ]
-                )
-
-        args.extend(
-            ["--output-format", "human-readable-text", "--compile", dest, source]
-        )
-
-        ibtool_section_re = re.compile(r"/\*.*\*/")
-        ibtool_re = re.compile(r".*note:.*is clipping its content")
-        try:
-            stdout = subprocess.check_output(args)
-        except subprocess.CalledProcessError as e:
-            print(e.output)
-            raise
-        current_section_header = None
-        for line in stdout.splitlines():
-            if ibtool_section_re.match(line):
-                current_section_header = line
-            elif not ibtool_re.match(line):
-                if current_section_header:
-                    print(current_section_header)
-                    current_section_header = None
-                print(line)
-        return 0
-
-    def _ConvertToBinary(self, dest):
-        subprocess.check_call(
-            ["xcrun", "plutil", "-convert", "binary1", "-o", dest, dest]
-        )
-
-    def _CopyStringsFile(self, source, dest):
-        """Copies a .strings file using iconv to reconvert the input into UTF-16."""
-        input_code = self._DetectInputEncoding(source) or "UTF-8"
-
-        # Xcode's CpyCopyStringsFile / builtin-copyStrings seems to call
-        # CFPropertyListCreateFromXMLData() behind the scenes; at least it prints
-        #     CFPropertyListCreateFromXMLData(): Old-style plist parser: missing
-        #     semicolon in dictionary.
-        # on invalid files. Do the same kind of validation.
-        import CoreFoundation
-
-        with open(source, "rb") as in_file:
-            s = in_file.read()
-        d = CoreFoundation.CFDataCreate(None, s, len(s))
-        _, error = CoreFoundation.CFPropertyListCreateFromXMLData(None, d, 0, None)
-        if error:
-            return
-
-        with open(dest, "wb") as fp:
-            fp.write(s.decode(input_code).encode("UTF-16"))
-
-    def _DetectInputEncoding(self, file_name):
-        """Reads the first few bytes from file_name and tries to guess the text
-    encoding. Returns None as a guess if it can't detect it."""
-        with open(file_name, "rb") as fp:
-            try:
-                header = fp.read(3)
-            except Exception:
-                return None
-        if header.startswith(b"\xFE\xFF"):
-            return "UTF-16"
-        elif header.startswith(b"\xFF\xFE"):
-            return "UTF-16"
-        elif header.startswith(b"\xEF\xBB\xBF"):
-            return "UTF-8"
-        else:
-            return None
-
-    def ExecCopyInfoPlist(self, source, dest, convert_to_binary, *keys):
-        """Copies the |source| Info.plist to the destination directory |dest|."""
-        # Read the source Info.plist into memory.
-        with open(source) as fd:
-            lines = fd.read()
-
-        # Insert synthesized key/value pairs (e.g. BuildMachineOSBuild).
-        plist = plistlib.readPlistFromString(lines)
-        if keys:
-            plist.update(json.loads(keys[0]))
-        lines = plistlib.writePlistToString(plist)
-
-        # Go through all the environment variables and replace them as variables in
-        # the file.
-        IDENT_RE = re.compile(r"[_/\s]")
-        for key in os.environ:
-            if key.startswith("_"):
-                continue
-            evar = "${%s}" % key
-            evalue = os.environ[key]
-            lines = lines.replace(lines, evar, evalue)
-
-            # Xcode supports various suffices on environment variables, which are
-            # all undocumented. :rfc1034identifier is used in the standard project
-            # template these days, and :identifier was used earlier. They are used to
-            # convert non-url characters into things that look like valid urls --
-            # except that the replacement character for :identifier, '_' isn't valid
-            # in a URL either -- oops, hence :rfc1034identifier was born.
-            evar = "${%s:identifier}" % key
-            evalue = IDENT_RE.sub("_", os.environ[key])
-            lines = lines.replace(lines, evar, evalue)
-
-            evar = "${%s:rfc1034identifier}" % key
-            evalue = IDENT_RE.sub("-", os.environ[key])
-            lines = lines.replace(lines, evar, evalue)
-
-        # Remove any keys with values that haven't been replaced.
-        lines = lines.splitlines()
-        for i in range(len(lines)):
-            if lines[i].strip().startswith("<string>${"):
-                lines[i] = None
-                lines[i - 1] = None
-        lines = "\n".join(line for line in lines if line is not None)
-
-        # Write out the file with variables replaced.
-        with open(dest, "w") as fd:
-            fd.write(lines)
-
-        # Now write out PkgInfo file now that the Info.plist file has been
-        # "compiled".
-        self._WritePkgInfo(dest)
-
-        if convert_to_binary == "True":
-            self._ConvertToBinary(dest)
-
-    def _WritePkgInfo(self, info_plist):
-        """This writes the PkgInfo file from the data stored in Info.plist."""
-        plist = plistlib.readPlist(info_plist)
-        if not plist:
-            return
-
-        # Only create PkgInfo for executable types.
-        package_type = plist["CFBundlePackageType"]
-        if package_type != "APPL":
-            return
-
-        # The format of PkgInfo is eight characters, representing the bundle type
-        # and bundle signature, each four characters. If that is missing, four
-        # '?' characters are used instead.
-        signature_code = plist.get("CFBundleSignature", "????")
-        if len(signature_code) != 4:  # Wrong length resets everything, too.
-            signature_code = "?" * 4
-
-        dest = os.path.join(os.path.dirname(info_plist), "PkgInfo")
-        with open(dest, "w") as fp:
-            fp.write(f"{package_type}{signature_code}")
-
-    def ExecFlock(self, lockfile, *cmd_list):
-        """Emulates the most basic behavior of Linux's flock(1)."""
-        # Rely on exception handling to report errors.
-        fd = os.open(lockfile, os.O_RDONLY | os.O_NOCTTY | os.O_CREAT, 0o666)
-        fcntl.flock(fd, fcntl.LOCK_EX)
-        return subprocess.call(cmd_list)
-
-    def ExecFilterLibtool(self, *cmd_list):
-        """Calls libtool and filters out '/path/to/libtool: file: foo.o has no
-    symbols'."""
-        libtool_re = re.compile(
-            r"^.*libtool: (?:for architecture: \S* )?" r"file: .* has no symbols$"
-        )
-        libtool_re5 = re.compile(
-            r"^.*libtool: warning for library: "
-            + r".* the table of contents is empty "
-            + r"\(no object file members in the library define global symbols\)$"
-        )
-        env = os.environ.copy()
-        # Ref:
-        # http://www.opensource.apple.com/source/cctools/cctools-809/misc/libtool.c
-        # The problem with this flag is that it resets the file mtime on the file to
-        # epoch=0, e.g. 1970-1-1 or 1969-12-31 depending on timezone.
-        env["ZERO_AR_DATE"] = "1"
-        libtoolout = subprocess.Popen(cmd_list, stderr=subprocess.PIPE, env=env)
-        err = libtoolout.communicate()[1].decode("utf-8")
-        for line in err.splitlines():
-            if not libtool_re.match(line) and not libtool_re5.match(line):
-                print(line, file=sys.stderr)
-        # Unconditionally touch the output .a file on the command line if present
-        # and the command succeeded. A bit hacky.
-        if not libtoolout.returncode:
-            for i in range(len(cmd_list) - 1):
-                if cmd_list[i] == "-o" and cmd_list[i + 1].endswith(".a"):
-                    os.utime(cmd_list[i + 1], None)
-                    break
-        return libtoolout.returncode
-
-    def ExecPackageIosFramework(self, framework):
-        # Find the name of the binary based on the part before the ".framework".
-        binary = os.path.basename(framework).split(".")[0]
-        module_path = os.path.join(framework, "Modules")
-        if not os.path.exists(module_path):
-            os.mkdir(module_path)
-        module_template = (
-            "framework module %s {\n"
-            '  umbrella header "%s.h"\n'
-            "\n"
-            "  export *\n"
-            "  module * { export * }\n"
-            "}\n" % (binary, binary)
-        )
-
-        with open(os.path.join(module_path, "module.modulemap"), "w") as module_file:
-            module_file.write(module_template)
-
-    def ExecPackageFramework(self, framework, version):
-        """Takes a path to Something.framework and the Current version of that and
-    sets up all the symlinks."""
-        # Find the name of the binary based on the part before the ".framework".
-        binary = os.path.basename(framework).split(".")[0]
-
-        CURRENT = "Current"
-        RESOURCES = "Resources"
-        VERSIONS = "Versions"
-
-        if not os.path.exists(os.path.join(framework, VERSIONS, version, binary)):
-            # Binary-less frameworks don't seem to contain symlinks (see e.g.
-            # chromium's out/Debug/org.chromium.Chromium.manifest/ bundle).
-            return
-
-        # Move into the framework directory to set the symlinks correctly.
-        pwd = os.getcwd()
-        os.chdir(framework)
-
-        # Set up the Current version.
-        self._Relink(version, os.path.join(VERSIONS, CURRENT))
-
-        # Set up the root symlinks.
-        self._Relink(os.path.join(VERSIONS, CURRENT, binary), binary)
-        self._Relink(os.path.join(VERSIONS, CURRENT, RESOURCES), RESOURCES)
-
-        # Back to where we were before!
-        os.chdir(pwd)
-
-    def _Relink(self, dest, link):
-        """Creates a symlink to |dest| named |link|. If |link| already exists,
-    it is overwritten."""
-        if os.path.lexists(link):
-            os.remove(link)
-        os.symlink(dest, link)
-
-    def ExecCompileIosFrameworkHeaderMap(self, out, framework, *all_headers):
-        framework_name = os.path.basename(framework).split(".")[0]
-        all_headers = [os.path.abspath(header) for header in all_headers]
-        filelist = {}
-        for header in all_headers:
-            filename = os.path.basename(header)
-            filelist[filename] = header
-            filelist[os.path.join(framework_name, filename)] = header
-        WriteHmap(out, filelist)
-
-    def ExecCopyIosFrameworkHeaders(self, framework, *copy_headers):
-        header_path = os.path.join(framework, "Headers")
-        if not os.path.exists(header_path):
-            os.makedirs(header_path)
-        for header in copy_headers:
-            shutil.copy(header, os.path.join(header_path, os.path.basename(header)))
-
-    def ExecCompileXcassets(self, keys, *inputs):
-        """Compiles multiple .xcassets files into a single .car file.
-
-    This invokes 'actool' to compile all the inputs .xcassets files. The
-    |keys| arguments is a json-encoded dictionary of extra arguments to
-    pass to 'actool' when the asset catalogs contains an application icon
-    or a launch image.
-
-    Note that 'actool' does not create the Assets.car file if the asset
-    catalogs does not contains imageset.
-    """
-        command_line = [
-            "xcrun",
-            "actool",
-            "--output-format",
-            "human-readable-text",
-            "--compress-pngs",
-            "--notices",
-            "--warnings",
-            "--errors",
-        ]
-        is_iphone_target = "IPHONEOS_DEPLOYMENT_TARGET" in os.environ
-        if is_iphone_target:
-            platform = os.environ["CONFIGURATION"].split("-")[-1]
-            if platform not in ("iphoneos", "iphonesimulator"):
-                platform = "iphonesimulator"
-            command_line.extend(
-                [
-                    "--platform",
-                    platform,
-                    "--target-device",
-                    "iphone",
-                    "--target-device",
-                    "ipad",
-                    "--minimum-deployment-target",
-                    os.environ["IPHONEOS_DEPLOYMENT_TARGET"],
-                    "--compile",
-                    os.path.abspath(os.environ["CONTENTS_FOLDER_PATH"]),
-                ]
-            )
-        else:
-            command_line.extend(
-                [
-                    "--platform",
-                    "macosx",
-                    "--target-device",
-                    "mac",
-                    "--minimum-deployment-target",
-                    os.environ["MACOSX_DEPLOYMENT_TARGET"],
-                    "--compile",
-                    os.path.abspath(os.environ["UNLOCALIZED_RESOURCES_FOLDER_PATH"]),
-                ]
-            )
-        if keys:
-            keys = json.loads(keys)
-            for key, value in keys.items():
-                arg_name = "--" + key
-                if isinstance(value, bool):
-                    if value:
-                        command_line.append(arg_name)
-                elif isinstance(value, list):
-                    for v in value:
-                        command_line.append(arg_name)
-                        command_line.append(str(v))
-                else:
-                    command_line.append(arg_name)
-                    command_line.append(str(value))
-        # Note: actool crashes if inputs path are relative, so use os.path.abspath
-        # to get absolute path name for inputs.
-        command_line.extend(map(os.path.abspath, inputs))
-        subprocess.check_call(command_line)
-
-    def ExecMergeInfoPlist(self, output, *inputs):
-        """Merge multiple .plist files into a single .plist file."""
-        merged_plist = {}
-        for path in inputs:
-            plist = self._LoadPlistMaybeBinary(path)
-            self._MergePlist(merged_plist, plist)
-        plistlib.writePlist(merged_plist, output)
-
-    def ExecCodeSignBundle(self, key, entitlements, provisioning, path, preserve):
-        """Code sign a bundle.
-
-    This function tries to code sign an iOS bundle, following the same
-    algorithm as Xcode:
-      1. pick the provisioning profile that best match the bundle identifier,
-         and copy it into the bundle as embedded.mobileprovision,
-      2. copy Entitlements.plist from user or SDK next to the bundle,
-      3. code sign the bundle.
-    """
-        substitutions, overrides = self._InstallProvisioningProfile(
-            provisioning, self._GetCFBundleIdentifier()
-        )
-        entitlements_path = self._InstallEntitlements(
-            entitlements, substitutions, overrides
-        )
-
-        args = ["codesign", "--force", "--sign", key]
-        if preserve == "True":
-            args.extend(["--deep", "--preserve-metadata=identifier,entitlements"])
-        else:
-            args.extend(["--entitlements", entitlements_path])
-        args.extend(["--timestamp=none", path])
-        subprocess.check_call(args)
-
-    def _InstallProvisioningProfile(self, profile, bundle_identifier):
-        """Installs embedded.mobileprovision into the bundle.
-
-    Args:
-      profile: string, optional, short name of the .mobileprovision file
-        to use, if empty or the file is missing, the best file installed
-        will be used
-      bundle_identifier: string, value of CFBundleIdentifier from Info.plist
-
-    Returns:
-      A tuple containing two dictionary: variables substitutions and values
-      to overrides when generating the entitlements file.
-    """
-        source_path, provisioning_data, team_id = self._FindProvisioningProfile(
-            profile, bundle_identifier
-        )
-        target_path = os.path.join(
-            os.environ["BUILT_PRODUCTS_DIR"],
-            os.environ["CONTENTS_FOLDER_PATH"],
-            "embedded.mobileprovision",
-        )
-        shutil.copy2(source_path, target_path)
-        substitutions = self._GetSubstitutions(bundle_identifier, team_id + ".")
-        return substitutions, provisioning_data["Entitlements"]
-
-    def _FindProvisioningProfile(self, profile, bundle_identifier):
-        """Finds the .mobileprovision file to use for signing the bundle.
-
-    Checks all the installed provisioning profiles (or if the user specified
-    the PROVISIONING_PROFILE variable, only consult it) and select the most
-    specific that correspond to the bundle identifier.
-
-    Args:
-      profile: string, optional, short name of the .mobileprovision file
-        to use, if empty or the file is missing, the best file installed
-        will be used
-      bundle_identifier: string, value of CFBundleIdentifier from Info.plist
-
-    Returns:
-      A tuple of the path to the selected provisioning profile, the data of
-      the embedded plist in the provisioning profile and the team identifier
-      to use for code signing.
-
-    Raises:
-      SystemExit: if no .mobileprovision can be used to sign the bundle.
-    """
-        profiles_dir = os.path.join(
-            os.environ["HOME"], "Library", "MobileDevice", "Provisioning Profiles"
-        )
-        if not os.path.isdir(profiles_dir):
-            print(
-                "cannot find mobile provisioning for %s" % (bundle_identifier),
-                file=sys.stderr,
-            )
-            sys.exit(1)
-        provisioning_profiles = None
-        if profile:
-            profile_path = os.path.join(profiles_dir, profile + ".mobileprovision")
-            if os.path.exists(profile_path):
-                provisioning_profiles = [profile_path]
-        if not provisioning_profiles:
-            provisioning_profiles = glob.glob(
-                os.path.join(profiles_dir, "*.mobileprovision")
-            )
-        valid_provisioning_profiles = {}
-        for profile_path in provisioning_profiles:
-            profile_data = self._LoadProvisioningProfile(profile_path)
-            app_id_pattern = profile_data.get("Entitlements", {}).get(
-                "application-identifier", ""
-            )
-            for team_identifier in profile_data.get("TeamIdentifier", []):
-                app_id = f"{team_identifier}.{bundle_identifier}"
-                if fnmatch.fnmatch(app_id, app_id_pattern):
-                    valid_provisioning_profiles[app_id_pattern] = (
-                        profile_path,
-                        profile_data,
-                        team_identifier,
-                    )
-        if not valid_provisioning_profiles:
-            print(
-                "cannot find mobile provisioning for %s" % (bundle_identifier),
-                file=sys.stderr,
-            )
-            sys.exit(1)
-        # If the user has multiple provisioning profiles installed that can be
-        # used for ${bundle_identifier}, pick the most specific one (ie. the
-        # provisioning profile whose pattern is the longest).
-        selected_key = max(valid_provisioning_profiles, key=lambda v: len(v))
-        return valid_provisioning_profiles[selected_key]
-
-    def _LoadProvisioningProfile(self, profile_path):
-        """Extracts the plist embedded in a provisioning profile.
-
-    Args:
-      profile_path: string, path to the .mobileprovision file
-
-    Returns:
-      Content of the plist embedded in the provisioning profile as a dictionary.
-    """
-        with tempfile.NamedTemporaryFile() as temp:
-            subprocess.check_call(
-                ["security", "cms", "-D", "-i", profile_path, "-o", temp.name]
-            )
-            return self._LoadPlistMaybeBinary(temp.name)
-
-    def _MergePlist(self, merged_plist, plist):
-        """Merge |plist| into |merged_plist|."""
-        for key, value in plist.items():
-            if isinstance(value, dict):
-                merged_value = merged_plist.get(key, {})
-                if isinstance(merged_value, dict):
-                    self._MergePlist(merged_value, value)
-                    merged_plist[key] = merged_value
-                else:
-                    merged_plist[key] = value
-            else:
-                merged_plist[key] = value
-
-    def _LoadPlistMaybeBinary(self, plist_path):
-        """Loads into a memory a plist possibly encoded in binary format.
-
-    This is a wrapper around plistlib.readPlist that tries to convert the
-    plist to the XML format if it can't be parsed (assuming that it is in
-    the binary format).
-
-    Args:
-      plist_path: string, path to a plist file, in XML or binary format
-
-    Returns:
-      Content of the plist as a dictionary.
-    """
-        try:
-            # First, try to read the file using plistlib that only supports XML,
-            # and if an exception is raised, convert a temporary copy to XML and
-            # load that copy.
-            return plistlib.readPlist(plist_path)
-        except Exception:
-            pass
-        with tempfile.NamedTemporaryFile() as temp:
-            shutil.copy2(plist_path, temp.name)
-            subprocess.check_call(["plutil", "-convert", "xml1", temp.name])
-            return plistlib.readPlist(temp.name)
-
-    def _GetSubstitutions(self, bundle_identifier, app_identifier_prefix):
-        """Constructs a dictionary of variable substitutions for Entitlements.plist.
-
-    Args:
-      bundle_identifier: string, value of CFBundleIdentifier from Info.plist
-      app_identifier_prefix: string, value for AppIdentifierPrefix
-
-    Returns:
-      Dictionary of substitutions to apply when generating Entitlements.plist.
-    """
-        return {
-            "CFBundleIdentifier": bundle_identifier,
-            "AppIdentifierPrefix": app_identifier_prefix,
-        }
-
-    def _GetCFBundleIdentifier(self):
-        """Extracts CFBundleIdentifier value from Info.plist in the bundle.
-
-    Returns:
-      Value of CFBundleIdentifier in the Info.plist located in the bundle.
-    """
-        info_plist_path = os.path.join(
-            os.environ["TARGET_BUILD_DIR"], os.environ["INFOPLIST_PATH"]
-        )
-        info_plist_data = self._LoadPlistMaybeBinary(info_plist_path)
-        return info_plist_data["CFBundleIdentifier"]
-
-    def _InstallEntitlements(self, entitlements, substitutions, overrides):
-        """Generates and install the ${BundleName}.xcent entitlements file.
-
-    Expands variables "$(variable)" pattern in the source entitlements file,
-    add extra entitlements defined in the .mobileprovision file and the copy
-    the generated plist to "${BundlePath}.xcent".
-
-    Args:
-      entitlements: string, optional, path to the Entitlements.plist template
-        to use, defaults to "${SDKROOT}/Entitlements.plist"
-      substitutions: dictionary, variable substitutions
-      overrides: dictionary, values to add to the entitlements
-
-    Returns:
-      Path to the generated entitlements file.
-    """
-        source_path = entitlements
-        target_path = os.path.join(
-            os.environ["BUILT_PRODUCTS_DIR"], os.environ["PRODUCT_NAME"] + ".xcent"
-        )
-        if not source_path:
-            source_path = os.path.join(os.environ["SDKROOT"], "Entitlements.plist")
-        shutil.copy2(source_path, target_path)
-        data = self._LoadPlistMaybeBinary(target_path)
-        data = self._ExpandVariables(data, substitutions)
-        if overrides:
-            for key in overrides:
-                if key not in data:
-                    data[key] = overrides[key]
-        plistlib.writePlist(data, target_path)
-        return target_path
-
-    def _ExpandVariables(self, data, substitutions):
-        """Expands variables "$(variable)" in data.
-
-    Args:
-      data: object, can be either string, list or dictionary
-      substitutions: dictionary, variable substitutions to perform
-
-    Returns:
-      Copy of data where each references to "$(variable)" has been replaced
-      by the corresponding value found in substitutions, or left intact if
-      the key was not found.
-    """
-        if isinstance(data, str):
-            for key, value in substitutions.items():
-                data = data.replace("$(%s)" % key, value)
-            return data
-        if isinstance(data, list):
-            return [self._ExpandVariables(v, substitutions) for v in data]
-        if isinstance(data, dict):
-            return {k: self._ExpandVariables(data[k], substitutions) for k in data}
-        return data
-
-
-def NextGreaterPowerOf2(x):
-    return 2 ** (x).bit_length()
-
-
-def WriteHmap(output_name, filelist):
-    """Generates a header map based on |filelist|.
-
-  Per Mark Mentovai:
-    A header map is structured essentially as a hash table, keyed by names used
-    in #includes, and providing pathnames to the actual files.
-
-  The implementation below and the comment above comes from inspecting:
-    http://www.opensource.apple.com/source/distcc/distcc-2503/distcc_dist/include_server/headermap.py?txt
-  while also looking at the implementation in clang in:
-    https://llvm.org/svn/llvm-project/cfe/trunk/lib/Lex/HeaderMap.cpp
-  """
-    magic = 1751998832
-    version = 1
-    _reserved = 0
-    count = len(filelist)
-    capacity = NextGreaterPowerOf2(count)
-    strings_offset = 24 + (12 * capacity)
-    max_value_length = max(len(value) for value in filelist.values())
-
-    out = open(output_name, "wb")
-    out.write(
-        struct.pack(
-            "<LHHLLLL",
-            magic,
-            version,
-            _reserved,
-            strings_offset,
-            count,
-            capacity,
-            max_value_length,
-        )
-    )
-
-    # Create empty hashmap buckets.
-    buckets = [None] * capacity
-    for file, path in filelist.items():
-        key = 0
-        for c in file:
-            key += ord(c.lower()) * 13
-
-        # Fill next empty bucket.
-        while buckets[key & capacity - 1] is not None:
-            key = key + 1
-        buckets[key & capacity - 1] = (file, path)
-
-    next_offset = 1
-    for bucket in buckets:
-        if bucket is None:
-            out.write(struct.pack("<LLL", 0, 0, 0))
-        else:
-            (file, path) = bucket
-            key_offset = next_offset
-            prefix_offset = key_offset + len(file) + 1
-            suffix_offset = prefix_offset + len(os.path.dirname(path) + os.sep) + 1
-            next_offset = suffix_offset + len(os.path.basename(path)) + 1
-            out.write(struct.pack("<LLL", key_offset, prefix_offset, suffix_offset))
-
-    # Pad byte since next offset starts at 1.
-    out.write(struct.pack("<x"))
-
-    for bucket in buckets:
-        if bucket is not None:
-            (file, path) = bucket
-            out.write(struct.pack("<%ds" % len(file), file))
-            out.write(struct.pack("<s", "\0"))
-            base = os.path.dirname(path) + os.sep
-            out.write(struct.pack("<%ds" % len(base), base))
-            out.write(struct.pack("<s", "\0"))
-            path = os.path.basename(path)
-            out.write(struct.pack("<%ds" % len(path), path))
-            out.write(struct.pack("<s", "\0"))
-
-
-if __name__ == "__main__":
-    sys.exit(main(sys.argv[1:]))
diff --git a/node_modules/native-keymap/build/keymapping.target.mk b/node_modules/native-keymap/build/keymapping.target.mk
deleted file mode 100644
index f47cb89..0000000
--- a/node_modules/native-keymap/build/keymapping.target.mk
+++ /dev/null
@@ -1,195 +0,0 @@
-# This file is generated by gyp; do not edit.
-
-TOOLSET := target
-TARGET := keymapping
-DEFS_Debug := \
-	'-DNODE_GYP_MODULE_NAME=keymapping' \
-	'-DUSING_UV_SHARED=1' \
-	'-DUSING_V8_SHARED=1' \
-	'-DV8_DEPRECATION_WARNINGS=1' \
-	'-D_GLIBCXX_USE_CXX11_ABI=1' \
-	'-D_DARWIN_USE_64_BIT_INODE=1' \
-	'-D_LARGEFILE_SOURCE' \
-	'-D_FILE_OFFSET_BITS=64' \
-	'-DOPENSSL_NO_PINSHARED' \
-	'-DOPENSSL_THREADS' \
-	'-DBUILDING_NODE_EXTENSION' \
-	'-DDEBUG' \
-	'-D_DEBUG'
-
-# Flags passed to all source files.
-CFLAGS_Debug := \
-	-O0 \
-	-gdwarf-2 \
-	-mmacosx-version-min=10.15 \
-	-arch arm64 \
-	-Wall \
-	-Wendif-labels \
-	-W \
-	-Wno-unused-parameter
-
-# Flags passed to only C files.
-CFLAGS_C_Debug := \
-	-fno-strict-aliasing
-
-# Flags passed to only C++ files.
-CFLAGS_CC_Debug := \
-	-std=gnu++17 \
-	-stdlib=libc++ \
-	-fno-rtti \
-	-fno-exceptions \
-	-fno-strict-aliasing
-
-# Flags passed to only ObjC files.
-CFLAGS_OBJC_Debug :=
-
-# Flags passed to only ObjC++ files.
-CFLAGS_OBJCC_Debug :=
-
-INCS_Debug := \
-	-I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node \
-	-I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/src \
-	-I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/openssl/config \
-	-I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/openssl/openssl/include \
-	-I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/uv/include \
-	-I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/zlib \
-	-I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/v8/include
-
-DEFS_Release := \
-	'-DNODE_GYP_MODULE_NAME=keymapping' \
-	'-DUSING_UV_SHARED=1' \
-	'-DUSING_V8_SHARED=1' \
-	'-DV8_DEPRECATION_WARNINGS=1' \
-	'-D_GLIBCXX_USE_CXX11_ABI=1' \
-	'-D_DARWIN_USE_64_BIT_INODE=1' \
-	'-D_LARGEFILE_SOURCE' \
-	'-D_FILE_OFFSET_BITS=64' \
-	'-DOPENSSL_NO_PINSHARED' \
-	'-DOPENSSL_THREADS' \
-	'-DBUILDING_NODE_EXTENSION'
-
-# Flags passed to all source files.
-CFLAGS_Release := \
-	-O3 \
-	-gdwarf-2 \
-	-mmacosx-version-min=10.15 \
-	-arch arm64 \
-	-Wall \
-	-Wendif-labels \
-	-W \
-	-Wno-unused-parameter
-
-# Flags passed to only C files.
-CFLAGS_C_Release := \
-	-fno-strict-aliasing
-
-# Flags passed to only C++ files.
-CFLAGS_CC_Release := \
-	-std=gnu++17 \
-	-stdlib=libc++ \
-	-fno-rtti \
-	-fno-exceptions \
-	-fno-strict-aliasing
-
-# Flags passed to only ObjC files.
-CFLAGS_OBJC_Release :=
-
-# Flags passed to only ObjC++ files.
-CFLAGS_OBJCC_Release :=
-
-INCS_Release := \
-	-I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/include/node \
-	-I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/src \
-	-I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/openssl/config \
-	-I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/openssl/openssl/include \
-	-I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/uv/include \
-	-I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/zlib \
-	-I/Users/johnlindquist/Library/Caches/node-gyp/20.16.0/deps/v8/include
-
-OBJS := \
-	$(obj).target/$(TARGET)/src/string_conversion.o \
-	$(obj).target/$(TARGET)/src/keymapping.o \
-	$(obj).target/$(TARGET)/src/keyboard_mac.o
-
-# Add to the list of files we specially track dependencies for.
-all_deps += $(OBJS)
-
-# CFLAGS et al overrides must be target-local.
-# See "Target-specific Variable Values" in the GNU Make manual.
-$(OBJS): TOOLSET := $(TOOLSET)
-$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
-$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
-$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
-$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))
-
-# Suffix rules, putting all outputs into $(obj).
-
-$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
-	@$(call do_cmd,cxx,1)
-
-$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.mm FORCE_DO_CMD
-	@$(call do_cmd,objcxx,1)
-
-# Try building from generated source, too.
-
-$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
-	@$(call do_cmd,cxx,1)
-
-$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.mm FORCE_DO_CMD
-	@$(call do_cmd,objcxx,1)
-
-$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
-	@$(call do_cmd,cxx,1)
-
-$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.mm FORCE_DO_CMD
-	@$(call do_cmd,objcxx,1)
-
-# End of this set of suffix rules
-### Rules for final target.
-LDFLAGS_Debug := \
-	-undefined dynamic_lookup \
-	-Wl,-search_paths_first \
-	-mmacosx-version-min=10.15 \
-	-arch arm64 \
-	-L$(builddir) \
-	-stdlib=libc++
-
-LIBTOOLFLAGS_Debug := \
-	-undefined dynamic_lookup \
-	-Wl,-search_paths_first
-
-LDFLAGS_Release := \
-	-undefined dynamic_lookup \
-	-Wl,-search_paths_first \
-	-mmacosx-version-min=10.15 \
-	-arch arm64 \
-	-L$(builddir) \
-	-stdlib=libc++
-
-LIBTOOLFLAGS_Release := \
-	-undefined dynamic_lookup \
-	-Wl,-search_paths_first
-
-LIBS := \
-	-framework Cocoa
-
-$(builddir)/keymapping.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
-$(builddir)/keymapping.node: LIBS := $(LIBS)
-$(builddir)/keymapping.node: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
-$(builddir)/keymapping.node: TOOLSET := $(TOOLSET)
-$(builddir)/keymapping.node: $(OBJS) FORCE_DO_CMD
-	$(call do_cmd,solink_module)
-
-all_deps += $(builddir)/keymapping.node
-# Add target alias
-.PHONY: keymapping
-keymapping: $(builddir)/keymapping.node
-
-# Short alias for building this executable.
-.PHONY: keymapping.node
-keymapping.node: $(builddir)/keymapping.node
-
-# Add executable to "all" target.
-.PHONY: all
-all: $(builddir)/keymapping.node
-
diff --git a/node_modules/native-keymap/deps/chromium/dom_code_data.inc b/node_modules/native-keymap/deps/chromium/dom_code_data.inc
deleted file mode 100644
index bb4cdb9..0000000
--- a/node_modules/native-keymap/deps/chromium/dom_code_data.inc
+++ /dev/null
@@ -1,618 +0,0 @@
-// ----------------------------------------------------------------------------------------------------------------
-//
-// [13.01.2022] https://source.chromium.org/chromium/chromium/src/+/main:ui/events/keycodes/dom/dom_code_data.inc
-//
-// ----------------------------------------------------------------------------------------------------------------
-
-// Copyright 2013 The Chromium Authors. All rights reserved.
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-
-// This file has no header guard because it is explicitly intended
-// to be included more than once with different definitions of the
-// macros DOM_CODE and DOM_CODE_DECLARATION.
-
-// Data in this file was created by referencing:
-//  [0] USB HID Usage Tables,
-//      http://www.usb.org/developers/hidpage/Hut1_12v2.pdf
-//  [1] DOM Level 3 KeyboardEvent code Values,
-//      http://www.w3.org/TR/uievents-code/
-//  [2] OS X <HIToolbox/Events.h>
-//  [3] Linux <linux/input.h> and hid-input.c
-//  [4] USB HID to PS/2 Scan Code Translation Table
-//      http://download.microsoft.com/download/1/6/1/161ba512-40e2-4cc9-843a-923143f3456c/translate.pdf
-//  [5] Keyboard Scan Code Specification
-//      http://download.microsoft.com/download/1/6/1/161ba512-40e2-4cc9-843a-923143f3456c/scancode.doc
-
-// General notes:
-//
-//  This table provides the definition of ui::DomCode (UI Events |code|) values
-//  as well as mapping between scan codes and DomCode. Some entries have no
-//  defined scan codes; these are present only to allow those UI Events |code|
-//  strings to be represented by DomCode. A few have a null code; these define
-//  mappings with a DomCode:: value but no |code| string, typically because
-//  they end up used in shortcuts but not standardized in UI Events; e.g.
-//  DomCode::BRIGHTNESS_UP. Commented-out entries document USB codes that are
-//  potentially interesting but not currently used.
-
-// Linux notes:
-//
-//  All USB codes that are listed here and that are supported by the kernel
-//  (as of 4.2) have their evdev/xkb scan codes recorded; if an evdev/xkb
-//  code is 0, it is because the kernel USB driver does not handle that key.
-//
-//  Some Linux kernel mappings for USB keys may seem counterintuitive:
-//
-//  [L1] Although evdev 0x163 KEY_CLEAR exists, Linux does not use it
-//       for any USB keys. Linux maps USB 0x07009c [Keyboard Clear] and
-//       0x0700d8 [Keypad Clear] to KEY_DELETE "Delete", so those codes are
-//       not distinguishable by applications, and UI Events "NumpadClear"
-//       is therefore not supported. USB 0x0700A2 [Keyboard Clear/Again]
-//       is not mapped by the kernel at all.
-//
-//  [L2] 'Menu' and 'Props' naming differs between evdev and USB / UI Events.
-//        USB 0x010085 [System Main Menu] and USB 0x0C0040 [Menu Mode] both
-//        map to evdev 0x8B KEY_MENU (which has no corresponding UI Events
-//        |code|). USB 0x070076 [Keyboard Menu] does not map to KEY_MENU;
-//        it maps to evdev 0x82 KEY_PROPS, which is not the same as USB and
-//        UI Events "Props". USB 0x0700A3 [Props], which does correspond to
-//        UI Events "Props", is not mapped by the kernel. (And all of these
-//        are distinct from UI Events' "ContextMenu", which corresponds to
-//        USB 0x070065 [Keyboard Application] via evdev 0x7F KEY_COMPOSE,
-//        following Windows convention.)
-
-// Windows notes:
-//
-//  The set of scan codes supported here may not be complete.
-//
-//  [W1] Windows maps both USB 0x070094 [Lang5] and USB 0x070073 [F24] to the
-//       same scan code, 0x76. (Microsoft's defined scan codes for F13 - F24
-//       appear to be the result of accidentally mapping an IBM Set 3 terminal
-//       keyboard, rather than an IBM Set 2 PC keyboard, through the BIOS
-//       2-to-1 table.)  We map 0x76 to F24 here, since Lang5 appears unused
-//       in practice (its declared function, Zenkaku/Hankaku switch, is
-//       conventionally placed on Backquote by Japanese keyboards).
-
-// Macintosh notes:
-//
-//  The set of scan codes supported here may not be complete.
-//
-//  [M1] OS X maps USB 0x070049 [Insert] as well as USB 0x070075 [Help] to
-//       scan code 0x72 kVK_Help. We map this to UI Events 'Insert', since
-//       Apple keyboards with USB 0x070049 [Insert] labelled "Help" have not
-//       been made since 2007.
-
-// ChromeOS notes:
-//
-//  Any keys that are added or updated specifically for use in the ChromeOS
-//  top-row should also be updated in sections of Input Diagnostics:
-//    ash/webui/diagnostics_ui/mojom/input_data_provider.mojom: enum TopRowKey
-//    ash/webui/diagnostics_ui/backend/input_data_provider_keyboard.cc: kScancodeMapping
-
-DOM_CODE_DECLARATION {
-
-  //            USB     evdev    XKB     Win     Mac   Code
-  DOM_CODE(0x000000, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NONE), // Invalid
-
-  // =========================================
-  // Non-USB codes
-  // =========================================
-
-  //            USB     evdev    XKB     Win     Mac   Code
-  DOM_CODE(0x000010, 0x0000, 0x0000, 0x0000, 0xffff, "Hyper", HYPER),
-  DOM_CODE(0x000011, 0x0000, 0x0000, 0x0000, 0xffff, "Super", SUPER),
-  DOM_CODE(0x000012, 0x0000, 0x0000, 0x0000, 0xffff, "Fn", FN),
-  DOM_CODE(0x000013, 0x0000, 0x0000, 0x0000, 0xffff, "FnLock", FN_LOCK),
-  DOM_CODE(0x000014, 0x0000, 0x0000, 0x0000, 0xffff, "Suspend", SUSPEND),
-  DOM_CODE(0x000015, 0x0000, 0x0000, 0x0000, 0xffff, "Resume", RESUME),
-  DOM_CODE(0x000016, 0x0000, 0x0000, 0x0000, 0xffff, "Turbo", TURBO),
-  // TODO(b/146683484): HID usage for privacy screen control is not yet
-  // approved. Once it is update the code here.
-  // TODO(https://crbug.com/952051): Privacy screen will not have a DOM |code|
-  // name defined as it is not exposed to web content.
-  DOM_CODE(0x000017, 0x0279, 0x0281, 0x0000, 0xffff, "PrivacyScreenToggle",
-             PRIVACY_SCREEN_TOGGLE),  // Privacy Screen Toggle
-  // As with privacy screen, microphone mute toggle will not be exposed to web
-  // content.
-  DOM_CODE(0x000018, 0x00f8, 0x0100, 0x0000, 0xffff, "MicrophoneMuteToggle",
-             MICROPHONE_MUTE_TOGGLE),  // Microphone Mute Toggle
-  // As with privacy screen, keyboard backlight toggle will not be exposed to web
-  // content.
-  DOM_CODE(0x000019, 0x00e4, 0x00ec, 0x0000, 0xffff, "KeyboardBacklightToggle",
-             KEYBOARD_BACKLIGHT_TOGGLE),  // Keyboard Backlight Toggle
-
-  // =========================================
-  // USB Usage Page 0x01: Generic Desktop Page
-  // =========================================
-
-  // Sleep could be encoded as USB#0c0032, but there's no corresponding WakeUp
-  // in the 0x0c USB page.
-  //            USB     evdev    XKB     Win     Mac
-  DOM_CODE(0x010082, 0x008e, 0x0096, 0xe05f, 0xffff, "Sleep", SLEEP), // SystemSleep
-  DOM_CODE(0x010083, 0x008f, 0x0097, 0xe063, 0xffff, "WakeUp", WAKE_UP),
-  DOM_CODE(0x0100b5, 0x00e3, 0x00eb, 0x0000, 0xffff, "DisplayToggleIntExt",
-             DISPLAY_TOGGLE_INT_EXT),  // System Display Toggle Int/Ext
-
-
-  // =========================================
-  // USB Usage Page 0x07: Keyboard/Keypad Page
-  // =========================================
-
-  // TODO(garykac):
-  // XKB#005c ISO Level3 Shift (AltGr)
-  // XKB#005e <>||
-  // XKB#006d Linefeed
-  // XKB#008a SunProps cf. USB#0700a3 CrSel/Props
-  // XKB#008e SunOpen
-  // Mac#003f kVK_Function
-  // Mac#000a kVK_ISO_Section (ISO keyboards only)
-  // Mac#0066 kVK_JIS_Eisu (USB#07008a Henkan?)
-
-  //            USB     evdev    XKB     Win     Mac
-  DOM_CODE(0x070000, 0x0000, 0x0000, 0x0000, 0xffff, NULL, USB_RESERVED),
-  DOM_CODE(0x070001, 0x0000, 0x0000, 0x00ff, 0xffff, NULL, USB_ERROR_ROLL_OVER),
-  DOM_CODE(0x070002, 0x0000, 0x0000, 0x00fc, 0xffff, NULL, USB_POST_FAIL),
-  DOM_CODE(0x070003, 0x0000, 0x0000, 0x0000, 0xffff, NULL, USB_ERROR_UNDEFINED),
-  DOM_CODE(0x070004, 0x001e, 0x0026, 0x001e, 0x0000, "KeyA", US_A), // aA
-  DOM_CODE(0x070005, 0x0030, 0x0038, 0x0030, 0x000b, "KeyB", US_B), // bB
-  DOM_CODE(0x070006, 0x002e, 0x0036, 0x002e, 0x0008, "KeyC", US_C), // cC
-  DOM_CODE(0x070007, 0x0020, 0x0028, 0x0020, 0x0002, "KeyD", US_D), // dD
-
-  DOM_CODE(0x070008, 0x0012, 0x001a, 0x0012, 0x000e, "KeyE", US_E), // eE
-  DOM_CODE(0x070009, 0x0021, 0x0029, 0x0021, 0x0003, "KeyF", US_F), // fF
-  DOM_CODE(0x07000a, 0x0022, 0x002a, 0x0022, 0x0005, "KeyG", US_G), // gG
-  DOM_CODE(0x07000b, 0x0023, 0x002b, 0x0023, 0x0004, "KeyH", US_H), // hH
-  DOM_CODE(0x07000c, 0x0017, 0x001f, 0x0017, 0x0022, "KeyI", US_I), // iI
-  DOM_CODE(0x07000d, 0x0024, 0x002c, 0x0024, 0x0026, "KeyJ", US_J), // jJ
-  DOM_CODE(0x07000e, 0x0025, 0x002d, 0x0025, 0x0028, "KeyK", US_K), // kK
-  DOM_CODE(0x07000f, 0x0026, 0x002e, 0x0026, 0x0025, "KeyL", US_L), // lL
-
-  DOM_CODE(0x070010, 0x0032, 0x003a, 0x0032, 0x002e, "KeyM", US_M), // mM
-  DOM_CODE(0x070011, 0x0031, 0x0039, 0x0031, 0x002d, "KeyN", US_N), // nN
-  DOM_CODE(0x070012, 0x0018, 0x0020, 0x0018, 0x001f, "KeyO", US_O), // oO
-  DOM_CODE(0x070013, 0x0019, 0x0021, 0x0019, 0x0023, "KeyP", US_P), // pP
-  DOM_CODE(0x070014, 0x0010, 0x0018, 0x0010, 0x000c, "KeyQ", US_Q), // qQ
-  DOM_CODE(0x070015, 0x0013, 0x001b, 0x0013, 0x000f, "KeyR", US_R), // rR
-  DOM_CODE(0x070016, 0x001f, 0x0027, 0x001f, 0x0001, "KeyS", US_S), // sS
-  DOM_CODE(0x070017, 0x0014, 0x001c, 0x0014, 0x0011, "KeyT", US_T), // tT
-
-  DOM_CODE(0x070018, 0x0016, 0x001e, 0x0016, 0x0020, "KeyU", US_U), // uU
-  DOM_CODE(0x070019, 0x002f, 0x0037, 0x002f, 0x0009, "KeyV", US_V), // vV
-  DOM_CODE(0x07001a, 0x0011, 0x0019, 0x0011, 0x000d, "KeyW", US_W), // wW
-  DOM_CODE(0x07001b, 0x002d, 0x0035, 0x002d, 0x0007, "KeyX", US_X), // xX
-  DOM_CODE(0x07001c, 0x0015, 0x001d, 0x0015, 0x0010, "KeyY", US_Y), // yY
-  DOM_CODE(0x07001d, 0x002c, 0x0034, 0x002c, 0x0006, "KeyZ", US_Z), // zZ
-  DOM_CODE(0x07001e, 0x0002, 0x000a, 0x0002, 0x0012, "Digit1", DIGIT1), // 1!
-  DOM_CODE(0x07001f, 0x0003, 0x000b, 0x0003, 0x0013, "Digit2", DIGIT2), // 2@
-
-  DOM_CODE(0x070020, 0x0004, 0x000c, 0x0004, 0x0014, "Digit3", DIGIT3), // 3#
-  DOM_CODE(0x070021, 0x0005, 0x000d, 0x0005, 0x0015, "Digit4", DIGIT4), // 4$
-  DOM_CODE(0x070022, 0x0006, 0x000e, 0x0006, 0x0017, "Digit5", DIGIT5), // 5%
-  DOM_CODE(0x070023, 0x0007, 0x000f, 0x0007, 0x0016, "Digit6", DIGIT6), // 6^
-  DOM_CODE(0x070024, 0x0008, 0x0010, 0x0008, 0x001a, "Digit7", DIGIT7), // 7&
-  DOM_CODE(0x070025, 0x0009, 0x0011, 0x0009, 0x001c, "Digit8", DIGIT8), // 8*
-  DOM_CODE(0x070026, 0x000a, 0x0012, 0x000a, 0x0019, "Digit9", DIGIT9), // 9(
-  DOM_CODE(0x070027, 0x000b, 0x0013, 0x000b, 0x001d, "Digit0", DIGIT0), // 0)
-
-  DOM_CODE(0x070028, 0x001c, 0x0024, 0x001c, 0x0024, "Enter", ENTER),
-  DOM_CODE(0x070029, 0x0001, 0x0009, 0x0001, 0x0035, "Escape", ESCAPE),
-  DOM_CODE(0x07002a, 0x000e, 0x0016, 0x000e, 0x0033, "Backspace", BACKSPACE),
-  DOM_CODE(0x07002b, 0x000f, 0x0017, 0x000f, 0x0030, "Tab", TAB),
-  DOM_CODE(0x07002c, 0x0039, 0x0041, 0x0039, 0x0031, "Space", SPACE), // Spacebar
-  DOM_CODE(0x07002d, 0x000c, 0x0014, 0x000c, 0x001b, "Minus", MINUS), // -_
-  DOM_CODE(0x07002e, 0x000d, 0x0015, 0x000d, 0x0018, "Equal", EQUAL), // =+
-  DOM_CODE(0x07002f, 0x001a, 0x0022, 0x001a, 0x0021, "BracketLeft", BRACKET_LEFT),
-
-  DOM_CODE(0x070030, 0x001b, 0x0023, 0x001b, 0x001e, "BracketRight", BRACKET_RIGHT),
-  DOM_CODE(0x070031, 0x002b, 0x0033, 0x002b, 0x002a, "Backslash", BACKSLASH), // \|
-  // USB#070032 never appears on keyboards that have USB#070031.
-  // Platforms use the same scancode as for the two keys.
-  // Hence this code can only be generated synthetically
-  // (e.g. in a DOM Level 3 KeyboardEvent).
-  // The keycap varies on international keyboards:
-  //   Dan: '*  Dutch: <>  Ger: #'  UK: #~
-  // TODO(garykac): Verify Mac intl keyboard.
-  //DOM_CODE(0x070032, 0x0000, 0x0000, 0x0000, 0xffff, NULL, INTL_HASH),
-  DOM_CODE(0x070033, 0x0027, 0x002f, 0x0027, 0x0029, "Semicolon", SEMICOLON), // ;:
-  DOM_CODE(0x070034, 0x0028, 0x0030, 0x0028, 0x0027, "Quote", QUOTE), // '"
-  DOM_CODE(0x070035, 0x0029, 0x0031, 0x0029, 0x0032, "Backquote", BACKQUOTE), // `~
-  DOM_CODE(0x070036, 0x0033, 0x003b, 0x0033, 0x002b, "Comma", COMMA), // ,<
-  DOM_CODE(0x070037, 0x0034, 0x003c, 0x0034, 0x002f, "Period", PERIOD), // .>
-
-  DOM_CODE(0x070038, 0x0035, 0x003d, 0x0035, 0x002c, "Slash", SLASH), // /?
-  // TODO(garykac): CapsLock requires special handling for each platform.
-  DOM_CODE(0x070039, 0x003a, 0x0042, 0x003a, 0x0039, "CapsLock", CAPS_LOCK),
-  DOM_CODE(0x07003a, 0x003b, 0x0043, 0x003b, 0x007a, "F1", F1),
-  DOM_CODE(0x07003b, 0x003c, 0x0044, 0x003c, 0x0078, "F2", F2),
-  DOM_CODE(0x07003c, 0x003d, 0x0045, 0x003d, 0x0063, "F3", F3),
-  DOM_CODE(0x07003d, 0x003e, 0x0046, 0x003e, 0x0076, "F4", F4),
-  DOM_CODE(0x07003e, 0x003f, 0x0047, 0x003f, 0x0060, "F5", F5),
-  DOM_CODE(0x07003f, 0x0040, 0x0048, 0x0040, 0x0061, "F6", F6),
-
-  DOM_CODE(0x070040, 0x0041, 0x0049, 0x0041, 0x0062, "F7", F7),
-  DOM_CODE(0x070041, 0x0042, 0x004a, 0x0042, 0x0064, "F8", F8),
-  DOM_CODE(0x070042, 0x0043, 0x004b, 0x0043, 0x0065, "F9", F9),
-  DOM_CODE(0x070043, 0x0044, 0x004c, 0x0044, 0x006d, "F10", F10),
-  DOM_CODE(0x070044, 0x0057, 0x005f, 0x0057, 0x0067, "F11", F11),
-  DOM_CODE(0x070045, 0x0058, 0x0060, 0x0058, 0x006f, "F12", F12),
-  // PrintScreen is effectively F13 on Mac OS X.
-  DOM_CODE(0x070046, 0x0063, 0x006b, 0xe037, 0xffff, "PrintScreen", PRINT_SCREEN),
-  DOM_CODE(0x070047, 0x0046, 0x004e, 0x0046, 0xffff, "ScrollLock", SCROLL_LOCK),
-
-  DOM_CODE(0x070048, 0x0077, 0x007f, 0x0045, 0xffff, "Pause", PAUSE),
-  // USB#0x070049 Insert, labeled "Help/Insert" on Mac -- see note M1 at top.
-  DOM_CODE(0x070049, 0x006e, 0x0076, 0xe052, 0x0072, "Insert", INSERT),
-  DOM_CODE(0x07004a, 0x0066, 0x006e, 0xe047, 0x0073, "Home", HOME),
-  DOM_CODE(0x07004b, 0x0068, 0x0070, 0xe049, 0x0074, "PageUp", PAGE_UP),
-  // Delete (Forward Delete) named DEL because DELETE conflicts with <windows.h>
-  DOM_CODE(0x07004c, 0x006f, 0x0077, 0xe053, 0x0075, "Delete", DEL),
-  DOM_CODE(0x07004d, 0x006b, 0x0073, 0xe04f, 0x0077, "End", END),
-  DOM_CODE(0x07004e, 0x006d, 0x0075, 0xe051, 0x0079, "PageDown", PAGE_DOWN),
-  DOM_CODE(0x07004f, 0x006a, 0x0072, 0xe04d, 0x007c, "ArrowRight", ARROW_RIGHT),
-
-  DOM_CODE(0x070050, 0x0069, 0x0071, 0xe04b, 0x007b, "ArrowLeft", ARROW_LEFT),
-  DOM_CODE(0x070051, 0x006c, 0x0074, 0xe050, 0x007d, "ArrowDown", ARROW_DOWN),
-  DOM_CODE(0x070052, 0x0067, 0x006f, 0xe048, 0x007e, "ArrowUp", ARROW_UP),
-  DOM_CODE(0x070053, 0x0045, 0x004d, 0xe045, 0x0047, "NumLock", NUM_LOCK),
-  DOM_CODE(0x070054, 0x0062, 0x006a, 0xe035, 0x004b, "NumpadDivide", NUMPAD_DIVIDE),
-  DOM_CODE(0x070055, 0x0037, 0x003f, 0x0037, 0x0043, "NumpadMultiply",
-             NUMPAD_MULTIPLY),  // Keypad_*
-  DOM_CODE(0x070056, 0x004a, 0x0052, 0x004a, 0x004e, "NumpadSubtract",
-             NUMPAD_SUBTRACT),  // Keypad_-
-  DOM_CODE(0x070057, 0x004e, 0x0056, 0x004e, 0x0045, "NumpadAdd", NUMPAD_ADD),
-
-  DOM_CODE(0x070058, 0x0060, 0x0068, 0xe01c, 0x004c, "NumpadEnter", NUMPAD_ENTER),
-  DOM_CODE(0x070059, 0x004f, 0x0057, 0x004f, 0x0053, "Numpad1", NUMPAD1), // +End
-  DOM_CODE(0x07005a, 0x0050, 0x0058, 0x0050, 0x0054, "Numpad2", NUMPAD2), // +Down
-  DOM_CODE(0x07005b, 0x0051, 0x0059, 0x0051, 0x0055, "Numpad3", NUMPAD3), // +PageDn
-  DOM_CODE(0x07005c, 0x004b, 0x0053, 0x004b, 0x0056, "Numpad4", NUMPAD4), // +Left
-  DOM_CODE(0x07005d, 0x004c, 0x0054, 0x004c, 0x0057, "Numpad5", NUMPAD5), //
-  DOM_CODE(0x07005e, 0x004d, 0x0055, 0x004d, 0x0058, "Numpad6", NUMPAD6), // +Right
-  DOM_CODE(0x07005f, 0x0047, 0x004f, 0x0047, 0x0059, "Numpad7", NUMPAD7), // +Home
-
-  DOM_CODE(0x070060, 0x0048, 0x0050, 0x0048, 0x005b, "Numpad8", NUMPAD8), // +Up
-  DOM_CODE(0x070061, 0x0049, 0x0051, 0x0049, 0x005c, "Numpad9", NUMPAD9), // +PageUp
-  DOM_CODE(0x070062, 0x0052, 0x005a, 0x0052, 0x0052, "Numpad0", NUMPAD0), // +Insert
-  DOM_CODE(0x070063, 0x0053, 0x005b, 0x0053, 0x0041, "NumpadDecimal",
-             NUMPAD_DECIMAL),  // Keypad_. Delete
-  // USB#070064 is not present on US keyboard.
-  // This key is typically located near LeftShift key.
-  // The keycap varies on international keyboards:
-  //   Dan: <> Dutch: ][ Ger: <> UK: \|
-  DOM_CODE(0x070064, 0x0056, 0x005e, 0x0056, 0x000a, "IntlBackslash", INTL_BACKSLASH),
-  // USB#0x070065 Application Menu (next to RWin key) -- see note L2 at top.
-  DOM_CODE(0x070065, 0x007f, 0x0087, 0xe05d, 0x006e, "ContextMenu", CONTEXT_MENU),
-  DOM_CODE(0x070066, 0x0074, 0x007c, 0xe05e, 0xffff, "Power", POWER),
-  DOM_CODE(0x070067, 0x0075, 0x007d, 0x0059, 0x0051, "NumpadEqual", NUMPAD_EQUAL),
-
-  DOM_CODE(0x070068, 0x00b7, 0x00bf, 0x0064, 0x0069, "F13", F13),
-  DOM_CODE(0x070069, 0x00b8, 0x00c0, 0x0065, 0x006b, "F14", F14),
-  DOM_CODE(0x07006a, 0x00b9, 0x00c1, 0x0066, 0x0071, "F15", F15),
-  DOM_CODE(0x07006b, 0x00ba, 0x00c2, 0x0067, 0x006a, "F16", F16),
-  DOM_CODE(0x07006c, 0x00bb, 0x00c3, 0x0068, 0x0040, "F17", F17),
-  DOM_CODE(0x07006d, 0x00bc, 0x00c4, 0x0069, 0x004f, "F18", F18),
-  DOM_CODE(0x07006e, 0x00bd, 0x00c5, 0x006a, 0x0050, "F19", F19),
-  DOM_CODE(0x07006f, 0x00be, 0x00c6, 0x006b, 0x005a, "F20", F20),
-
-  DOM_CODE(0x070070, 0x00bf, 0x00c7, 0x006c, 0xffff, "F21", F21),
-  DOM_CODE(0x070071, 0x00c0, 0x00c8, 0x006d, 0xffff, "F22", F22),
-  DOM_CODE(0x070072, 0x00c1, 0x00c9, 0x006e, 0xffff, "F23", F23),
-  // USB#0x070073 -- see note W1 at top.
-  DOM_CODE(0x070073, 0x00c2, 0x00ca, 0x0076, 0xffff, "F24", F24),
-  DOM_CODE(0x070074, 0x0086, 0x008e, 0x0000, 0xffff, "Open", OPEN), // Execute
-  // USB#0x070075 Help -- see note M1 at top.
-  DOM_CODE(0x070075, 0x008a, 0x0092, 0xe03b, 0xffff, "Help", HELP),
-  // USB#0x070076 Keyboard Menu -- see note L2 at top.
-  //DOM_CODE(0x070076, 0x0000, 0x0000, 0x0000, 0xffff, NULL, MENU), // Menu
-  DOM_CODE(0x070077, 0x0084, 0x008c, 0x0000, 0xffff, "Select", SELECT), // Select
-
-  //DOM_CODE(0x070078, 0x0080, 0x0088, 0x0000, 0xffff, NULL, STOP), // Stop
-  DOM_CODE(0x070079, 0x0081, 0x0089, 0x0000, 0xffff, "Again", AGAIN), // Again
-  DOM_CODE(0x07007a, 0x0083, 0x008b, 0xe008, 0xffff, "Undo", UNDO),
-  DOM_CODE(0x07007b, 0x0089, 0x0091, 0xe017, 0xffff, "Cut", CUT),
-  DOM_CODE(0x07007c, 0x0085, 0x008d, 0xe018, 0xffff, "Copy", COPY),
-  DOM_CODE(0x07007d, 0x0087, 0x008f, 0xe00a, 0xffff, "Paste", PASTE),
-  DOM_CODE(0x07007e, 0x0088, 0x0090, 0x0000, 0xffff, "Find", FIND), // Find
-  DOM_CODE(0x07007f, 0x0071, 0x0079, 0xe020, 0x004a, "AudioVolumeMute", VOLUME_MUTE),
-
-  DOM_CODE(0x070080, 0x0073, 0x007b, 0xe030, 0x0048, "AudioVolumeUp", VOLUME_UP),
-  DOM_CODE(0x070081, 0x0072, 0x007a, 0xe02e, 0x0049, "AudioVolumeDown", VOLUME_DOWN),
-  //DOM_CODE(0x070082, 0x0000, 0x0000, 0x0000, 0xffff, NULL, LOCKING_CAPS_LOCK),
-  //DOM_CODE(0x070083, 0x0000, 0x0000, 0x0000, 0xffff, NULL, LOCKING_NUM_LOCK),
-  //DOM_CODE(0x070084, 0x0000, 0x0000, 0x0000, 0xffff, NULL, LOCKING_SCROLL_LOCK),
-  DOM_CODE(0x070085, 0x0079, 0x0081, 0x007e, 0x005f, "NumpadComma", NUMPAD_COMMA),
-
-  // International1
-  // USB#070086 is used on AS/400 keyboards. Standard Keypad_= is USB#070067.
-  //DOM_CODE(0x070086, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_EQUAL),
-  // USB#070087 is used for Brazilian /? and Japanese _ 'ro'.
-  DOM_CODE(0x070087, 0x0059, 0x0061, 0x0073, 0x005e, "IntlRo", INTL_RO),
-  // International2
-  // USB#070088 is used as Japanese Hiragana/Katakana key.
-  DOM_CODE(0x070088, 0x005d, 0x0065, 0x0070, 0xffff, "KanaMode", KANA_MODE),
-  // International3
-  // USB#070089 is used as Japanese Yen key.
-  DOM_CODE(0x070089, 0x007c, 0x0084, 0x007d, 0x005d, "IntlYen", INTL_YEN),
-  // International4
-  // USB#07008a is used as Japanese Henkan (Convert) key.
-  DOM_CODE(0x07008a, 0x005c, 0x0064, 0x0079, 0xffff, "Convert", CONVERT),
-  // International5
-  // USB#07008b is used as Japanese Muhenkan (No-convert) key.
-  DOM_CODE(0x07008b, 0x005e, 0x0066, 0x007b, 0xffff, "NonConvert", NON_CONVERT),
-  //DOM_CODE(0x07008c, 0x005f, 0x0067, 0x005c, 0xffff, NULL, INTERNATIONAL6),
-  //DOM_CODE(0x07008d, 0x0000, 0x0000, 0x0000, 0xffff, NULL, INTERNATIONAL7),
-  //DOM_CODE(0x07008e, 0x0000, 0x0000, 0x0000, 0xffff, NULL, INTERNATIONAL8),
-  //DOM_CODE(0x07008f, 0x0000, 0x0000, 0x0000, 0xffff, NULL, INTERNATIONAL9),
-
-  // LANG1
-  // USB#070090 is used as Korean Hangul/English toggle key, and as the Kana key
-  // on the Apple Japanese keyboard.
-  DOM_CODE(0x070090, 0x007a, 0x0082, 0x0072, 0x0068, "Lang1", LANG1),
-  // LANG2
-  // USB#070091 is used as Korean Hanja conversion key, and as the Eisu key on
-  // the Apple Japanese keyboard.
-  DOM_CODE(0x070091, 0x007b, 0x0083, 0x0071, 0x0066, "Lang2", LANG2),
-  // LANG3
-  // USB#070092 is used as Japanese Katakana key.
-  DOM_CODE(0x070092, 0x005a, 0x0062, 0x0078, 0xffff, "Lang3", LANG3),
-  // LANG4
-  // USB#070093 is used as Japanese Hiragana key.
-  DOM_CODE(0x070093, 0x005b, 0x0063, 0x0077, 0xffff, "Lang4", LANG4),
-  // LANG5
-  // USB#070094 is used as Japanese Zenkaku/Hankaku (Fullwidth/halfwidth) key.
-  // Not mapped on Windows -- see note W1 at top.
-  DOM_CODE(0x070094, 0x0055, 0x005d, 0x0000, 0xffff, "Lang5", LANG5),
-  //DOM_CODE(0x070095, 0x0000, 0x0000, 0x0000, 0xffff, NULL, LANG6), // LANG6
-  //DOM_CODE(0x070096, 0x0000, 0x0000, 0x0000, 0xffff, NULL, LANG7), // LANG7
-  //DOM_CODE(0x070097, 0x0000, 0x0000, 0x0000, 0xffff, NULL, LANG8), // LANG8
-  //DOM_CODE(0x070098, 0x0000, 0x0000, 0x0000, 0xffff, NULL, LANG9), // LANG9
-
-  //DOM_CODE(0x070099, 0x0000, 0x0000, 0x0000, 0xffff, NULL, ALTERNATE_ERASE),
-  //DOM_CODE(0x07009a, 0x0000, 0x0000, 0x0000, 0xffff, NULL, SYS_REQ), // /Attention
-  DOM_CODE(0x07009b, 0x0000, 0x0000, 0x0000, 0xffff, "Abort", ABORT), // Cancel
-  // USB#0x07009c Keyboard Clear -- see note L1 at top.
-  //DOM_CODE(0x07009c, 0x0000, 0x0000, 0x0000, 0xffff, NULL, CLEAR), // Clear
-  //DOM_CODE(0x07009d, 0x0000, 0x0000, 0x0000, 0xffff, NULL, PRIOR), // Prior
-  //DOM_CODE(0x07009e, 0x0000, 0x0000, 0x0000, 0xffff, NULL, RETURN), // Return
-  //DOM_CODE(0x07009f, 0x0000, 0x0000, 0x0000, 0xffff, NULL, SEPARATOR), // Separator
-
-  //DOM_CODE(0x0700a0, 0x0000, 0x0000, 0x0000, 0xffff, NULL, OUT), // Out
-  //DOM_CODE(0x0700a1, 0x0000, 0x0000, 0x0000, 0xffff, NULL, OPER), // Oper
-  //DOM_CODE(0x0700a2, 0x0000, 0x0000, 0x0000, 0xffff, NULL, CLEAR_AGAIN),
-  // USB#0x0700a3 Props -- see note L2 at top.
-  DOM_CODE(0x0700a3, 0x0000, 0x0000, 0x0000, 0xffff, "Props", PROPS), // CrSel/Props
-  //DOM_CODE(0x0700a4, 0x0000, 0x0000, 0x0000, 0xffff, NULL, EX_SEL), // ExSel
-
-  //DOM_CODE(0x0700b0, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_00),
-  //DOM_CODE(0x0700b1, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_000),
-  //DOM_CODE(0x0700b2, 0x0000, 0x0000, 0x0000, 0xffff, NULL, THOUSANDS_SEPARATOR),
-  //DOM_CODE(0x0700b3, 0x0000, 0x0000, 0x0000, 0xffff, NULL, DECIMAL_SEPARATOR),
-  //DOM_CODE(0x0700b4, 0x0000, 0x0000, 0x0000, 0xffff, NULL, CURRENCY_UNIT),
-  //DOM_CODE(0x0700b5, 0x0000, 0x0000, 0x0000, 0xffff, NULL, CURRENCY_SUBUNIT),
-  DOM_CODE(0x0700b6, 0x00b3, 0x00bb, 0x0000, 0xffff, "NumpadParenLeft",
-             NUMPAD_PAREN_LEFT),   // Keypad_(
-  DOM_CODE(0x0700b7, 0x00b4, 0x00bc, 0x0000, 0xffff, "NumpadParenRight",
-             NUMPAD_PAREN_RIGHT),  // Keypad_)
-
-  //DOM_CODE(0x0700b8, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_BRACE_LEFT),
-  //DOM_CODE(0x0700b9, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_BRACE_RIGHT),
-  //DOM_CODE(0x0700ba, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_TAB),
-  DOM_CODE(0x0700bb, 0x0000, 0x0000, 0x0000, 0xffff, "NumpadBackspace",
-             NUMPAD_BACKSPACE),  // Keypad_Backspace
-  //DOM_CODE(0x0700bc, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_A),
-  //DOM_CODE(0x0700bd, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_B),
-  //DOM_CODE(0x0700be, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_C),
-  //DOM_CODE(0x0700bf, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_D),
-
-  //DOM_CODE(0x0700c0, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_E),
-  //DOM_CODE(0x0700c1, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_F),
-  //DOM_CODE(0x0700c2, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_XOR),
-  //DOM_CODE(0x0700c3, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_CARAT),
-  //DOM_CODE(0x0700c4, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_PERCENT),
-  //DOM_CODE(0x0700c5, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_LESS_THAN),
-  //DOM_CODE(0x0700c6, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_GREATER_THAN),
-  //DOM_CODE(0x0700c7, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_AMERSAND),
-
-  //DOM_CODE(0x0700c8, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_DOUBLE_AMPERSAND),
-  //DOM_CODE(0x0700c9, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_VERTICAL_BAR),
-  //DOM_CODE(0x0700ca, 0x0000, 0x0000, 0x0000, 0xffff, NULL,
-  //           NUMPAD_DOUBLE_VERTICAL_BAR),  // Keypad_||
-  //DOM_CODE(0x0700cb, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_COLON),
-  //DOM_CODE(0x0700cc, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_NUMBER),
-  //DOM_CODE(0x0700cd, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_SPACE),
-  //DOM_CODE(0x0700ce, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_AT),
-  //DOM_CODE(0x0700cf, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_EXCLAMATION),
-
-  DOM_CODE(0x0700d0, 0x0000, 0x0000, 0x0000, 0xffff, "NumpadMemoryStore",
-             NUMPAD_MEMORY_STORE),  // Keypad_MemoryStore
-  DOM_CODE(0x0700d1, 0x0000, 0x0000, 0x0000, 0xffff, "NumpadMemoryRecall",
-             NUMPAD_MEMORY_RECALL),  // Keypad_MemoryRecall
-  DOM_CODE(0x0700d2, 0x0000, 0x0000, 0x0000, 0xffff, "NumpadMemoryClear",
-             NUMPAD_MEMORY_CLEAR),  // Keypad_MemoryClear
-  DOM_CODE(0x0700d3, 0x0000, 0x0000, 0x0000, 0xffff, "NumpadMemoryAdd",
-             NUMPAD_MEMORY_ADD),  // Keypad_MemoryAdd
-  DOM_CODE(0x0700d4, 0x0000, 0x0000, 0x0000, 0xffff, "NumpadMemorySubtract",
-             NUMPAD_MEMORY_SUBTRACT),  // Keypad_MemorySubtract
-  //DOM_CODE(0x0700d5, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_MEMORY_MULTIPLE),
-  //DOM_CODE(0x0700d6, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_MEMORY_DIVIDE),
-  DOM_CODE(0x0700d7, 0x0076, 0x007e, 0x0000, 0xffff, NULL, NUMPAD_SIGN_CHANGE), // +/-
-  // USB#0x0700d8 Keypad Clear -- see note L1 at top.
-  DOM_CODE(0x0700d8, 0x0000, 0x0000, 0x0000, 0xffff, "NumpadClear", NUMPAD_CLEAR),
-  DOM_CODE(0x0700d9, 0x0000, 0x0000, 0x0000, 0xffff, "NumpadClearEntry",
-             NUMPAD_CLEAR_ENTRY),  // Keypad_ClearEntry
-  //DOM_CODE(0x0700da, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_BINARY),
-  //DOM_CODE(0x0700db, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_OCTAL),
-  //DOM_CODE(0x0700dc, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_DECIMAL),
-  //DOM_CODE(0x0700dd, 0x0000, 0x0000, 0x0000, 0xffff, NULL, NUMPAD_HEXADECIMAL),
-
-  // USB#0700de - #0700df are reserved.
-  DOM_CODE(0x0700e0, 0x001d, 0x0025, 0x001d, 0x003b, "ControlLeft", CONTROL_LEFT),
-  DOM_CODE(0x0700e1, 0x002a, 0x0032, 0x002a, 0x0038, "ShiftLeft", SHIFT_LEFT),
-  // USB#0700e2: left Alt key (Mac left Option key).
-  DOM_CODE(0x0700e2, 0x0038, 0x0040, 0x0038, 0x003a, "AltLeft", ALT_LEFT),
-  // USB#0700e3: left GUI key, e.g. Windows, Mac Command, ChromeOS Search.
-  DOM_CODE(0x0700e3, 0x007d, 0x0085, 0xe05b, 0x0037, "MetaLeft", META_LEFT),
-  DOM_CODE(0x0700e4, 0x0061, 0x0069, 0xe01d, 0x003e, "ControlRight", CONTROL_RIGHT),
-  DOM_CODE(0x0700e5, 0x0036, 0x003e, 0x0036, 0x003c, "ShiftRight", SHIFT_RIGHT),
-  // USB#0700e6: right Alt key (Mac right Option key).
-  DOM_CODE(0x0700e6, 0x0064, 0x006c, 0xe038, 0x003d, "AltRight", ALT_RIGHT),
-  // USB#0700e7: right GUI key, e.g. Windows, Mac Command, ChromeOS Search.
-  DOM_CODE(0x0700e7, 0x007e, 0x0086, 0xe05c, 0x0036, "MetaRight", META_RIGHT),
-
-  // USB#0700e8 - #07ffff are reserved
-
-  // ==================================
-  // USB Usage Page 0x0c: Consumer Page
-  // ==================================
-  // AL = Application Launch
-  // AC = Application Control
-
-  // TODO(garykac): Many XF86 keys have multiple scancodes mapping to them.
-  // We need to map all of these into a canonical USB scancode without
-  // confusing the reverse-lookup - most likely by simply returning the first
-  // found match.
-
-  // TODO(garykac): Find appropriate mappings for:
-  // Win#e03c Music - USB#0c0193 is AL_AVCapturePlayback
-  // Win#e064 Pictures
-  // XKB#0080 XF86LaunchA
-  // XKB#0099 XF86Send
-  // XKB#009b XF86Xfer
-  // XKB#009c XF86Launch1
-  // XKB#009d XF86Launch2
-  // XKB... remaining XF86 keys
-
-  // KEY_BRIGHTNESS* added in Linux 3.16
-  // http://www.usb.org/developers/hidpage/HUTRR41.pdf
-  //
-  // Keyboard backlight/illumination spec update.
-  // https://www.usb.org/sites/default/files/hutrr73_-_fn_key_and_keyboard_backlight_brightness_0.pdf
-  //            USB     evdev    XKB     Win     Mac   Code
-  DOM_CODE(0x0c0060, 0x0166, 0x016e, 0x0000, 0xffff, NULL, INFO),
-  DOM_CODE(0x0c0061, 0x0172, 0x017a, 0x0000, 0xffff, NULL, CLOSED_CAPTION_TOGGLE),
-  DOM_CODE(0x0c006f, 0x00e1, 0x00e9, 0x0000, 0xffff, "BrightnessUp", BRIGHTNESS_UP),
-  DOM_CODE(0x0c0070, 0x00e0, 0x00e8, 0x0000, 0xffff, "BrightnessDown",
-             BRIGHTNESS_DOWN),  // Display Brightness Decrement
-  DOM_CODE(0x0c0072, 0x01af, 0x01b7, 0x0000, 0xffff, NULL, BRIGHTNESS_TOGGLE),
-  DOM_CODE(0x0c0073, 0x0250, 0x0258, 0x0000, 0xffff, NULL, BRIGHTNESS_MINIMIUM),
-  DOM_CODE(0x0c0074, 0x0251, 0x0259, 0x0000, 0xffff, NULL, BRIGHTNESS_MAXIMUM),
-  DOM_CODE(0x0c0075, 0x00f4, 0x00fc, 0x0000, 0xffff, NULL, BRIGHTNESS_AUTO),
-  DOM_CODE(0x0c0079, 0x00e6, 0x00ee, 0x0000, 0xffff, NULL, KBD_ILLUM_UP),
-  DOM_CODE(0x0c007a, 0x00e5, 0x00ed, 0x0000, 0xffff, NULL, KBD_ILLUM_DOWN),
-  DOM_CODE(0x0c0083, 0x0195, 0x019d, 0x0000, 0xffff, NULL, MEDIA_LAST),
-  DOM_CODE(0x0c008c, 0x00a9, 0x00b1, 0x0000, 0xffff, NULL, LAUNCH_PHONE),
-  DOM_CODE(0x0c008d, 0x016a, 0x0172, 0x0000, 0xffff, NULL, PROGRAM_GUIDE),
-  DOM_CODE(0x0c0094, 0x00ae, 0x00b6, 0x0000, 0xffff, NULL, EXIT),
-  DOM_CODE(0x0c009c, 0x019a, 0x01a2, 0x0000, 0xffff, NULL, CHANNEL_UP),
-  DOM_CODE(0x0c009d, 0x019b, 0x01a3, 0x0000, 0xffff, NULL, CHANNEL_DOWN),
-
-  //              USB     evdev    XKB     Win     Mac
-  DOM_CODE(0x0c00b0, 0x00cf, 0x00d7, 0x0000, 0xffff, "MediaPlay", MEDIA_PLAY),
-  DOM_CODE(0x0c00b1, 0x00c9, 0x00d1, 0x0000, 0xffff, "MediaPause", MEDIA_PAUSE),
-  DOM_CODE(0x0c00b2, 0x00a7, 0x00af, 0x0000, 0xffff, "MediaRecord", MEDIA_RECORD),
-  DOM_CODE(0x0c00b3, 0x00d0, 0x00d8, 0x0000, 0xffff, "MediaFastForward", MEDIA_FAST_FORWARD),
-  DOM_CODE(0x0c00b4, 0x00a8, 0x00b0, 0x0000, 0xffff, "MediaRewind", MEDIA_REWIND),
-  DOM_CODE(0x0c00b5, 0x00a3, 0x00ab, 0xe019, 0xffff, "MediaTrackNext",
-             MEDIA_TRACK_NEXT),
-  DOM_CODE(0x0c00b6, 0x00a5, 0x00ad, 0xe010, 0xffff, "MediaTrackPrevious",
-             MEDIA_TRACK_PREVIOUS),
-  DOM_CODE(0x0c00b7, 0x00a6, 0x00ae, 0xe024, 0xffff, "MediaStop", MEDIA_STOP),
-  DOM_CODE(0x0c00b8, 0x00a1, 0x00a9, 0xe02c, 0xffff, "Eject", EJECT),
-  DOM_CODE(0x0c00cd, 0x00a4, 0x00ac, 0xe022, 0xffff, "MediaPlayPause",
-             MEDIA_PLAY_PAUSE),
-  DOM_CODE(0x0c00cf, 0x0246, 0x024e, 0x0000, 0xffff, NULL, SPEECH_INPUT_TOGGLE),
-  DOM_CODE(0x0c00e5, 0x00d1, 0x00d9, 0x0000, 0xffff, NULL, BASS_BOOST),
-  //DOM_CODE(0x0c00e6, 0x0000, 0x0000, 0x0000, 0xffff, NULL, SURROUND_MODE),
-  //DOM_CODE(0x0c0150, 0x0000, 0x0000, 0x0000, 0xffff, NULL, AUDIO_BALANCE_RIGHT),
-  //DOM_CODE(0x0c0151, 0x0000, 0x0000, 0x0000, 0xffff, NULL, AUDIO_BALANCE_LEFT ),
-  //DOM_CODE(0x0c0152, 0x0000, 0x0000, 0x0000, 0xffff, NULL, AUDIO_BASS_INCREMENT),
-  //DOM_CODE(0x0c0153, 0x0000, 0x0000, 0x0000, 0xffff, NULL, AUDIO_BASS_DECREMENT),
-  //DOM_CODE(0x0c0154, 0x0000, 0x0000, 0x0000, 0xffff, NULL, AUDIO_TREBLE_INCREMENT),
-  //DOM_CODE(0x0c0155, 0x0000, 0x0000, 0x0000, 0xffff, NULL, AUDIO_TREBLE_DECREMENT),
-  // USB#0c0183: AL Consumer Control Configuration
-  DOM_CODE(0x0c0183, 0x00ab, 0x00b3, 0xe06d, 0xffff, "MediaSelect", MEDIA_SELECT),
-  DOM_CODE(0x0c0184, 0x01a5, 0x01ad, 0x0000, 0xffff, NULL, LAUNCH_WORD_PROCESSOR),
-  DOM_CODE(0x0c0186, 0x01a7, 0x01af, 0x0000, 0xffff, NULL, LAUNCH_SPREADSHEET),
-  // USB#0x0c018a AL_EmailReader
-  DOM_CODE(0x0c018a, 0x009b, 0x00a3, 0xe06c, 0xffff, "LaunchMail", LAUNCH_MAIL),
-  // USB#0x0c018d: AL Contacts/Address Book
-  DOM_CODE(0x0c018d, 0x01ad, 0x01b5, 0x0000, 0xffff, NULL, LAUNCH_CONTACTS),
-  // USB#0x0c018e: AL Calendar/Schedule
-  DOM_CODE(0x0c018e, 0x018d, 0x0195, 0x0000, 0xffff, NULL, LAUNCH_CALENDAR),
-  // USB#0x0c018f AL Task/Project Manager
-  //DOM_CODE(0x0c018f, 0x0241, 0x0249, 0x0000, 0xffff, NULL, LAUNCH_TASK_MANAGER),
-  // USB#0x0c0190: AL Log/Journal/Timecard
-  //DOM_CODE(0x0c0190, 0x0242, 0x024a, 0x0000, 0xffff, NULL, LAUNCH_LOG),
-  // USB#0x0c0192: AL_Calculator
-  DOM_CODE(0x0c0192, 0x008c, 0x0094, 0xe021, 0xffff, "LaunchApp2", LAUNCH_APP2),
-  // USB#0c0194: My Computer (AL_LocalMachineBrowser)
-  DOM_CODE(0x0c0194, 0x0090, 0x0098, 0xe06b, 0xffff, "LaunchApp1", LAUNCH_APP1),
-  DOM_CODE(0x0c0196, 0x0096, 0x009e, 0x0000, 0xffff, NULL, LAUNCH_INTERNET_BROWSER),
-  DOM_CODE(0x0c019C, 0x01b1, 0x01b9, 0x0000, 0xffff, NULL, LOG_OFF),
-  // USB#0x0c019e: AL Terminal Lock/Screensaver
-  DOM_CODE(0x0c019e, 0x0098, 0x00a0, 0x0000, 0xffff, NULL, LOCK_SCREEN),
-  // USB#0x0c019f AL Control Panel
-  DOM_CODE(0x0c019f, 0x0243, 0x024b, 0x0000, 0xffff, "LaunchControlPanel",
-             LAUNCH_CONTROL_PANEL),
-  // USB#0x0c01a2: AL Select Task/Application
-  DOM_CODE(0x0c01a2, 0x0244, 0x024c, 0x0000, 0xffff, "SelectTask", SELECT_TASK),
-  // USB#0x0c01a7: AL_Documents
-  DOM_CODE(0x0c01a7, 0x00eb, 0x00f3, 0x0000, 0xffff, NULL, LAUNCH_DOCUMENTS),
-  DOM_CODE(0x0c01ab, 0x01b0, 0x01b8, 0x0000, 0xffff, NULL, SPELL_CHECK),
-  // USB#0x0c01ae: AL Keyboard Layout
-  DOM_CODE(0x0c01ae, 0x0176, 0x017e, 0x0000, 0xffff, NULL, LAUNCH_KEYBOARD_LAYOUT),
-  DOM_CODE(0x0c01b1, 0x0245, 0x024d, 0x0000, 0xffff, "LaunchScreenSaver",
-             LAUNCH_SCREEN_SAVER),  // AL Screen Saver
-  DOM_CODE(0x0c01cb, 0x0247, 0x024f, 0x0000, 0xffff, "LaunchAssistant",
-             LAUNCH_ASSISTANT),  // AL Context-aware desktop assistant
-   // USB#0c01b4: Home Directory (AL_FileBrowser) (Explorer)
-  //DOM_CODE(0x0c01b4, 0x0000, 0x0000, 0x0000, 0xffff, NULL, LAUNCH_FILE_BROWSER),
-  // USB#0x0c01b7: AL Audio Browser
-  DOM_CODE(0x0c01b7, 0x0188, 0x0190, 0x0000, 0xffff, NULL, LAUNCH_AUDIO_BROWSER),
-  // USB#0x0c0201: AC New
-  DOM_CODE(0x0c0201, 0x00b5, 0x00bd, 0x0000, 0xffff, NULL, NEW),
-  // USB#0x0c0203: AC Close
-  DOM_CODE(0x0c0203, 0x00ce, 0x00d6, 0x0000, 0xffff, NULL, CLOSE),
-  // USB#0x0c0207: AC Close
-  DOM_CODE(0x0c0207, 0x00ea, 0x00f2, 0x0000, 0xffff, NULL, SAVE),
-  // USB#0x0c0208: AC Print
-  DOM_CODE(0x0c0208, 0x00d2, 0x00da, 0x0000, 0xffff, NULL, PRINT),
-  // USB#0x0c0221:  AC_Search
-  DOM_CODE(0x0c0221, 0x00d9, 0x00e1, 0xe065, 0xffff, "BrowserSearch", BROWSER_SEARCH),
-  // USB#0x0c0223:  AC_Home
-  DOM_CODE(0x0c0223, 0x00ac, 0x00b4, 0xe032, 0xffff, "BrowserHome", BROWSER_HOME),
-  // USB#0x0c0224:  AC_Back
-  DOM_CODE(0x0c0224, 0x009e, 0x00a6, 0xe06a, 0xffff, "BrowserBack", BROWSER_BACK),
-  // USB#0x0c0225:  AC_Forward
-  DOM_CODE(0x0c0225, 0x009f, 0x00a7, 0xe069, 0xffff, "BrowserForward",
-             BROWSER_FORWARD),
-  // USB#0x0c0226:  AC_Stop
-  DOM_CODE(0x0c0226, 0x0080, 0x0088, 0xe068, 0xffff, "BrowserStop", BROWSER_STOP),
-  // USB#0x0c0227:  AC_Refresh (Reload)
-  DOM_CODE(0x0c0227, 0x00ad, 0x00b5, 0xe067, 0xffff, "BrowserRefresh",
-             BROWSER_REFRESH),
-  // USB#0x0c022a:  AC_Bookmarks (Favorites)
-  DOM_CODE(0x0c022a, 0x009c, 0x00a4, 0xe066, 0xffff, "BrowserFavorites",
-             BROWSER_FAVORITES),
-  DOM_CODE(0x0c022d, 0x01a2, 0x01aa, 0x0000, 0xffff, NULL, ZOOM_IN),
-  DOM_CODE(0x0c022e, 0x01a3, 0x01ab, 0x0000, 0xffff, NULL, ZOOM_OUT),
-  // USB#0x0c0230:  AC Full Screen View
-  //DOM_CODE(0x0c0230, 0x0000, 0x0000, 0x0000, 0xffff, NULL, ZOOM_FULL),
-  // USB#0x0c0231:  AC Normal View
-  //DOM_CODE(0x0c0231, 0x0000, 0x0000, 0x0000, 0xffff, NULL, ZOOM_NORMAL),
-  DOM_CODE(0x0c0232, 0x0174, 0x017c, 0x0000, 0xffff, "ZoomToggle",
-             ZOOM_TOGGLE),  // AC View Toggle
-  // USB#0x0c0279:  AC Redo/Repeat
-  DOM_CODE(0x0c0279, 0x00b6, 0x00be, 0x0000, 0xffff, NULL, REDO),
-  // USB#0x0c0289:  AC_Reply
-  DOM_CODE(0x0c0289, 0x00e8, 0x00f0, 0x0000, 0xffff, "MailReply", MAIL_REPLY),
-  // USB#0x0c028b:  AC_ForwardMsg (MailForward)
-  DOM_CODE(0x0c028b, 0x00e9, 0x00f1, 0x0000, 0xffff, "MailForward", MAIL_FORWARD),
-  // USB#0x0c028c:  AC_Send
-  DOM_CODE(0x0c028c, 0x00e7, 0x00ef, 0x0000, 0xffff, "MailSend", MAIL_SEND),
-  // USB#0x0c029d:  AC Next Keyboard Layout Select
-  DOM_CODE(0x0c029d, 0x0248, 0x0250, 0x0000, 0xffff, "KeyboardLayoutSelect",
-             KEYBOARD_LAYOUT_SELECT),
-  DOM_CODE(0x0c029f, 0x0078, 0x0080, 0x0000, 0xffff, "ShowAllWindows",
-             SHOW_ALL_WINDOWS),  // AC Desktop Show All Windows
-};
diff --git a/node_modules/native-keymap/deps/chromium/keyboard_codes.h b/node_modules/native-keymap/deps/chromium/keyboard_codes.h
deleted file mode 100644
index 111cfe2..0000000
--- a/node_modules/native-keymap/deps/chromium/keyboard_codes.h
+++ /dev/null
@@ -1,23 +0,0 @@
-// Copyright (c) 2011 The Chromium Authors. All rights reserved.
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-
-#ifndef UI_EVENTS_KEYCODES_KEYBOARD_CODES_H_
-#define UI_EVENTS_KEYCODES_KEYBOARD_CODES_H_
-
-// Specifies modifier keys as stated in
-// third_party/WebKit/Source/WebCore/inspector/Inspector.json.
-// Notice: |kNumLockKeyModifierMask| is for usage in the key_converter.cc
-//         and keycode_text_conversion_x.cc only, not for inspector.
-enum KeyModifierMask {
-  kAltKeyModifierMask = 1 << 0,
-  kControlKeyModifierMask = 1 << 1,
-  kMetaKeyModifierMask = 1 << 2,
-  kShiftKeyModifierMask = 1 << 3,
-  kNumLockKeyModifierMask = 1 << 4,
-  kLevel3KeyModifierMask = 1 << 5,
-  kLevel5KeyModifierMask = 1 << 6
-};
-
-#endif  // UI_EVENTS_KEYCODES_KEYBOARD_CODES_H_
-
diff --git a/node_modules/native-keymap/deps/chromium/macros.h b/node_modules/native-keymap/deps/chromium/macros.h
deleted file mode 100644
index 31eb422..0000000
--- a/node_modules/native-keymap/deps/chromium/macros.h
+++ /dev/null
@@ -1,32 +0,0 @@
-// Copyright 2014 The Chromium Authors. All rights reserved.
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-
-// This file contains macros and macro-like constructs (e.g., templates) that
-// are commonly used throughout Chromium source. (It may also contain things
-// that are closely related to things that are commonly used that belong in this
-// file.)
-
-#ifndef BASE_MACROS_H_
-#define BASE_MACROS_H_
-
-#include <stddef.h>  // For size_t.
-#include <string.h>  // For memcpy.
-
-namespace base {
-
-// C++14 implementation of C++17's std::size():
-// http://en.cppreference.com/w/cpp/iterator/size
-template <typename Container>
-constexpr auto size(const Container& c) -> decltype(c.size()) {
-  return c.size();
-}
-
-template <typename T, size_t N>
-constexpr size_t size(const T (&array)[N]) noexcept {
-  return N;
-}
-
-}
-
-#endif  // BASE_MACROS_H_
diff --git a/node_modules/native-keymap/deps/chromium/x/keysym_to_unicode.cc b/node_modules/native-keymap/deps/chromium/x/keysym_to_unicode.cc
deleted file mode 100644
index b3021d5..0000000
--- a/node_modules/native-keymap/deps/chromium/x/keysym_to_unicode.cc
+++ /dev/null
@@ -1,896 +0,0 @@
-// ----------------------------------------------------------------------------------------------------------------
-//
-// [13.01.2022] https://source.chromium.org/chromium/chromium/src/+/main:ui/events/keycodes/keysym_to_unicode.cc
-//
-// ----------------------------------------------------------------------------------------------------------------
-
-// Copyright 2014 The Chromium Authors. All rights reserved.
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-
-#include "keysym_to_unicode.h"
-
-// Define XK_xxx before the #include of <X11/keysym.h> so that <X11/keysym.h>
-// defines all KeySyms we need.
-#define XK_MISCELLANY
-#define XK_LATIN1
-#define XK_LATIN2
-#define XK_LATIN3
-#define XK_LATIN4
-#define XK_LATIN8
-#define XK_LATIN9
-#define XK_KATAKANA
-#define XK_ARABIC
-#define XK_CYRILLIC
-#define XK_GREEK
-#define XK_TECHNICAL
-#define XK_SPECIAL
-#define XK_PUBLISHING
-#define XK_APL
-#define XK_HEBREW
-#define XK_THAI
-#define XK_KOREAN
-#define XK_ARMENIAN
-#define XK_GEORGIAN
-#define XK_CAUCASUS
-#define XK_VIETNAMESE
-#define XK_CURRENCY
-#define XK_MATHEMATICAL
-#define XK_BRAILLE
-#define XK_SINHALA
-#include <X11/X.h>
-#include <X11/keysym.h>
-
-#ifndef XK_dead_greek
-#define XK_dead_greek 0xfe8c
-#endif
-
-#include <unordered_map>
-#include "../macros.h"
-
-namespace ui {
-
-const struct {
-  uint32_t keysym;
-  uint16_t unicode;
-} g_keysym_to_unicode_table[] = {
-  // Control characters
-  {XK_BackSpace,                   0x0008},
-  {XK_Tab,                         0x0009},
-  {XK_Linefeed,                    0x000a},
-  {XK_Clear,                       0x000b},
-  {XK_Return,                      0x000d},
-  {XK_Escape,                      0x001b},
-  {XK_Delete,                      0x007f},
-
-  // Numeric keypad
-  {XK_KP_Space,                    0x0020},
-  {XK_KP_Tab,                      0x0009},
-  {XK_KP_Enter,                    0x000d},
-  {XK_KP_Equal,                    0x003d},
-  {XK_KP_Multiply,                 0x002a},
-  {XK_KP_Add,                      0x002b},
-  {XK_KP_Separator,                0x002c},
-  {XK_KP_Subtract,                 0x002d},
-  {XK_KP_Decimal,                  0x002e},
-  {XK_KP_Divide,                   0x002f},
-  {XK_KP_0,                        0x0030},
-  {XK_KP_1,                        0x0031},
-  {XK_KP_2,                        0x0032},
-  {XK_KP_3,                        0x0033},
-  {XK_KP_4,                        0x0034},
-  {XK_KP_5,                        0x0035},
-  {XK_KP_6,                        0x0036},
-  {XK_KP_7,                        0x0037},
-  {XK_KP_8,                        0x0038},
-  {XK_KP_9,                        0x0039},
-
-  // Latin 1 KeySyms map 1:1 to Unicode
-
-  // Latin 2
-  {XK_Aogonek,                     0x0104},  // LATIN CAPITAL LETTER A WITH OGONEK
-  {XK_breve,                       0x02D8},  // BREVE
-  {XK_Lstroke,                     0x0141},  // LATIN CAPITAL LETTER L WITH STROKE
-  {XK_Lcaron,                      0x013D},  // LATIN CAPITAL LETTER L WITH CARON
-  {XK_Sacute,                      0x015A},  // LATIN CAPITAL LETTER S WITH ACUTE
-  {XK_Scaron,                      0x0160},  // LATIN CAPITAL LETTER S WITH CARON
-  {XK_Scedilla,                    0x015E},  // LATIN CAPITAL LETTER S WITH CEDILLA
-  {XK_Tcaron,                      0x0164},  // LATIN CAPITAL LETTER T WITH CARON
-  {XK_Zacute,                      0x0179},  // LATIN CAPITAL LETTER Z WITH ACUTE
-  {XK_Zcaron,                      0x017D},  // LATIN CAPITAL LETTER Z WITH CARON
-  {XK_Zabovedot,                   0x017B},  // LATIN CAPITAL LETTER Z WITH DOT ABOVE
-  {XK_aogonek,                     0x0105},  // LATIN SMALL LETTER A WITH OGONEK
-  {XK_ogonek,                      0x02DB},  // OGONEK
-  {XK_lstroke,                     0x0142},  // LATIN SMALL LETTER L WITH STROKE
-  {XK_lcaron,                      0x013E},  // LATIN SMALL LETTER L WITH CARON
-  {XK_sacute,                      0x015B},  // LATIN SMALL LETTER S WITH ACUTE
-  {XK_caron,                       0x02C7},  // CARON
-  {XK_scaron,                      0x0161},  // LATIN SMALL LETTER S WITH CARON
-  {XK_scedilla,                    0x015F},  // LATIN SMALL LETTER S WITH CEDILLA
-  {XK_tcaron,                      0x0165},  // LATIN SMALL LETTER T WITH CARON
-  {XK_zacute,                      0x017A},  // LATIN SMALL LETTER Z WITH ACUTE
-  {XK_doubleacute,                 0x02DD},  // DOUBLE ACUTE ACCENT
-  {XK_zcaron,                      0x017E},  // LATIN SMALL LETTER Z WITH CARON
-  {XK_zabovedot,                   0x017C},  // LATIN SMALL LETTER Z WITH DOT ABOVE
-  {XK_Racute,                      0x0154},  // LATIN CAPITAL LETTER R WITH ACUTE
-  {XK_Abreve,                      0x0102},  // LATIN CAPITAL LETTER A WITH BREVE
-  {XK_Lacute,                      0x0139},  // LATIN CAPITAL LETTER L WITH ACUTE
-  {XK_Cacute,                      0x0106},  // LATIN CAPITAL LETTER C WITH ACUTE
-  {XK_Ccaron,                      0x010C},  // LATIN CAPITAL LETTER C WITH CARON
-  {XK_Eogonek,                     0x0118},  // LATIN CAPITAL LETTER E WITH OGONEK
-  {XK_Ecaron,                      0x011A},  // LATIN CAPITAL LETTER E WITH CARON
-  {XK_Dcaron,                      0x010E},  // LATIN CAPITAL LETTER D WITH CARON
-  {XK_Dstroke,                     0x0110},  // LATIN CAPITAL LETTER D WITH STROKE
-  {XK_Nacute,                      0x0143},  // LATIN CAPITAL LETTER N WITH ACUTE
-  {XK_Ncaron,                      0x0147},  // LATIN CAPITAL LETTER N WITH CARON
-  {XK_Odoubleacute,                0x0150},  // LATIN CAPITAL LETTER O WITH DOUBLE ACUTE
-  {XK_Rcaron,                      0x0158},  // LATIN CAPITAL LETTER R WITH CARON
-  {XK_Uring,                       0x016E},  // LATIN CAPITAL LETTER U WITH RING ABOVE
-  {XK_Udoubleacute,                0x0170},  // LATIN CAPITAL LETTER U WITH DOUBLE ACUTE
-  {XK_Tcedilla,                    0x0162},  // LATIN CAPITAL LETTER T WITH CEDILLA
-  {XK_racute,                      0x0155},  // LATIN SMALL LETTER R WITH ACUTE
-  {XK_abreve,                      0x0103},  // LATIN SMALL LETTER A WITH BREVE
-  {XK_lacute,                      0x013A},  // LATIN SMALL LETTER L WITH ACUTE
-  {XK_cacute,                      0x0107},  // LATIN SMALL LETTER C WITH ACUTE
-  {XK_ccaron,                      0x010D},  // LATIN SMALL LETTER C WITH CARON
-  {XK_eogonek,                     0x0119},  // LATIN SMALL LETTER E WITH OGONEK
-  {XK_ecaron,                      0x011B},  // LATIN SMALL LETTER E WITH CARON
-  {XK_dcaron,                      0x010F},  // LATIN SMALL LETTER D WITH CARON
-  {XK_dstroke,                     0x0111},  // LATIN SMALL LETTER D WITH STROKE
-  {XK_nacute,                      0x0144},  // LATIN SMALL LETTER N WITH ACUTE
-  {XK_ncaron,                      0x0148},  // LATIN SMALL LETTER N WITH CARON
-  {XK_odoubleacute,                0x0151},  // LATIN SMALL LETTER O WITH DOUBLE ACUTE
-  {XK_rcaron,                      0x0159},  // LATIN SMALL LETTER R WITH CARON
-  {XK_uring,                       0x016F},  // LATIN SMALL LETTER U WITH RING ABOVE
-  {XK_udoubleacute,                0x0171},  // LATIN SMALL LETTER U WITH DOUBLE ACUTE
-  {XK_tcedilla,                    0x0163},  // LATIN SMALL LETTER T WITH CEDILLA
-  {XK_abovedot,                    0x02D9},  // DOT ABOVE
-
-  // Latin 3
-  {XK_Hstroke,                     0x0126},  // LATIN CAPITAL LETTER H WITH STROKE
-  {XK_Hcircumflex,                 0x0124},  // LATIN CAPITAL LETTER H WITH CIRCUMFLEX
-  {XK_Iabovedot,                   0x0130},  // LATIN CAPITAL LETTER I WITH DOT ABOVE
-  {XK_Gbreve,                      0x011E},  // LATIN CAPITAL LETTER G WITH BREVE
-  {XK_Jcircumflex,                 0x0134},  // LATIN CAPITAL LETTER J WITH CIRCUMFLEX
-  {XK_hstroke,                     0x0127},  // LATIN SMALL LETTER H WITH STROKE
-  {XK_hcircumflex,                 0x0125},  // LATIN SMALL LETTER H WITH CIRCUMFLEX
-  {XK_idotless,                    0x0131},  // LATIN SMALL LETTER DOTLESS I
-  {XK_gbreve,                      0x011F},  // LATIN SMALL LETTER G WITH BREVE
-  {XK_jcircumflex,                 0x0135},  // LATIN SMALL LETTER J WITH CIRCUMFLEX
-  {XK_Cabovedot,                   0x010A},  // LATIN CAPITAL LETTER C WITH DOT ABOVE
-  {XK_Ccircumflex,                 0x0108},  // LATIN CAPITAL LETTER C WITH CIRCUMFLEX
-  {XK_Gabovedot,                   0x0120},  // LATIN CAPITAL LETTER G WITH DOT ABOVE
-  {XK_Gcircumflex,                 0x011C},  // LATIN CAPITAL LETTER G WITH CIRCUMFLEX
-  {XK_Ubreve,                      0x016C},  // LATIN CAPITAL LETTER U WITH BREVE
-  {XK_Scircumflex,                 0x015C},  // LATIN CAPITAL LETTER S WITH CIRCUMFLEX
-  {XK_cabovedot,                   0x010B},  // LATIN SMALL LETTER C WITH DOT ABOVE
-  {XK_ccircumflex,                 0x0109},  // LATIN SMALL LETTER C WITH CIRCUMFLEX
-  {XK_gabovedot,                   0x0121},  // LATIN SMALL LETTER G WITH DOT ABOVE
-  {XK_gcircumflex,                 0x011D},  // LATIN SMALL LETTER G WITH CIRCUMFLEX
-  {XK_ubreve,                      0x016D},  // LATIN SMALL LETTER U WITH BREVE
-  {XK_scircumflex,                 0x015D},  // LATIN SMALL LETTER S WITH CIRCUMFLEX
-
-  // Latin 4
-  {XK_kra,                         0x0138},  // LATIN SMALL LETTER KRA
-  {XK_Rcedilla,                    0x0156},  // LATIN CAPITAL LETTER R WITH CEDILLA
-  {XK_Itilde,                      0x0128},  // LATIN CAPITAL LETTER I WITH TILDE
-  {XK_Lcedilla,                    0x013B},  // LATIN CAPITAL LETTER L WITH CEDILLA
-  {XK_Emacron,                     0x0112},  // LATIN CAPITAL LETTER E WITH MACRON
-  {XK_Gcedilla,                    0x0122},  // LATIN CAPITAL LETTER G WITH CEDILLA
-  {XK_Tslash,                      0x0166},  // LATIN CAPITAL LETTER T WITH STROKE
-  {XK_rcedilla,                    0x0157},  // LATIN SMALL LETTER R WITH CEDILLA
-  {XK_itilde,                      0x0129},  // LATIN SMALL LETTER I WITH TILDE
-  {XK_lcedilla,                    0x013C},  // LATIN SMALL LETTER L WITH CEDILLA
-  {XK_emacron,                     0x0113},  // LATIN SMALL LETTER E WITH MACRON
-  {XK_gcedilla,                    0x0123},  // LATIN SMALL LETTER G WITH CEDILLA
-  {XK_tslash,                      0x0167},  // LATIN SMALL LETTER T WITH STROKE
-  {XK_ENG,                         0x014A},  // LATIN CAPITAL LETTER ENG
-  {XK_eng,                         0x014B},  // LATIN SMALL LETTER ENG
-  {XK_Amacron,                     0x0100},  // LATIN CAPITAL LETTER A WITH MACRON
-  {XK_Iogonek,                     0x012E},  // LATIN CAPITAL LETTER I WITH OGONEK
-  {XK_Eabovedot,                   0x0116},  // LATIN CAPITAL LETTER E WITH DOT ABOVE
-  {XK_Imacron,                     0x012A},  // LATIN CAPITAL LETTER I WITH MACRON
-  {XK_Ncedilla,                    0x0145},  // LATIN CAPITAL LETTER N WITH CEDILLA
-  {XK_Omacron,                     0x014C},  // LATIN CAPITAL LETTER O WITH MACRON
-  {XK_Kcedilla,                    0x0136},  // LATIN CAPITAL LETTER K WITH CEDILLA
-  {XK_Uogonek,                     0x0172},  // LATIN CAPITAL LETTER U WITH OGONEK
-  {XK_Utilde,                      0x0168},  // LATIN CAPITAL LETTER U WITH TILDE
-  {XK_Umacron,                     0x016A},  // LATIN CAPITAL LETTER U WITH MACRON
-  {XK_amacron,                     0x0101},  // LATIN SMALL LETTER A WITH MACRON
-  {XK_iogonek,                     0x012F},  // LATIN SMALL LETTER I WITH OGONEK
-  {XK_eabovedot,                   0x0117},  // LATIN SMALL LETTER E WITH DOT ABOVE
-  {XK_imacron,                     0x012B},  // LATIN SMALL LETTER I WITH MACRON
-  {XK_ncedilla,                    0x0146},  // LATIN SMALL LETTER N WITH CEDILLA
-  {XK_omacron,                     0x014D},  // LATIN SMALL LETTER O WITH MACRON
-  {XK_kcedilla,                    0x0137},  // LATIN SMALL LETTER K WITH CEDILLA
-  {XK_uogonek,                     0x0173},  // LATIN SMALL LETTER U WITH OGONEK
-  {XK_utilde,                      0x0169},  // LATIN SMALL LETTER U WITH TILDE
-  {XK_umacron,                     0x016B},  // LATIN SMALL LETTER U WITH MACRON
-
-  // Latin 8 KeySyms map 1:1 to Unicode
-
-  // Latin 9
-  {XK_OE,                          0x0152},  // LATIN CAPITAL LIGATURE OE
-  {XK_oe,                          0x0153},  // LATIN SMALL LIGATURE OE
-  {XK_Ydiaeresis,                  0x0178},  // LATIN CAPITAL LETTER Y WITH DIAERESIS
-
-  // Katakana
-  {XK_overline,                    0x203E},  // OVERLINE
-  {XK_kana_fullstop,               0x3002},  // IDEOGRAPHIC FULL STOP
-  {XK_kana_openingbracket,         0x300C},  // LEFT CORNER BRACKET
-  {XK_kana_closingbracket,         0x300D},  // RIGHT CORNER BRACKET
-  {XK_kana_comma,                  0x3001},  // IDEOGRAPHIC COMMA
-  {XK_kana_conjunctive,            0x30FB},  // KATAKANA MIDDLE DOT
-  {XK_kana_WO,                     0x30F2},  // KATAKANA LETTER WO
-  {XK_kana_a,                      0x30A1},  // KATAKANA LETTER SMALL A
-  {XK_kana_i,                      0x30A3},  // KATAKANA LETTER SMALL I
-  {XK_kana_u,                      0x30A5},  // KATAKANA LETTER SMALL U
-  {XK_kana_e,                      0x30A7},  // KATAKANA LETTER SMALL E
-  {XK_kana_o,                      0x30A9},  // KATAKANA LETTER SMALL O
-  {XK_kana_ya,                     0x30E3},  // KATAKANA LETTER SMALL YA
-  {XK_kana_yu,                     0x30E5},  // KATAKANA LETTER SMALL YU
-  {XK_kana_yo,                     0x30E7},  // KATAKANA LETTER SMALL YO
-  {XK_kana_tsu,                    0x30C3},  // KATAKANA LETTER SMALL TU
-  {XK_prolongedsound,              0x30FC},  // KATAKANA-HIRAGANA PROLONGED SOUND MARK
-  {XK_kana_A,                      0x30A2},  // KATAKANA LETTER A
-  {XK_kana_I,                      0x30A4},  // KATAKANA LETTER I
-  {XK_kana_U,                      0x30A6},  // KATAKANA LETTER U
-  {XK_kana_E,                      0x30A8},  // KATAKANA LETTER E
-  {XK_kana_O,                      0x30AA},  // KATAKANA LETTER O
-  {XK_kana_KA,                     0x30AB},  // KATAKANA LETTER KA
-  {XK_kana_KI,                     0x30AD},  // KATAKANA LETTER KI
-  {XK_kana_KU,                     0x30AF},  // KATAKANA LETTER KU
-  {XK_kana_KE,                     0x30B1},  // KATAKANA LETTER KE
-  {XK_kana_KO,                     0x30B3},  // KATAKANA LETTER KO
-  {XK_kana_SA,                     0x30B5},  // KATAKANA LETTER SA
-  {XK_kana_SHI,                    0x30B7},  // KATAKANA LETTER SI
-  {XK_kana_SU,                     0x30B9},  // KATAKANA LETTER SU
-  {XK_kana_SE,                     0x30BB},  // KATAKANA LETTER SE
-  {XK_kana_SO,                     0x30BD},  // KATAKANA LETTER SO
-  {XK_kana_TA,                     0x30BF},  // KATAKANA LETTER TA
-  {XK_kana_CHI,                    0x30C1},  // KATAKANA LETTER TI
-  {XK_kana_TSU,                    0x30C4},  // KATAKANA LETTER TU
-  {XK_kana_TE,                     0x30C6},  // KATAKANA LETTER TE
-  {XK_kana_TO,                     0x30C8},  // KATAKANA LETTER TO
-  {XK_kana_NA,                     0x30CA},  // KATAKANA LETTER NA
-  {XK_kana_NI,                     0x30CB},  // KATAKANA LETTER NI
-  {XK_kana_NU,                     0x30CC},  // KATAKANA LETTER NU
-  {XK_kana_NE,                     0x30CD},  // KATAKANA LETTER NE
-  {XK_kana_NO,                     0x30CE},  // KATAKANA LETTER NO
-  {XK_kana_HA,                     0x30CF},  // KATAKANA LETTER HA
-  {XK_kana_HI,                     0x30D2},  // KATAKANA LETTER HI
-  {XK_kana_FU,                     0x30D5},  // KATAKANA LETTER HU
-  {XK_kana_HE,                     0x30D8},  // KATAKANA LETTER HE
-  {XK_kana_HO,                     0x30DB},  // KATAKANA LETTER HO
-  {XK_kana_MA,                     0x30DE},  // KATAKANA LETTER MA
-  {XK_kana_MI,                     0x30DF},  // KATAKANA LETTER MI
-  {XK_kana_MU,                     0x30E0},  // KATAKANA LETTER MU
-  {XK_kana_ME,                     0x30E1},  // KATAKANA LETTER ME
-  {XK_kana_MO,                     0x30E2},  // KATAKANA LETTER MO
-  {XK_kana_YA,                     0x30E4},  // KATAKANA LETTER YA
-  {XK_kana_YU,                     0x30E6},  // KATAKANA LETTER YU
-  {XK_kana_YO,                     0x30E8},  // KATAKANA LETTER YO
-  {XK_kana_RA,                     0x30E9},  // KATAKANA LETTER RA
-  {XK_kana_RI,                     0x30EA},  // KATAKANA LETTER RI
-  {XK_kana_RU,                     0x30EB},  // KATAKANA LETTER RU
-  {XK_kana_RE,                     0x30EC},  // KATAKANA LETTER RE
-  {XK_kana_RO,                     0x30ED},  // KATAKANA LETTER RO
-  {XK_kana_WA,                     0x30EF},  // KATAKANA LETTER WA
-  {XK_kana_N,                      0x30F3},  // KATAKANA LETTER N
-  {XK_voicedsound,                 0x309B},  // KATAKANA-HIRAGANA VOICED SOUND MARK
-  {XK_semivoicedsound,             0x309C},  // KATAKANA-HIRAGANA SEMI-VOICED SOUND MARK
-
-  // Arabic KeySyms partially map 1:1 to Unicode
-  {XK_Arabic_comma,                0x060C},  // ARABIC COMMA
-  {XK_Arabic_semicolon,            0x061B},  // ARABIC SEMICOLON
-  {XK_Arabic_question_mark,        0x061F},  // ARABIC QUESTION MARK
-  {XK_Arabic_hamza,                0x0621},  // ARABIC LETTER HAMZA
-  {XK_Arabic_maddaonalef,          0x0622},  // ARABIC LETTER ALEF WITH MADDA ABOVE
-  {XK_Arabic_hamzaonalef,          0x0623},  // ARABIC LETTER ALEF WITH HAMZA ABOVE
-  {XK_Arabic_hamzaonwaw,           0x0624},  // ARABIC LETTER WAW WITH HAMZA ABOVE
-  {XK_Arabic_hamzaunderalef,       0x0625},  // ARABIC LETTER ALEF WITH HAMZA BELOW
-  {XK_Arabic_hamzaonyeh,           0x0626},  // ARABIC LETTER YEH WITH HAMZA ABOVE
-  {XK_Arabic_alef,                 0x0627},  // ARABIC LETTER ALEF
-  {XK_Arabic_beh,                  0x0628},  // ARABIC LETTER BEH
-  {XK_Arabic_tehmarbuta,           0x0629},  // ARABIC LETTER TEH MARBUTA
-  {XK_Arabic_teh,                  0x062A},  // ARABIC LETTER TEH
-  {XK_Arabic_theh,                 0x062B},  // ARABIC LETTER THEH
-  {XK_Arabic_jeem,                 0x062C},  // ARABIC LETTER JEEM
-  {XK_Arabic_hah,                  0x062D},  // ARABIC LETTER HAH
-  {XK_Arabic_khah,                 0x062E},  // ARABIC LETTER KHAH
-  {XK_Arabic_dal,                  0x062F},  // ARABIC LETTER DAL
-  {XK_Arabic_thal,                 0x0630},  // ARABIC LETTER THAL
-  {XK_Arabic_ra,                   0x0631},  // ARABIC LETTER REH
-  {XK_Arabic_zain,                 0x0632},  // ARABIC LETTER ZAIN
-  {XK_Arabic_seen,                 0x0633},  // ARABIC LETTER SEEN
-  {XK_Arabic_sheen,                0x0634},  // ARABIC LETTER SHEEN
-  {XK_Arabic_sad,                  0x0635},  // ARABIC LETTER SAD
-  {XK_Arabic_dad,                  0x0636},  // ARABIC LETTER DAD
-  {XK_Arabic_tah,                  0x0637},  // ARABIC LETTER TAH
-  {XK_Arabic_zah,                  0x0638},  // ARABIC LETTER ZAH
-  {XK_Arabic_ain,                  0x0639},  // ARABIC LETTER AIN
-  {XK_Arabic_ghain,                0x063A},  // ARABIC LETTER GHAIN
-  {XK_Arabic_tatweel,              0x0640},  // ARABIC TATWEEL
-  {XK_Arabic_feh,                  0x0641},  // ARABIC LETTER FEH
-  {XK_Arabic_qaf,                  0x0642},  // ARABIC LETTER QAF
-  {XK_Arabic_kaf,                  0x0643},  // ARABIC LETTER KAF
-  {XK_Arabic_lam,                  0x0644},  // ARABIC LETTER LAM
-  {XK_Arabic_meem,                 0x0645},  // ARABIC LETTER MEEM
-  {XK_Arabic_noon,                 0x0646},  // ARABIC LETTER NOON
-  {XK_Arabic_ha,                   0x0647},  // ARABIC LETTER HEH
-  {XK_Arabic_waw,                  0x0648},  // ARABIC LETTER WAW
-  {XK_Arabic_alefmaksura,          0x0649},  // ARABIC LETTER ALEF MAKSURA
-  {XK_Arabic_yeh,                  0x064A},  // ARABIC LETTER YEH
-  {XK_Arabic_fathatan,             0x064B},  // ARABIC FATHATAN
-  {XK_Arabic_dammatan,             0x064C},  // ARABIC DAMMATAN
-  {XK_Arabic_kasratan,             0x064D},  // ARABIC KASRATAN
-  {XK_Arabic_fatha,                0x064E},  // ARABIC FATHA
-  {XK_Arabic_damma,                0x064F},  // ARABIC DAMMA
-  {XK_Arabic_kasra,                0x0650},  // ARABIC KASRA
-  {XK_Arabic_shadda,               0x0651},  // ARABIC SHADDA
-  {XK_Arabic_sukun,                0x0652},  // ARABIC SUKUN
-
-  // Cyrillic KeySyms partially map 1:1 to Unicode
-  {XK_Serbian_dje,                 0x0452},  // CYRILLIC SMALL LETTER DJE
-  {XK_Macedonia_gje,               0x0453},  // CYRILLIC SMALL LETTER GJE
-  {XK_Cyrillic_io,                 0x0451},  // CYRILLIC SMALL LETTER IO
-  {XK_Ukrainian_ie,                0x0454},  // CYRILLIC SMALL LETTER UKRAINIAN IE
-  {XK_Macedonia_dse,               0x0455},  // CYRILLIC SMALL LETTER DZE
-  {XK_Ukrainian_i,                 0x0456},  // CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I
-  {XK_Ukrainian_yi,                0x0457},  // CYRILLIC SMALL LETTER YI
-  {XK_Cyrillic_je,                 0x0458},  // CYRILLIC SMALL LETTER JE
-  {XK_Cyrillic_lje,                0x0459},  // CYRILLIC SMALL LETTER LJE
-  {XK_Cyrillic_nje,                0x045A},  // CYRILLIC SMALL LETTER NJE
-  {XK_Serbian_tshe,                0x045B},  // CYRILLIC SMALL LETTER TSHE
-  {XK_Macedonia_kje,               0x045C},  // CYRILLIC SMALL LETTER KJE
-  {XK_Ukrainian_ghe_with_upturn,   0x0491},  // CYRILLIC SMALL LETTER GHE WITH UPTURN
-  {XK_Byelorussian_shortu,         0x045E},  // CYRILLIC SMALL LETTER SHORT U
-  {XK_Cyrillic_dzhe,               0x045F},  // CYRILLIC SMALL LETTER DZHE
-  {XK_numerosign,                  0x2116},  // NUMERO SIGN
-  {XK_Serbian_DJE,                 0x0402},  // CYRILLIC CAPITAL LETTER DJE
-  {XK_Macedonia_GJE,               0x0403},  // CYRILLIC CAPITAL LETTER GJE
-  {XK_Cyrillic_IO,                 0x0401},  // CYRILLIC CAPITAL LETTER IO
-  {XK_Ukrainian_IE,                0x0404},  // CYRILLIC CAPITAL LETTER UKRAINIAN IE
-  {XK_Macedonia_DSE,               0x0405},  // CYRILLIC CAPITAL LETTER DZE
-  {XK_Ukrainian_I,                 0x0406},  // CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I
-  {XK_Ukrainian_YI,                0x0407},  // CYRILLIC CAPITAL LETTER YI
-  {XK_Cyrillic_JE,                 0x0408},  // CYRILLIC CAPITAL LETTER JE
-  {XK_Cyrillic_LJE,                0x0409},  // CYRILLIC CAPITAL LETTER LJE
-  {XK_Cyrillic_NJE,                0x040A},  // CYRILLIC CAPITAL LETTER NJE
-  {XK_Serbian_TSHE,                0x040B},  // CYRILLIC CAPITAL LETTER TSHE
-  {XK_Macedonia_KJE,               0x040C},  // CYRILLIC CAPITAL LETTER KJE
-  {XK_Ukrainian_GHE_WITH_UPTURN,   0x0490},  // CYRILLIC CAPITAL LETTER GHE WITH UPTURN
-  {XK_Byelorussian_SHORTU,         0x040E},  // CYRILLIC CAPITAL LETTER SHORT U
-  {XK_Cyrillic_DZHE,               0x040F},  // CYRILLIC CAPITAL LETTER DZHE
-  {XK_Cyrillic_yu,                 0x044E},  // CYRILLIC SMALL LETTER YU
-  {XK_Cyrillic_a,                  0x0430},  // CYRILLIC SMALL LETTER A
-  {XK_Cyrillic_be,                 0x0431},  // CYRILLIC SMALL LETTER BE
-  {XK_Cyrillic_tse,                0x0446},  // CYRILLIC SMALL LETTER TSE
-  {XK_Cyrillic_de,                 0x0434},  // CYRILLIC SMALL LETTER DE
-  {XK_Cyrillic_ie,                 0x0435},  // CYRILLIC SMALL LETTER IE
-  {XK_Cyrillic_ef,                 0x0444},  // CYRILLIC SMALL LETTER EF
-  {XK_Cyrillic_ghe,                0x0433},  // CYRILLIC SMALL LETTER GHE
-  {XK_Cyrillic_ha,                 0x0445},  // CYRILLIC SMALL LETTER HA
-  {XK_Cyrillic_i,                  0x0438},  // CYRILLIC SMALL LETTER I
-  {XK_Cyrillic_shorti,             0x0439},  // CYRILLIC SMALL LETTER SHORT I
-  {XK_Cyrillic_ka,                 0x043A},  // CYRILLIC SMALL LETTER KA
-  {XK_Cyrillic_el,                 0x043B},  // CYRILLIC SMALL LETTER EL
-  {XK_Cyrillic_em,                 0x043C},  // CYRILLIC SMALL LETTER EM
-  {XK_Cyrillic_en,                 0x043D},  // CYRILLIC SMALL LETTER EN
-  {XK_Cyrillic_o,                  0x043E},  // CYRILLIC SMALL LETTER O
-  {XK_Cyrillic_pe,                 0x043F},  // CYRILLIC SMALL LETTER PE
-  {XK_Cyrillic_ya,                 0x044F},  // CYRILLIC SMALL LETTER YA
-  {XK_Cyrillic_er,                 0x0440},  // CYRILLIC SMALL LETTER ER
-  {XK_Cyrillic_es,                 0x0441},  // CYRILLIC SMALL LETTER ES
-  {XK_Cyrillic_te,                 0x0442},  // CYRILLIC SMALL LETTER TE
-  {XK_Cyrillic_u,                  0x0443},  // CYRILLIC SMALL LETTER U
-  {XK_Cyrillic_zhe,                0x0436},  // CYRILLIC SMALL LETTER ZHE
-  {XK_Cyrillic_ve,                 0x0432},  // CYRILLIC SMALL LETTER VE
-  {XK_Cyrillic_softsign,           0x044C},  // CYRILLIC SMALL LETTER SOFT SIGN
-  {XK_Cyrillic_yeru,               0x044B},  // CYRILLIC SMALL LETTER YERU
-  {XK_Cyrillic_ze,                 0x0437},  // CYRILLIC SMALL LETTER ZE
-  {XK_Cyrillic_sha,                0x0448},  // CYRILLIC SMALL LETTER SHA
-  {XK_Cyrillic_e,                  0x044D},  // CYRILLIC SMALL LETTER E
-  {XK_Cyrillic_shcha,              0x0449},  // CYRILLIC SMALL LETTER SHCHA
-  {XK_Cyrillic_che,                0x0447},  // CYRILLIC SMALL LETTER CHE
-  {XK_Cyrillic_hardsign,           0x044A},  // CYRILLIC SMALL LETTER HARD SIGN
-  {XK_Cyrillic_YU,                 0x042E},  // CYRILLIC CAPITAL LETTER YU
-  {XK_Cyrillic_A,                  0x0410},  // CYRILLIC CAPITAL LETTER A
-  {XK_Cyrillic_BE,                 0x0411},  // CYRILLIC CAPITAL LETTER BE
-  {XK_Cyrillic_TSE,                0x0426},  // CYRILLIC CAPITAL LETTER TSE
-  {XK_Cyrillic_DE,                 0x0414},  // CYRILLIC CAPITAL LETTER DE
-  {XK_Cyrillic_IE,                 0x0415},  // CYRILLIC CAPITAL LETTER IE
-  {XK_Cyrillic_EF,                 0x0424},  // CYRILLIC CAPITAL LETTER EF
-  {XK_Cyrillic_GHE,                0x0413},  // CYRILLIC CAPITAL LETTER GHE
-  {XK_Cyrillic_HA,                 0x0425},  // CYRILLIC CAPITAL LETTER HA
-  {XK_Cyrillic_I,                  0x0418},  // CYRILLIC CAPITAL LETTER I
-  {XK_Cyrillic_SHORTI,             0x0419},  // CYRILLIC CAPITAL LETTER SHORT I
-  {XK_Cyrillic_KA,                 0x041A},  // CYRILLIC CAPITAL LETTER KA
-  {XK_Cyrillic_EL,                 0x041B},  // CYRILLIC CAPITAL LETTER EL
-  {XK_Cyrillic_EM,                 0x041C},  // CYRILLIC CAPITAL LETTER EM
-  {XK_Cyrillic_EN,                 0x041D},  // CYRILLIC CAPITAL LETTER EN
-  {XK_Cyrillic_O,                  0x041E},  // CYRILLIC CAPITAL LETTER O
-  {XK_Cyrillic_PE,                 0x041F},  // CYRILLIC CAPITAL LETTER PE
-  {XK_Cyrillic_YA,                 0x042F},  // CYRILLIC CAPITAL LETTER YA
-  {XK_Cyrillic_ER,                 0x0420},  // CYRILLIC CAPITAL LETTER ER
-  {XK_Cyrillic_ES,                 0x0421},  // CYRILLIC CAPITAL LETTER ES
-  {XK_Cyrillic_TE,                 0x0422},  // CYRILLIC CAPITAL LETTER TE
-  {XK_Cyrillic_U,                  0x0423},  // CYRILLIC CAPITAL LETTER U
-  {XK_Cyrillic_ZHE,                0x0416},  // CYRILLIC CAPITAL LETTER ZHE
-  {XK_Cyrillic_VE,                 0x0412},  // CYRILLIC CAPITAL LETTER VE
-  {XK_Cyrillic_SOFTSIGN,           0x042C},  // CYRILLIC CAPITAL LETTER SOFT SIGN
-  {XK_Cyrillic_YERU,               0x042B},  // CYRILLIC CAPITAL LETTER YERU
-  {XK_Cyrillic_ZE,                 0x0417},  // CYRILLIC CAPITAL LETTER ZE
-  {XK_Cyrillic_SHA,                0x0428},  // CYRILLIC CAPITAL LETTER SHA
-  {XK_Cyrillic_E,                  0x042D},  // CYRILLIC CAPITAL LETTER E
-  {XK_Cyrillic_SHCHA,              0x0429},  // CYRILLIC CAPITAL LETTER SHCHA
-  {XK_Cyrillic_CHE,                0x0427},  // CYRILLIC CAPITAL LETTER CHE
-  {XK_Cyrillic_HARDSIGN,           0x042A},  // CYRILLIC CAPITAL LETTER HARD SIGN
-
-  // Greek
-  {XK_Greek_ALPHAaccent,           0x0386},  // GREEK CAPITAL LETTER ALPHA WITH TONOS
-  {XK_Greek_EPSILONaccent,         0x0388},  // GREEK CAPITAL LETTER EPSILON WITH TONOS
-  {XK_Greek_ETAaccent,             0x0389},  // GREEK CAPITAL LETTER ETA WITH TONOS
-  {XK_Greek_IOTAaccent,            0x038A},  // GREEK CAPITAL LETTER IOTA WITH TONOS
-  {XK_Greek_IOTAdieresis,          0x03AA},  // GREEK CAPITAL LETTER IOTA WITH DIALYTIKA
-  {XK_Greek_OMICRONaccent,         0x038C},  // GREEK CAPITAL LETTER OMICRON WITH TONOS
-  {XK_Greek_UPSILONaccent,         0x038E},  // GREEK CAPITAL LETTER UPSILON WITH TONOS
-  {XK_Greek_UPSILONdieresis,       0x03AB},  // GREEK CAPITAL LETTER UPSILON WITH DIALYTIKA
-  {XK_Greek_OMEGAaccent,           0x038F},  // GREEK CAPITAL LETTER OMEGA WITH TONOS
-  {XK_Greek_accentdieresis,        0x0385},  // GREEK DIALYTIKA TONOS
-  {XK_Greek_horizbar,              0x2015},  // HORIZONTAL BAR
-  {XK_Greek_alphaaccent,           0x03AC},  // GREEK SMALL LETTER ALPHA WITH TONOS
-  {XK_Greek_epsilonaccent,         0x03AD},  // GREEK SMALL LETTER EPSILON WITH TONOS
-  {XK_Greek_etaaccent,             0x03AE},  // GREEK SMALL LETTER ETA WITH TONOS
-  {XK_Greek_iotaaccent,            0x03AF},  // GREEK SMALL LETTER IOTA WITH TONOS
-  {XK_Greek_iotadieresis,          0x03CA},  // GREEK SMALL LETTER IOTA WITH DIALYTIKA
-  {XK_Greek_iotaaccentdieresis,    0x0390},  // GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS
-  {XK_Greek_omicronaccent,         0x03CC},  // GREEK SMALL LETTER OMICRON WITH TONOS
-  {XK_Greek_upsilonaccent,         0x03CD},  // GREEK SMALL LETTER UPSILON WITH TONOS
-  {XK_Greek_upsilondieresis,       0x03CB},  // GREEK SMALL LETTER UPSILON WITH DIALYTIKA
-  {XK_Greek_upsilonaccentdieresis, 0x03B0},  // GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS
-  {XK_Greek_omegaaccent,           0x03CE},  // GREEK SMALL LETTER OMEGA WITH TONOS
-  {XK_Greek_ALPHA,                 0x0391},  // GREEK CAPITAL LETTER ALPHA
-  {XK_Greek_BETA,                  0x0392},  // GREEK CAPITAL LETTER BETA
-  {XK_Greek_GAMMA,                 0x0393},  // GREEK CAPITAL LETTER GAMMA
-  {XK_Greek_DELTA,                 0x0394},  // GREEK CAPITAL LETTER DELTA
-  {XK_Greek_EPSILON,               0x0395},  // GREEK CAPITAL LETTER EPSILON
-  {XK_Greek_ZETA,                  0x0396},  // GREEK CAPITAL LETTER ZETA
-  {XK_Greek_ETA,                   0x0397},  // GREEK CAPITAL LETTER ETA
-  {XK_Greek_THETA,                 0x0398},  // GREEK CAPITAL LETTER THETA
-  {XK_Greek_IOTA,                  0x0399},  // GREEK CAPITAL LETTER IOTA
-  {XK_Greek_KAPPA,                 0x039A},  // GREEK CAPITAL LETTER KAPPA
-  {XK_Greek_LAMDA,                 0x039B},  // GREEK CAPITAL LETTER LAMDA
-  {XK_Greek_LAMBDA,                0x039B},  // GREEK CAPITAL LETTER LAMDA
-  {XK_Greek_MU,                    0x039C},  // GREEK CAPITAL LETTER MU
-  {XK_Greek_NU,                    0x039D},  // GREEK CAPITAL LETTER NU
-  {XK_Greek_XI,                    0x039E},  // GREEK CAPITAL LETTER XI
-  {XK_Greek_OMICRON,               0x039F},  // GREEK CAPITAL LETTER OMICRON
-  {XK_Greek_PI,                    0x03A0},  // GREEK CAPITAL LETTER PI
-  {XK_Greek_RHO,                   0x03A1},  // GREEK CAPITAL LETTER RHO
-  {XK_Greek_SIGMA,                 0x03A3},  // GREEK CAPITAL LETTER SIGMA
-  {XK_Greek_TAU,                   0x03A4},  // GREEK CAPITAL LETTER TAU
-  {XK_Greek_UPSILON,               0x03A5},  // GREEK CAPITAL LETTER UPSILON
-  {XK_Greek_PHI,                   0x03A6},  // GREEK CAPITAL LETTER PHI
-  {XK_Greek_CHI,                   0x03A7},  // GREEK CAPITAL LETTER CHI
-  {XK_Greek_PSI,                   0x03A8},  // GREEK CAPITAL LETTER PSI
-  {XK_Greek_OMEGA,                 0x03A9},  // GREEK CAPITAL LETTER OMEGA
-  {XK_Greek_alpha,                 0x03B1},  // GREEK SMALL LETTER ALPHA
-  {XK_Greek_beta,                  0x03B2},  // GREEK SMALL LETTER BETA
-  {XK_Greek_gamma,                 0x03B3},  // GREEK SMALL LETTER GAMMA
-  {XK_Greek_delta,                 0x03B4},  // GREEK SMALL LETTER DELTA
-  {XK_Greek_epsilon,               0x03B5},  // GREEK SMALL LETTER EPSILON
-  {XK_Greek_zeta,                  0x03B6},  // GREEK SMALL LETTER ZETA
-  {XK_Greek_eta,                   0x03B7},  // GREEK SMALL LETTER ETA
-  {XK_Greek_theta,                 0x03B8},  // GREEK SMALL LETTER THETA
-  {XK_Greek_iota,                  0x03B9},  // GREEK SMALL LETTER IOTA
-  {XK_Greek_kappa,                 0x03BA},  // GREEK SMALL LETTER KAPPA
-  {XK_Greek_lamda,                 0x03BB},  // GREEK SMALL LETTER LAMDA
-  {XK_Greek_lambda,                0x03BB},  // GREEK SMALL LETTER LAMDA
-  {XK_Greek_mu,                    0x03BC},  // GREEK SMALL LETTER MU
-  {XK_Greek_nu,                    0x03BD},  // GREEK SMALL LETTER NU
-  {XK_Greek_xi,                    0x03BE},  // GREEK SMALL LETTER XI
-  {XK_Greek_omicron,               0x03BF},  // GREEK SMALL LETTER OMICRON
-  {XK_Greek_pi,                    0x03C0},  // GREEK SMALL LETTER PI
-  {XK_Greek_rho,                   0x03C1},  // GREEK SMALL LETTER RHO
-  {XK_Greek_sigma,                 0x03C3},  // GREEK SMALL LETTER SIGMA
-  {XK_Greek_finalsmallsigma,       0x03C2},  // GREEK SMALL LETTER FINAL SIGMA
-  {XK_Greek_tau,                   0x03C4},  // GREEK SMALL LETTER TAU
-  {XK_Greek_upsilon,               0x03C5},  // GREEK SMALL LETTER UPSILON
-  {XK_Greek_phi,                   0x03C6},  // GREEK SMALL LETTER PHI
-  {XK_Greek_chi,                   0x03C7},  // GREEK SMALL LETTER CHI
-  {XK_Greek_psi,                   0x03C8},  // GREEK SMALL LETTER PSI
-  {XK_Greek_omega,                 0x03C9},  // GREEK SMALL LETTER OMEGA
-
-  // Technical
-  {XK_leftradical,                 0x23B7},  // RADICAL SYMBOL BOTTOM
-  {XK_topleftradical,              0x250C},  // BOX DRAWINGS LIGHT DOWN AND RIGHT
-  {XK_horizconnector,              0x2500},  // BOX DRAWINGS LIGHT HORIZONTAL
-  {XK_topintegral,                 0x2320},  // TOP HALF INTEGRAL
-  {XK_botintegral,                 0x2321},  // BOTTOM HALF INTEGRAL
-  {XK_vertconnector,               0x2502},  // BOX DRAWINGS LIGHT VERTICAL
-  {XK_topleftsqbracket,            0x23A1},  // LEFT SQUARE BRACKET UPPER CORNER
-  {XK_botleftsqbracket,            0x23A3},  // LEFT SQUARE BRACKET LOWER CORNER
-  {XK_toprightsqbracket,           0x23A4},  // RIGHT SQUARE BRACKET UPPER CORNER
-  {XK_botrightsqbracket,           0x23A6},  // RIGHT SQUARE BRACKET LOWER CORNER
-  {XK_topleftparens,               0x239B},  // LEFT PARENTHESIS UPPER HOOK
-  {XK_botleftparens,               0x239D},  // LEFT PARENTHESIS LOWER HOOK
-  {XK_toprightparens,              0x239E},  // RIGHT PARENTHESIS UPPER HOOK
-  {XK_botrightparens,              0x23A0},  // RIGHT PARENTHESIS LOWER HOOK
-  {XK_leftmiddlecurlybrace,        0x23A8},  // LEFT CURLY BRACKET MIDDLE PIECE
-  {XK_rightmiddlecurlybrace,       0x23AC},  // RIGHT CURLY BRACKET MIDDLE PIECE
-  {XK_lessthanequal,               0x2264},  // LESS-THAN OR EQUAL TO
-  {XK_notequal,                    0x2260},  // NOT EQUAL TO
-  {XK_greaterthanequal,            0x2265},  // GREATER-THAN OR EQUAL TO
-  {XK_integral,                    0x222B},  // INTEGRAL
-  {XK_therefore,                   0x2234},  // THEREFORE
-  {XK_variation,                   0x221D},  // PROPORTIONAL TO
-  {XK_infinity,                    0x221E},  // INFINITY
-  {XK_nabla,                       0x2207},  // NABLA
-  {XK_approximate,                 0x223C},  // TILDE OPERATOR
-  {XK_similarequal,                0x2243},  // ASYMPTOTICALLY EQUAL TO
-  {XK_ifonlyif,                    0x21D4},  // LEFT RIGHT DOUBLE ARROW
-  {XK_implies,                     0x21D2},  // RIGHTWARDS DOUBLE ARROW
-  {XK_identical,                   0x2261},  // IDENTICAL TO
-  {XK_radical,                     0x221A},  // SQUARE ROOT
-  {XK_includedin,                  0x2282},  // SUBSET OF
-  {XK_includes,                    0x2283},  // SUPERSET OF
-  {XK_intersection,                0x2229},  // INTERSECTION
-  {XK_union,                       0x222A},  // UNION
-  {XK_logicaland,                  0x2227},  // LOGICAL AND
-  {XK_logicalor,                   0x2228},  // LOGICAL OR
-  {XK_partialderivative,           0x2202},  // PARTIAL DIFFERENTIAL
-  {XK_function,                    0x0192},  // LATIN SMALL LETTER F WITH HOOK
-  {XK_leftarrow,                   0x2190},  // LEFTWARDS ARROW
-  {XK_uparrow,                     0x2191},  // UPWARDS ARROW
-  {XK_rightarrow,                  0x2192},  // RIGHTWARDS ARROW
-  {XK_downarrow,                   0x2193},  // DOWNWARDS ARROW
-
-  // Special
-  {XK_soliddiamond,                0x25C6},  // BLACK DIAMOND
-  {XK_checkerboard,                0x2592},  // MEDIUM SHADE
-  {XK_ht,                          0x2409},  // SYMBOL FOR HORIZONTAL TABULATION
-  {XK_ff,                          0x240C},  // SYMBOL FOR FORM FEED
-  {XK_cr,                          0x240D},  // SYMBOL FOR CARRIAGE RETURN
-  {XK_lf,                          0x240A},  // SYMBOL FOR LINE FEED
-  {XK_nl,                          0x2424},  // SYMBOL FOR NEWLINE
-  {XK_vt,                          0x240B},  // SYMBOL FOR VERTICAL TABULATION
-  {XK_lowrightcorner,              0x2518},  // BOX DRAWINGS LIGHT UP AND LEFT
-  {XK_uprightcorner,               0x2510},  // BOX DRAWINGS LIGHT DOWN AND LEFT
-  {XK_upleftcorner,                0x250C},  // BOX DRAWINGS LIGHT DOWN AND RIGHT
-  {XK_lowleftcorner,               0x2514},  // BOX DRAWINGS LIGHT UP AND RIGHT
-  {XK_crossinglines,               0x253C},  // BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL
-  {XK_horizlinescan1,              0x23BA},  // HORIZONTAL SCAN LINE-1
-  {XK_horizlinescan3,              0x23BB},  // HORIZONTAL SCAN LINE-3
-  {XK_horizlinescan5,              0x2500},  // BOX DRAWINGS LIGHT HORIZONTAL
-  {XK_horizlinescan7,              0x23BC},  // HORIZONTAL SCAN LINE-7
-  {XK_horizlinescan9,              0x23BD},  // HORIZONTAL SCAN LINE-9
-  {XK_leftt,                       0x251C},  // BOX DRAWINGS LIGHT VERTICAL AND RIGHT
-  {XK_rightt,                      0x2524},  // BOX DRAWINGS LIGHT VERTICAL AND LEFT
-  {XK_bott,                        0x2534},  // BOX DRAWINGS LIGHT UP AND HORIZONTAL
-  {XK_topt,                        0x252C},  // BOX DRAWINGS LIGHT DOWN AND HORIZONTAL
-  {XK_vertbar,                     0x2502},  // BOX DRAWINGS LIGHT VERTICAL
-
-  // Publishing
-  {XK_emspace,                     0x2003},  // EM SPACE
-  {XK_enspace,                     0x2002},  // EN SPACE
-  {XK_em3space,                    0x2004},  // THREE-PER-EM SPACE
-  {XK_em4space,                    0x2005},  // FOUR-PER-EM SPACE
-  {XK_digitspace,                  0x2007},  // FIGURE SPACE
-  {XK_punctspace,                  0x2008},  // PUNCTUATION SPACE
-  {XK_thinspace,                   0x2009},  // THIN SPACE
-  {XK_hairspace,                   0x200A},  // HAIR SPACE
-  {XK_emdash,                      0x2014},  // EM DASH
-  {XK_endash,                      0x2013},  // EN DASH
-  {XK_signifblank,                 0x2423},  // OPEN BOX
-  {XK_ellipsis,                    0x2026},  // HORIZONTAL ELLIPSIS
-  {XK_doubbaselinedot,             0x2025},  // TWO DOT LEADER
-  {XK_onethird,                    0x2153},  // VULGAR FRACTION ONE THIRD
-  {XK_twothirds,                   0x2154},  // VULGAR FRACTION TWO THIRDS
-  {XK_onefifth,                    0x2155},  // VULGAR FRACTION ONE FIFTH
-  {XK_twofifths,                   0x2156},  // VULGAR FRACTION TWO FIFTHS
-  {XK_threefifths,                 0x2157},  // VULGAR FRACTION THREE FIFTHS
-  {XK_fourfifths,                  0x2158},  // VULGAR FRACTION FOUR FIFTHS
-  {XK_onesixth,                    0x2159},  // VULGAR FRACTION ONE SIXTH
-  {XK_fivesixths,                  0x215A},  // VULGAR FRACTION FIVE SIXTHS
-  {XK_careof,                      0x2105},  // CARE OF
-  {XK_figdash,                     0x2012},  // FIGURE DASH
-  {XK_leftanglebracket,            0x27E8},  // MATHEMATICAL LEFT ANGLE BRACKET
-  {XK_decimalpoint,                0x002E},  // FULL STOP
-  {XK_rightanglebracket,           0x27E9},  // MATHEMATICAL RIGHT ANGLE BRACKET
-  {XK_oneeighth,                   0x215B},  // VULGAR FRACTION ONE EIGHTH
-  {XK_threeeighths,                0x215C},  // VULGAR FRACTION THREE EIGHTHS
-  {XK_fiveeighths,                 0x215D},  // VULGAR FRACTION FIVE EIGHTHS
-  {XK_seveneighths,                0x215E},  // VULGAR FRACTION SEVEN EIGHTHS
-  {XK_trademark,                   0x2122},  // TRADE MARK SIGN
-  {XK_signaturemark,               0x2613},  // SALTIRE
-  {XK_leftopentriangle,            0x25C1},  // WHITE LEFT-POINTING TRIANGLE
-  {XK_rightopentriangle,           0x25B7},  // WHITE RIGHT-POINTING TRIANGLE
-  {XK_emopencircle,                0x25CB},  // WHITE CIRCLE
-  {XK_emopenrectangle,             0x25AF},  // WHITE VERTICAL RECTANGLE
-  {XK_leftsinglequotemark,         0x2018},  // LEFT SINGLE QUOTATION MARK
-  {XK_rightsinglequotemark,        0x2019},  // RIGHT SINGLE QUOTATION MARK
-  {XK_leftdoublequotemark,         0x201C},  // LEFT DOUBLE QUOTATION MARK
-  {XK_rightdoublequotemark,        0x201D},  // RIGHT DOUBLE QUOTATION MARK
-  {XK_prescription,                0x211E},  // PRESCRIPTION TAKE
-  {XK_minutes,                     0x2032},  // PRIME
-  {XK_seconds,                     0x2033},  // DOUBLE PRIME
-  {XK_latincross,                  0x271D},  // LATIN CROSS
-  {XK_filledrectbullet,            0x25AC},  // BLACK RECTANGLE
-  {XK_filledlefttribullet,         0x25C0},  // BLACK LEFT-POINTING TRIANGLE
-  {XK_filledrighttribullet,        0x25B6},  // BLACK RIGHT-POINTING TRIANGLE
-  {XK_emfilledcircle,              0x25CF},  // BLACK CIRCLE
-  {XK_emfilledrect,                0x25AE},  // BLACK VERTICAL RECTANGLE
-  {XK_enopencircbullet,            0x25E6},  // WHITE BULLET
-  {XK_enopensquarebullet,          0x25AB},  // WHITE SMALL SQUARE
-  {XK_openrectbullet,              0x25AD},  // WHITE RECTANGLE
-  {XK_opentribulletup,             0x25B3},  // WHITE UP-POINTING TRIANGLE
-  {XK_opentribulletdown,           0x25BD},  // WHITE DOWN-POINTING TRIANGLE
-  {XK_openstar,                    0x2606},  // WHITE STAR
-  {XK_enfilledcircbullet,          0x2022},  // BULLET
-  {XK_enfilledsqbullet,            0x25AA},  // BLACK SMALL SQUARE
-  {XK_filledtribulletup,           0x25B2},  // BLACK UP-POINTING TRIANGLE
-  {XK_filledtribulletdown,         0x25BC},  // BLACK DOWN-POINTING TRIANGLE
-  {XK_leftpointer,                 0x261C},  // WHITE LEFT POINTING INDEX
-  {XK_rightpointer,                0x261E},  // WHITE RIGHT POINTING INDEX
-  {XK_club,                        0x2663},  // BLACK CLUB SUIT
-  {XK_diamond,                     0x2666},  // BLACK DIAMOND SUIT
-  {XK_heart,                       0x2665},  // BLACK HEART SUIT
-  {XK_maltesecross,                0x2720},  // MALTESE CROSS
-  {XK_dagger,                      0x2020},  // DAGGER
-  {XK_doubledagger,                0x2021},  // DOUBLE DAGGER
-  {XK_checkmark,                   0x2713},  // CHECK MARK
-  {XK_ballotcross,                 0x2717},  // BALLOT X
-  {XK_musicalsharp,                0x266F},  // MUSIC SHARP SIGN
-  {XK_musicalflat,                 0x266D},  // MUSIC FLAT SIGN
-  {XK_malesymbol,                  0x2642},  // MALE SIGN
-  {XK_femalesymbol,                0x2640},  // FEMALE SIGN
-  {XK_telephone,                   0x260E},  // BLACK TELEPHONE
-  {XK_telephonerecorder,           0x2315},  // TELEPHONE RECORDER
-  {XK_phonographcopyright,         0x2117},  // SOUND RECORDING COPYRIGHT
-  {XK_caret,                       0x2038},  // CARET
-  {XK_singlelowquotemark,          0x201A},  // SINGLE LOW-9 QUOTATION MARK
-  {XK_doublelowquotemark,          0x201E},  // DOUBLE LOW-9 QUOTATION MARK
-
-  // APL
-  {XK_leftcaret,                   0x003C},  // LESS-THAN SIGN
-  {XK_rightcaret,                  0x003E},  // GREATER-THAN SIGN
-  {XK_downcaret,                   0x2228},  // LOGICAL OR
-  {XK_upcaret,                     0x2227},  // LOGICAL AND
-  {XK_overbar,                     0x00AF},  // MACRON
-  {XK_downtack,                    0x22A4},  // DOWN TACK
-  {XK_upshoe,                      0x2229},  // INTERSECTION
-  {XK_downstile,                   0x230A},  // LEFT FLOOR
-  {XK_underbar,                    0x005F},  // LOW LINE
-  {XK_jot,                         0x2218},  // RING OPERATOR
-  {XK_quad,                        0x2395},  // APL FUNCTIONAL SYMBOL QUAD
-  {XK_uptack,                      0x22A5},  // UP TACK
-  {XK_circle,                      0x25CB},  // WHITE CIRCLE
-  {XK_upstile,                     0x2308},  // LEFT CEILING
-  {XK_downshoe,                    0x222A},  // UNION
-  {XK_rightshoe,                   0x2283},  // SUPERSET OF
-  {XK_leftshoe,                    0x2282},  // SUBSET OF
-  {XK_lefttack,                    0x22A3},  // LEFT TACK
-  {XK_righttack,                   0x22A2},  // RIGHT TACK
-
-  // Hebrew
-  {XK_hebrew_doublelowline,        0x2017},  // DOUBLE LOW LINE
-  {XK_hebrew_aleph,                0x05D0},  // HEBREW LETTER ALEF
-  {XK_hebrew_bet,                  0x05D1},  // HEBREW LETTER BET
-  {XK_hebrew_gimel,                0x05D2},  // HEBREW LETTER GIMEL
-  {XK_hebrew_dalet,                0x05D3},  // HEBREW LETTER DALET
-  {XK_hebrew_he,                   0x05D4},  // HEBREW LETTER HE
-  {XK_hebrew_waw,                  0x05D5},  // HEBREW LETTER VAV
-  {XK_hebrew_zain,                 0x05D6},  // HEBREW LETTER ZAYIN
-  {XK_hebrew_chet,                 0x05D7},  // HEBREW LETTER HET
-  {XK_hebrew_tet,                  0x05D8},  // HEBREW LETTER TET
-  {XK_hebrew_yod,                  0x05D9},  // HEBREW LETTER YOD
-  {XK_hebrew_finalkaph,            0x05DA},  // HEBREW LETTER FINAL KAF
-  {XK_hebrew_kaph,                 0x05DB},  // HEBREW LETTER KAF
-  {XK_hebrew_lamed,                0x05DC},  // HEBREW LETTER LAMED
-  {XK_hebrew_finalmem,             0x05DD},  // HEBREW LETTER FINAL MEM
-  {XK_hebrew_mem,                  0x05DE},  // HEBREW LETTER MEM
-  {XK_hebrew_finalnun,             0x05DF},  // HEBREW LETTER FINAL NUN
-  {XK_hebrew_nun,                  0x05E0},  // HEBREW LETTER NUN
-  {XK_hebrew_samech,               0x05E1},  // HEBREW LETTER SAMEKH
-  {XK_hebrew_ayin,                 0x05E2},  // HEBREW LETTER AYIN
-  {XK_hebrew_finalpe,              0x05E3},  // HEBREW LETTER FINAL PE
-  {XK_hebrew_pe,                   0x05E4},  // HEBREW LETTER PE
-  {XK_hebrew_finalzade,            0x05E5},  // HEBREW LETTER FINAL TSADI
-  {XK_hebrew_zade,                 0x05E6},  // HEBREW LETTER TSADI
-  {XK_hebrew_qoph,                 0x05E7},  // HEBREW LETTER QOF
-  {XK_hebrew_resh,                 0x05E8},  // HEBREW LETTER RESH
-  {XK_hebrew_shin,                 0x05E9},  // HEBREW LETTER SHIN
-  {XK_hebrew_taw,                  0x05EA},  // HEBREW LETTER TAV
-
-  // Thai
-  {XK_Thai_kokai,                  0x0E01},  // THAI CHARACTER KO KAI
-  {XK_Thai_khokhai,                0x0E02},  // THAI CHARACTER KHO KHAI
-  {XK_Thai_khokhuat,               0x0E03},  // THAI CHARACTER KHO KHUAT
-  {XK_Thai_khokhwai,               0x0E04},  // THAI CHARACTER KHO KHWAI
-  {XK_Thai_khokhon,                0x0E05},  // THAI CHARACTER KHO KHON
-  {XK_Thai_khorakhang,             0x0E06},  // THAI CHARACTER KHO RAKHANG
-  {XK_Thai_ngongu,                 0x0E07},  // THAI CHARACTER NGO NGU
-  {XK_Thai_chochan,                0x0E08},  // THAI CHARACTER CHO CHAN
-  {XK_Thai_choching,               0x0E09},  // THAI CHARACTER CHO CHING
-  {XK_Thai_chochang,               0x0E0A},  // THAI CHARACTER CHO CHANG
-  {XK_Thai_soso,                   0x0E0B},  // THAI CHARACTER SO SO
-  {XK_Thai_chochoe,                0x0E0C},  // THAI CHARACTER CHO CHOE
-  {XK_Thai_yoying,                 0x0E0D},  // THAI CHARACTER YO YING
-  {XK_Thai_dochada,                0x0E0E},  // THAI CHARACTER DO CHADA
-  {XK_Thai_topatak,                0x0E0F},  // THAI CHARACTER TO PATAK
-  {XK_Thai_thothan,                0x0E10},  // THAI CHARACTER THO THAN
-  {XK_Thai_thonangmontho,          0x0E11},  // THAI CHARACTER THO NANGMONTHO
-  {XK_Thai_thophuthao,             0x0E12},  // THAI CHARACTER THO PHUTHAO
-  {XK_Thai_nonen,                  0x0E13},  // THAI CHARACTER NO NEN
-  {XK_Thai_dodek,                  0x0E14},  // THAI CHARACTER DO DEK
-  {XK_Thai_totao,                  0x0E15},  // THAI CHARACTER TO TAO
-  {XK_Thai_thothung,               0x0E16},  // THAI CHARACTER THO THUNG
-  {XK_Thai_thothahan,              0x0E17},  // THAI CHARACTER THO THAHAN
-  {XK_Thai_thothong,               0x0E18},  // THAI CHARACTER THO THONG
-  {XK_Thai_nonu,                   0x0E19},  // THAI CHARACTER NO NU
-  {XK_Thai_bobaimai,               0x0E1A},  // THAI CHARACTER BO BAIMAI
-  {XK_Thai_popla,                  0x0E1B},  // THAI CHARACTER PO PLA
-  {XK_Thai_phophung,               0x0E1C},  // THAI CHARACTER PHO PHUNG
-  {XK_Thai_fofa,                   0x0E1D},  // THAI CHARACTER FO FA
-  {XK_Thai_phophan,                0x0E1E},  // THAI CHARACTER PHO PHAN
-  {XK_Thai_fofan,                  0x0E1F},  // THAI CHARACTER FO FAN
-  {XK_Thai_phosamphao,             0x0E20},  // THAI CHARACTER PHO SAMPHAO
-  {XK_Thai_moma,                   0x0E21},  // THAI CHARACTER MO MA
-  {XK_Thai_yoyak,                  0x0E22},  // THAI CHARACTER YO YAK
-  {XK_Thai_rorua,                  0x0E23},  // THAI CHARACTER RO RUA
-  {XK_Thai_ru,                     0x0E24},  // THAI CHARACTER RU
-  {XK_Thai_loling,                 0x0E25},  // THAI CHARACTER LO LING
-  {XK_Thai_lu,                     0x0E26},  // THAI CHARACTER LU
-  {XK_Thai_wowaen,                 0x0E27},  // THAI CHARACTER WO WAEN
-  {XK_Thai_sosala,                 0x0E28},  // THAI CHARACTER SO SALA
-  {XK_Thai_sorusi,                 0x0E29},  // THAI CHARACTER SO RUSI
-  {XK_Thai_sosua,                  0x0E2A},  // THAI CHARACTER SO SUA
-  {XK_Thai_hohip,                  0x0E2B},  // THAI CHARACTER HO HIP
-  {XK_Thai_lochula,                0x0E2C},  // THAI CHARACTER LO CHULA
-  {XK_Thai_oang,                   0x0E2D},  // THAI CHARACTER O ANG
-  {XK_Thai_honokhuk,               0x0E2E},  // THAI CHARACTER HO NOKHUK
-  {XK_Thai_paiyannoi,              0x0E2F},  // THAI CHARACTER PAIYANNOI
-  {XK_Thai_saraa,                  0x0E30},  // THAI CHARACTER SARA A
-  {XK_Thai_maihanakat,             0x0E31},  // THAI CHARACTER MAI HAN-AKAT
-  {XK_Thai_saraaa,                 0x0E32},  // THAI CHARACTER SARA AA
-  {XK_Thai_saraam,                 0x0E33},  // THAI CHARACTER SARA AM
-  {XK_Thai_sarai,                  0x0E34},  // THAI CHARACTER SARA I
-  {XK_Thai_saraii,                 0x0E35},  // THAI CHARACTER SARA II
-  {XK_Thai_saraue,                 0x0E36},  // THAI CHARACTER SARA UE
-  {XK_Thai_sarauee,                0x0E37},  // THAI CHARACTER SARA UEE
-  {XK_Thai_sarau,                  0x0E38},  // THAI CHARACTER SARA U
-  {XK_Thai_sarauu,                 0x0E39},  // THAI CHARACTER SARA UU
-  {XK_Thai_phinthu,                0x0E3A},  // THAI CHARACTER PHINTHU
-  {XK_Thai_baht,                   0x0E3F},  // THAI CURRENCY SYMBOL BAHT
-  {XK_Thai_sarae,                  0x0E40},  // THAI CHARACTER SARA E
-  {XK_Thai_saraae,                 0x0E41},  // THAI CHARACTER SARA AE
-  {XK_Thai_sarao,                  0x0E42},  // THAI CHARACTER SARA O
-  {XK_Thai_saraaimaimuan,          0x0E43},  // THAI CHARACTER SARA AI MAIMUAN
-  {XK_Thai_saraaimaimalai,         0x0E44},  // THAI CHARACTER SARA AI MAIMALAI
-  {XK_Thai_lakkhangyao,            0x0E45},  // THAI CHARACTER LAKKHANGYAO
-  {XK_Thai_maiyamok,               0x0E46},  // THAI CHARACTER MAIYAMOK
-  {XK_Thai_maitaikhu,              0x0E47},  // THAI CHARACTER MAITAIKHU
-  {XK_Thai_maiek,                  0x0E48},  // THAI CHARACTER MAI EK
-  {XK_Thai_maitho,                 0x0E49},  // THAI CHARACTER MAI THO
-  {XK_Thai_maitri,                 0x0E4A},  // THAI CHARACTER MAI TRI
-  {XK_Thai_maichattawa,            0x0E4B},  // THAI CHARACTER MAI CHATTAWA
-  {XK_Thai_thanthakhat,            0x0E4C},  // THAI CHARACTER THANTHAKHAT
-  {XK_Thai_nikhahit,               0x0E4D},  // THAI CHARACTER NIKHAHIT
-  {XK_Thai_leksun,                 0x0E50},  // THAI DIGIT ZERO
-  {XK_Thai_leknung,                0x0E51},  // THAI DIGIT ONE
-  {XK_Thai_leksong,                0x0E52},  // THAI DIGIT TWO
-  {XK_Thai_leksam,                 0x0E53},  // THAI DIGIT THREE
-  {XK_Thai_leksi,                  0x0E54},  // THAI DIGIT FOUR
-  {XK_Thai_lekha,                  0x0E55},  // THAI DIGIT FIVE
-  {XK_Thai_lekhok,                 0x0E56},  // THAI DIGIT SIX
-  {XK_Thai_lekchet,                0x0E57},  // THAI DIGIT SEVEN
-  {XK_Thai_lekpaet,                0x0E58},  // THAI DIGIT EIGHT
-  {XK_Thai_lekkao,                 0x0E59},  // THAI DIGIT NINE
-
-  // Korean
-  {XK_Korean_Won,                  0x20A9},  // WON SIGN
-
-  // Armenian KeySyms map 1:1 to Unicode
-
-  // Georgian KeySyms map 1:1 to Unicode
-
-  // Azeri KeySyms map 1:1 to Unicode
-
-  // Vietnamese KeySyms map 1:1 to Unicode
-
-  // Currency KeySyms partially map 1:1 to Unicode
-  {XK_EuroSign,                    0x20AC},  // EURO SIGN
-
-  // Mathematical KeySyms map 1:1 to Unicode
-
-  // Braille KeySyms map 1:1 to Unicode
-
-  // Sinhala KeySyms map 1:1 to Unicode
-
-  // Dead keys mapped to Unicode combining characters (mostly) for composition,
-  // used in combination with the UI Events 'Dead' key. For the X KeySyms that
-  // have no combining accent, we use a character whose name has mnemonic value.
-  {XK_dead_grave,              0x0300},  // COMBINING GRAVE ACCENT
-  {XK_dead_acute,              0x0301},  // COMBINING ACUTE ACCENT
-  {XK_dead_circumflex,         0x0302},  // COMBINING CIRCUMFLEX ACCENT
-  {XK_dead_tilde,              0x0303},  // COMBINING TILDE
-  {XK_dead_macron,             0x0304},  // COMBINING MACRON
-  {XK_dead_breve,              0x0306},  // COMBINING BREVE
-  {XK_dead_abovedot,           0x0307},  // COMBINING DOT ABOVE
-  {XK_dead_diaeresis,          0x0308},  // COMBINING DIAERESIS
-  {XK_dead_abovering,          0x030A},  // COMBINING RING ABOVE
-  {XK_dead_doubleacute,        0x030B},  // COMBINING DOUBLE ACUTE ACCENT
-  {XK_dead_caron,              0x030C},  // COMBINING CARON
-  {XK_dead_cedilla,            0x0327},  // COMBINING CEDILLA
-  {XK_dead_ogonek,             0x0328},  // COMBINING OGONEK
-  {XK_dead_iota,               0x0345},  // COMBINING GREEK YPOGEGRAMMENI
-  {XK_dead_voiced_sound,       0x3099},  // COMB. KATAKANA-HIRAGANA VOICED
-  {XK_dead_semivoiced_sound,   0x309A},  // COMB. KATAKANA-HIRAGANA SEMI-VOICED
-  {XK_dead_belowdot,           0x0323},  // COMBINING DOT BELOW
-  {XK_dead_hook,               0x0309},  // COMBINING HOOK ABOVE
-  {XK_dead_horn,               0x031B},  // COMBINING HORN
-  {XK_dead_stroke,             0x0338},  // COMBINING LONG SOLIDUS OVERLAY
-  {XK_dead_abovecomma,         0x0313},  // COMBINING COMMA ABOVE
-  {XK_dead_abovereversedcomma, 0x0314},  // COMBINING REVERSED COMMA ABOVE
-  {XK_dead_doublegrave,        0x030F},  // COMBINING DOUBLE GRAVE ACCENT
-  {XK_dead_belowring,          0x0325},  // COMBINING RING BELOW
-  {XK_dead_belowmacron,        0x0331},  // COMBINING MACRON BELOW
-  {XK_dead_belowcircumflex,    0x032D},  // COMBINING CIRCUMFLEX ACCENT BELOW
-  {XK_dead_belowtilde,         0x0330},  // COMBINING TILDE BELOW
-  {XK_dead_belowbreve,         0x032E},  // COMBINING BREVE BELOW
-  {XK_dead_belowdiaeresis,     0x0324},  // COMBINING DIAERESIS BELOW
-  {XK_dead_invertedbreve,      0x0311},  // COMBINING INVERTED BREVE
-  {XK_dead_belowcomma,         0x0326},  // COMBINING COMMA BELOW
-  {XK_dead_currency,           0x00A4},  // CURRENCY SIGN
-  {XK_dead_greek,              0x037E},  // GREEK QUESTION MARK
-};
-
-class KeySymToUnicode {
- public:
-  static KeySymToUnicode& GetInstance() {
-    static KeySymToUnicode instance;
-    return instance;
-  }
-
-  KeySymToUnicode()
-      : keysym_to_unicode_map_(base::size(g_keysym_to_unicode_table)) {
-    for (size_t i = 0; i < base::size(g_keysym_to_unicode_table); ++i) {
-      keysym_to_unicode_map_[g_keysym_to_unicode_table[i].keysym] =
-          g_keysym_to_unicode_table[i].unicode;
-    }
-  }
-
-  KeySymToUnicode(const KeySymToUnicode&) = delete;
-  KeySymToUnicode& operator=(const KeySymToUnicode&) = delete;
-
-  uint16_t UnicodeFromKeySym(uint32_t keysym) const {
-    // Latin-1 characters have the same representation.
-    if ((0x0020 <= keysym && keysym <= 0x007e) ||
-        (0x00a0 <= keysym && keysym <= 0x00ff))
-      return static_cast<uint16_t>(keysym);
-
-    // Unicode-style KeySyms.
-    if ((keysym & 0xffe00000) == 0x01000000) {
-      uint32_t unicode = static_cast<uint32_t>(keysym & 0x1fffff);
-      if (unicode & ~0xffff)
-        return 0;  // We don't support characters outside the Basic Plane.
-      return static_cast<uint16_t>(unicode);
-    }
-
-    // Other KeySyms which are not Unicode-style.
-    auto i = keysym_to_unicode_map_.find(keysym);
-    return i != keysym_to_unicode_map_.end() ? i->second : 0;
-  }
-
- private:
-  typedef std::unordered_map<uint32_t, uint16_t> KeySymToUnicodeMap;
-  KeySymToUnicodeMap keysym_to_unicode_map_;
-};
-
-uint16_t GetUnicodeCharacterFromXKeySym(unsigned long keysym) {
-  return KeySymToUnicode::GetInstance().UnicodeFromKeySym(
-      static_cast<uint32_t>(keysym));
-}
-
-}  // namespace ui
diff --git a/node_modules/native-keymap/deps/chromium/x/keysym_to_unicode.h b/node_modules/native-keymap/deps/chromium/x/keysym_to_unicode.h
deleted file mode 100644
index d6bda65..0000000
--- a/node_modules/native-keymap/deps/chromium/x/keysym_to_unicode.h
+++ /dev/null
@@ -1,26 +0,0 @@
-// ----------------------------------------------------------------------------------------------------------------
-//
-// [13.01.2022] https://source.chromium.org/chromium/chromium/src/+/main:ui/events/keycodes/keysym_to_unicode.h
-//
-// ----------------------------------------------------------------------------------------------------------------
-
-// Copyright 2014 The Chromium Authors. All rights reserved.
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-
-#ifndef UI_EVENTS_KEYCODES_KEYSYM_TO_UNICODE_H_
-#define UI_EVENTS_KEYCODES_KEYSYM_TO_UNICODE_H_
-
-#include <stdint.h>
-
-namespace ui {
-
-// Returns a Unicode character corresponding to the given |keysym|.  If the
-// |keysym| doesn't represent a printable character, returns zero.  We don't
-// support characters outside the Basic Plane, and this function returns zero
-// in that case.
-uint16_t GetUnicodeCharacterFromXKeySym(unsigned long keysym);
-
-}  // namespace ui
-
-#endif  // UI_EVENTS_KEYCODES_KEYSYM_TO_UNICODE_H_
diff --git a/node_modules/native-keymap/index.d.ts b/node_modules/native-keymap/index.d.ts
deleted file mode 100644
index 60e6f89..0000000
--- a/node_modules/native-keymap/index.d.ts
+++ /dev/null
@@ -1,70 +0,0 @@
-/*---------------------------------------------------------------------------------------------
- *  Copyright (c) Microsoft Corporation. All rights reserved.
- *  Licensed under the MIT License. See License.txt in the project root for license information.
- *--------------------------------------------------------------------------------------------*/
-
-export interface IWindowsKeyMapping {
-	vkey: string;
-	value: string;
-	withShift: string;
-	withAltGr: string;
-	withShiftAltGr: string;
-}
-export interface IWindowsKeyboardMapping {
-	[code: string]: IWindowsKeyMapping;
-}
-export interface ILinuxKeyMapping {
-	value: string;
-	withShift: string;
-	withAltGr: string;
-	withShiftAltGr: string;
-}
-export interface ILinuxKeyboardMapping {
-	[code: string]: ILinuxKeyMapping;
-}
-export interface IMacKeyMapping {
-	value: string;
-	valueIsDeadKey: boolean;
-	withShift: string;
-	withShiftIsDeadKey: boolean;
-	withAltGr: string;
-	withAltGrIsDeadKey: boolean;
-	withShiftAltGr: string;
-	withShiftAltGrIsDeadKey: boolean;
-}
-export interface IMacKeyboardMapping {
-	[code: string]: IMacKeyMapping;
-}
-
-export type IKeyboardMapping = IWindowsKeyboardMapping | ILinuxKeyboardMapping | IMacKeyboardMapping;
-
-export function getKeyMap(): IKeyboardMapping;
-
-export interface IWindowsKeyboardLayoutInfo {
-	name: string;
-	id: string;
-	text: string;
-}
-
-export interface ILinuxKeyboardLayoutInfo {
-	model: string;
-	group: number;
-	layout: string;
-	variant: string;
-	options: string;
-	rules: string;
-}
-
-export interface IMacKeyboardLayoutInfo {
-	id: string;
-	localizedName: string;
-	lang: string;
-}
-
-export type IKeyboardLayoutInfo = IWindowsKeyboardLayoutInfo | ILinuxKeyboardLayoutInfo | IMacKeyboardLayoutInfo;
-
-export function getCurrentKeyboardLayout(): IKeyboardLayoutInfo;
-
-export function onDidChangeKeyboardLayout(callback: () => void): void;
-
-export function isISOKeyboard(): boolean | undefined;
diff --git a/node_modules/native-keymap/index.js b/node_modules/native-keymap/index.js
deleted file mode 100644
index 9569f4b..0000000
--- a/node_modules/native-keymap/index.js
+++ /dev/null
@@ -1,70 +0,0 @@
-/*---------------------------------------------------------------------------------------------
- *  Copyright (c) Microsoft Corporation. All rights reserved.
- *  Licensed under the MIT License. See License.txt in the project root for license information.
- *--------------------------------------------------------------------------------------------*/
-
-function NativeBinding() {
-  this._tried = false;
-  this._keymapping = null;
-}
-NativeBinding.prototype._init = function() {
-  if (this._tried) {
-    return;
-  }
-  this._tried = true;
-  try {
-    this._keymapping = require('./build/Release/keymapping');
-  } catch (err) {
-    // fallback to the debug build
-    this._keymapping = require('./build/Debug/keymapping');
-  }
-};
-NativeBinding.prototype.getKeyMap = function() {
-  try {
-    this._init();
-    return this._keymapping.getKeyMap();
-  } catch(err) {
-    console.error(err);
-    return [];
-  }
-};
-NativeBinding.prototype.getCurrentKeyboardLayout = function() {
-  try {
-    this._init();
-    return this._keymapping.getCurrentKeyboardLayout();
-  } catch(err) {
-    console.error(err);
-    return null;
-  }
-};
-NativeBinding.prototype.onDidChangeKeyboardLayout = function(callback) {
-  try {
-    this._init();
-    this._keymapping.onDidChangeKeyboardLayout(callback);
-  } catch(err) {
-    console.error(err);
-  }
-}
-NativeBinding.prototype.isISOKeyboard = function(callback) {
-  try {
-    this._init();
-    return this._keymapping.isISOKeyboard();
-  } catch(err) {
-    return false;
-  }
-}
-
-var binding = new NativeBinding();
-
-exports.getCurrentKeyboardLayout = function() {
-  return binding.getCurrentKeyboardLayout();
-};
-exports.getKeyMap = function() {
-  return binding.getKeyMap();
-};
-exports.onDidChangeKeyboardLayout = function(callback) {
-  return binding.onDidChangeKeyboardLayout(callback);
-};
-exports.isISOKeyboard = function(callback) {
-  return binding.isISOKeyboard(callback);
-};
diff --git a/node_modules/native-keymap/package.json b/node_modules/native-keymap/package.json
deleted file mode 100644
index ad6792d..0000000
--- a/node_modules/native-keymap/package.json
+++ /dev/null
@@ -1,20 +0,0 @@
-{
-  "name": "native-keymap",
-  "version": "3.3.5",
-  "description": "Get OS key mapping",
-  "main": "index.js",
-  "typings": "index.d.ts",
-  "scripts": {
-    "test": "node test/test.js"
-  },
-  "repository": {
-    "type": "git",
-    "url": "git+https://github.com/Microsoft/node-native-keymap.git"
-  },
-  "author": "Microsoft Corporation",
-  "license": "MIT",
-  "bugs": {
-    "url": "https://github.com/Microsoft/node-native-keymap/issues"
-  },
-  "homepage": "https://github.com/Microsoft/node-native-keymap#readme"
-}
diff --git a/node_modules/native-keymap/src/common.h b/node_modules/native-keymap/src/common.h
deleted file mode 100644
index f44d8f7..0000000
--- a/node_modules/native-keymap/src/common.h
+++ /dev/null
@@ -1,92 +0,0 @@
-// """
-// Copyright Node.js contributors. All rights reserved.
-//
-// Permission is hereby granted, free of charge, to any person obtaining a copy
-// of this software and associated documentation files (the "Software"), to
-// deal in the Software without restriction, including without limitation the
-// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
-// sell copies of the Software, and to permit persons to whom the Software is
-// furnished to do so, subject to the following conditions:
-//
-// The above copyright notice and this permission notice shall be included in
-// all copies or substantial portions of the Software.
-//
-// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-// IN THE SOFTWARE.
-// """
-
-// Empty value so that macros here are able to return NULL or void
-#define NAPI_RETVAL_NOTHING  // Intentionally blank #define
-
-#define GET_AND_THROW_LAST_ERROR(env)                                    \
-  do {                                                                   \
-    const napi_extended_error_info *error_info;                          \
-    napi_get_last_error_info((env), &error_info);                        \
-    bool is_pending;                                                     \
-    napi_is_exception_pending((env), &is_pending);                       \
-    /* If an exception is already pending, don't rethrow it */           \
-    if (!is_pending) {                                                   \
-      const char* error_message = error_info->error_message != NULL ?    \
-        error_info->error_message :                                      \
-        "empty error message";                                           \
-      napi_throw_error((env), NULL, error_message);                      \
-    }                                                                    \
-  } while (0)
-
-#define NAPI_ASSERT_BASE(env, assertion, message, ret_val)               \
-  do {                                                                   \
-    if (!(assertion)) {                                                  \
-      napi_throw_error(                                                  \
-          (env),                                                         \
-        NULL,                                                            \
-          "assertion (" #assertion ") failed: " message);                \
-      return ret_val;                                                    \
-    }                                                                    \
-  } while (0)
-
-// Returns NULL on failed assertion.
-// This is meant to be used inside napi_callback methods.
-#define NAPI_ASSERT(env, assertion, message)                             \
-  NAPI_ASSERT_BASE(env, assertion, message, NULL)
-
-// Returns empty on failed assertion.
-// This is meant to be used inside functions with void return type.
-#define NAPI_ASSERT_RETURN_VOID(env, assertion, message)                 \
-  NAPI_ASSERT_BASE(env, assertion, message, NAPI_RETVAL_NOTHING)
-
-#define NAPI_CALL_BASE(env, the_call, ret_val)                           \
-  do {                                                                   \
-    if ((the_call) != napi_ok) {                                         \
-      GET_AND_THROW_LAST_ERROR((env));                                   \
-      return ret_val;                                                    \
-    }                                                                    \
-  } while (0)
-
-// Returns NULL if the_call doesn't return napi_ok.
-#define NAPI_CALL(env, the_call)                                         \
-  NAPI_CALL_BASE(env, the_call, NULL)
-
-// Returns empty if the_call doesn't return napi_ok.
-#define NAPI_CALL_RETURN_VOID(env, the_call)                             \
-  NAPI_CALL_BASE(env, the_call, NAPI_RETVAL_NOTHING)
-
-// Returns empty if the_call doesn't return napi_ok.
-#define NAPI_CALL_RETURN_STATUS(env, the_call)                           \
-  do {                                                                   \
-    napi_status status = (the_call);                                     \
-    if (status != napi_ok) {                                             \
-      GET_AND_THROW_LAST_ERROR((env));                                   \
-      return status;                                                     \
-    }                                                                    \
-  } while (0)
-
-#define DECLARE_NAPI_PROPERTY(name, func)                                \
-  { (name), NULL, (func), NULL, NULL, NULL, napi_default, NULL }
-
-#define DECLARE_NAPI_GETTER(name, func)                                  \
-  { (name), NULL, NULL, (func), NULL, NULL, napi_default, NULL }
diff --git a/node_modules/native-keymap/src/keyboard_mac.mm b/node_modules/native-keymap/src/keyboard_mac.mm
deleted file mode 100644
index 237b030..0000000
--- a/node_modules/native-keymap/src/keyboard_mac.mm
+++ /dev/null
@@ -1,209 +0,0 @@
-/*---------------------------------------------------------------------------------------------
- *  Copyright (c) Microsoft Corporation. All rights reserved.
- *  Licensed under the MIT License. See License.txt in the project root for license information.
- *--------------------------------------------------------------------------------------------*/
-
-#import <Cocoa/Cocoa.h>
-#include <Carbon/Carbon.h>
-
-#include "string_conversion.h"
-#include "keymapping.h"
-#include "common.h"
-#include "../deps/chromium/macros.h"
-
-namespace {
-
-std::pair<bool,std::string> ConvertKeyCodeToText(const UCKeyboardLayout* keyboard_layout, int mac_key_code, int modifiers) {
-
-  int mac_modifiers = 0;
-  if (modifiers & kShiftKeyModifierMask)
-    mac_modifiers |= shiftKey;
-  if (modifiers & kControlKeyModifierMask)
-    mac_modifiers |= controlKey;
-  if (modifiers & kAltKeyModifierMask)
-    mac_modifiers |= optionKey;
-  if (modifiers & kMetaKeyModifierMask)
-    mac_modifiers |= cmdKey;
-
-  // Convert EventRecord modifiers to format UCKeyTranslate accepts. See docs
-  // on UCKeyTranslate for more info.
-  UInt32 modifier_key_state = (mac_modifiers >> 8) & 0xFF;
-
-  UInt32 dead_key_state = 0;
-  UniCharCount char_count = 0;
-  UniChar character = 0;
-  OSStatus status = UCKeyTranslate(
-      keyboard_layout,
-      static_cast<UInt16>(mac_key_code),
-      kUCKeyActionDown,
-      modifier_key_state,
-      LMGetKbdLast(),
-      kUCKeyTranslateNoDeadKeysBit,
-      &dead_key_state,
-      1,
-      &char_count,
-      &character);
-
-  bool is_dead_key = false;
-  if (status == noErr && char_count == 0 && dead_key_state != 0) {
-    is_dead_key = true;
-    status = UCKeyTranslate(
-        keyboard_layout,
-        static_cast<UInt16>(mac_key_code),
-        kUCKeyActionDown,
-        modifier_key_state,
-        LMGetKbdLast(),
-        kUCKeyTranslateNoDeadKeysBit,
-        &dead_key_state,
-        1,
-        &char_count,
-        &character);
-  }
-
-  if (status == noErr && char_count == 1 && !std::iscntrl(character)) {
-    wchar_t value = character;
-    return std::make_pair(is_dead_key, vscode_keyboard::UTF16toUTF8(&value, 1));
-  }
-  return std::make_pair(false, std::string());
-}
-
-} // namespace
-
-namespace vscode_keyboard {
-
-
-#define DOM_CODE(usb, evdev, xkb, win, mac, code, id) {usb, mac, code}
-#define DOM_CODE_DECLARATION const KeycodeMapEntry usb_keycode_map[] =
-#include "../deps/chromium/dom_code_data.inc"
-#undef DOM_CODE
-#undef DOM_CODE_DECLARATION
-
-napi_value GetKeyMapImpl(napi_env env, napi_callback_info info) {
-
-  napi_value result;
-  NAPI_CALL(env, napi_create_object(env, &result));
-
-  TISInputSourceRef source = TISCopyCurrentKeyboardInputSource();
-  CFDataRef layout_data = static_cast<CFDataRef>((TISGetInputSourceProperty(source, kTISPropertyUnicodeKeyLayoutData)));
-  if (!layout_data) {
-    // TISGetInputSourceProperty returns null with  Japanese keyboard layout.
-    // Using TISCopyCurrentKeyboardLayoutInputSource to fix NULL return.
-    source = TISCopyCurrentKeyboardLayoutInputSource();
-    layout_data = static_cast<CFDataRef>((TISGetInputSourceProperty(source, kTISPropertyUnicodeKeyLayoutData)));
-    if (!layout_data) {
-      // https://developer.apple.com/library/mac/documentation/TextFonts/Reference/TextInputSourcesReference/#//apple_ref/c/func/TISGetInputSourceProperty
-      return result;
-    }
-  }
-
-  const UCKeyboardLayout* keyboard_layout = reinterpret_cast<const UCKeyboardLayout*>(CFDataGetBytePtr(layout_data));
-
-  size_t cnt = sizeof(usb_keycode_map) / sizeof(usb_keycode_map[0]);
-
-  napi_value true_value;
-  NAPI_CALL(env, napi_get_boolean(env, true, &true_value));
-
-  napi_value false_value;
-  NAPI_CALL(env, napi_get_boolean(env, false, &false_value));
-
-  for (size_t i = 0; i < cnt; ++i) {
-    const char *code = usb_keycode_map[i].code;
-    int native_keycode = usb_keycode_map[i].native_keycode;
-
-    if (!code || native_keycode >= 0xffff) {
-      continue;
-    }
-
-    napi_value entry;
-    NAPI_CALL(env, napi_create_object(env, &entry));
-
-    {
-      std::pair<bool,std::string> value = ConvertKeyCodeToText(keyboard_layout, native_keycode, 0);
-      NAPI_CALL(env, napi_set_named_property_string_utf8(env, entry, "value", value.second.c_str()));
-      NAPI_CALL(env, napi_set_named_property(env, entry, "valueIsDeadKey", value.first ? true_value : false_value));
-    }
-
-    {
-      std::pair<bool,std::string> with_shift = ConvertKeyCodeToText(keyboard_layout, native_keycode, kShiftKeyModifierMask);
-      NAPI_CALL(env, napi_set_named_property_string_utf8(env, entry, "withShift", with_shift.second.c_str()));
-      NAPI_CALL(env, napi_set_named_property(env, entry, "withShiftIsDeadKey", with_shift.first ? true_value : false_value));
-    }
-
-    {
-      std::pair<bool,std::string> with_alt_gr = ConvertKeyCodeToText(keyboard_layout, native_keycode, kAltKeyModifierMask);
-      NAPI_CALL(env, napi_set_named_property_string_utf8(env, entry, "withAltGr", with_alt_gr.second.c_str()));
-      NAPI_CALL(env, napi_set_named_property(env, entry, "withAltGrIsDeadKey", with_alt_gr.first ? true_value : false_value));
-    }
-
-    {
-      std::pair<bool,std::string> with_shift_alt_gr = ConvertKeyCodeToText(keyboard_layout, native_keycode, kShiftKeyModifierMask | kAltKeyModifierMask);
-      NAPI_CALL(env, napi_set_named_property_string_utf8(env, entry, "withShiftAltGr", with_shift_alt_gr.second.c_str()));
-      NAPI_CALL(env, napi_set_named_property(env, entry, "withShiftAltGrIsDeadKey", with_shift_alt_gr.first ? true_value : false_value));
-    }
-
-    NAPI_CALL(env, napi_set_named_property(env, result, code, entry));
-  }
-  return result;
-}
-
-napi_value GetCurrentKeyboardLayoutImpl(napi_env env, napi_callback_info info) {
-
-  napi_value result;
-  NAPI_CALL(env, napi_create_object(env, &result));
-
-  TISInputSourceRef source = TISCopyCurrentKeyboardInputSource();
-  CFStringRef source_id = (CFStringRef) TISGetInputSourceProperty(source, kTISPropertyInputSourceID);
-  if(source_id) {
-    NAPI_CALL(env, napi_set_named_property_string_utf8(env, result, "id", std::string([(NSString *)source_id UTF8String]).c_str()));
-  }
-
-  TISInputSourceRef name_source = TISCopyCurrentKeyboardInputSource();
-  CFStringRef localized_name = (CFStringRef) TISGetInputSourceProperty(name_source, kTISPropertyLocalizedName);
-  if(localized_name) {
-    NAPI_CALL(env, napi_set_named_property_string_utf8(env, result, "localizedName", std::string([(NSString *)localized_name UTF8String]).c_str()));
-  }
-
-  NSArray* languages = (NSArray *) TISGetInputSourceProperty(source, kTISPropertyInputSourceLanguages);
-  if (languages && [languages count] > 0) {
-    NSString* lang = [languages objectAtIndex:0];
-    if (lang) {
-      NAPI_CALL(env, napi_set_named_property_string_utf8(env, result, "lang", std::string([lang UTF8String]).c_str()));
-    }
-  }
-
-  return result;
-}
-
-void NotificationCallback(CFNotificationCenterRef center, void *observer, CFStringRef name, const void *object, CFDictionaryRef userInfo) {
-  NotificationCallbackData *data = (NotificationCallbackData *)observer;
-  InvokeNotificationCallback(data);
-}
-
-void RegisterKeyboardLayoutChangeListenerImpl(NotificationCallbackData *data) {
-  CFNotificationCenterRef center = CFNotificationCenterGetDistributedCenter();
-
-  // add an observer
-  CFNotificationCenterAddObserver(center, data, NotificationCallback,
-    kTISNotifySelectedKeyboardInputSourceChanged, NULL,
-    CFNotificationSuspensionBehaviorDeliverImmediately
-  );
-}
-
-void DisposeKeyboardLayoutChangeListenerImpl(NotificationCallbackData *data) {
-  CFNotificationCenterRef center = CFNotificationCenterGetDistributedCenter();
-
-  // remove the observer
-  CFNotificationCenterRemoveObserver(center, data,
-    kTISNotifySelectedKeyboardInputSourceChanged, NULL
-  );
-}
-
-napi_value IsISOKeyboardImpl(napi_env env, napi_callback_info info) {
-  if (KBGetLayoutType(LMGetKbdType()) == kKeyboardISO) {
-    return napi_fetch_boolean(env, true);
-  } else {
-    return napi_fetch_boolean(env, false);
-  }
-}
-
-} // namespace vscode_keyboard
diff --git a/node_modules/native-keymap/src/keyboard_win.cc b/node_modules/native-keymap/src/keyboard_win.cc
deleted file mode 100644
index a69024e..0000000
--- a/node_modules/native-keymap/src/keyboard_win.cc
+++ /dev/null
@@ -1,476 +0,0 @@
-/*---------------------------------------------------------------------------------------------
- *  Copyright (c) Microsoft Corporation. All rights reserved.
- *  Licensed under the MIT License. See License.txt in the project root for license information.
- *--------------------------------------------------------------------------------------------*/
-
-#include "keymapping.h"
-#include "common.h"
-
-#include "../deps/chromium/macros.h"
-
-#include "string_conversion.h"
-#include <windows.h>
-#include <Msctf.h>
-#include <ime.h>
-
-namespace {
-
-void ClearKeyboardBuffer(UINT key_code, UINT scan_code, BYTE* keyboard_state) {
-  memset(keyboard_state, 0, 256);
-
-  wchar_t chars[5];
-  int code = 0;
-  do {
-    code = ::ToUnicode(key_code, scan_code, keyboard_state, chars, 4, 0);
-  } while (code < 0);
-}
-
-std::string GetStrFromKeyPress(UINT key_code, int modifiers, BYTE *keyboard_state, UINT clear_key_code, UINT clear_scan_code) {
-  memset(keyboard_state, 0, 256);
-
-  if (modifiers & kShiftKeyModifierMask) {
-    keyboard_state[VK_SHIFT] |= 0x80;
-  }
-
-  if (modifiers & kControlKeyModifierMask) {
-    keyboard_state[VK_CONTROL] |= 0x80;
-  }
-
-  if (modifiers & kAltKeyModifierMask) {
-    keyboard_state[VK_MENU] |= 0x80;
-  }
-
-  UINT scan_code = ::MapVirtualKeyW(key_code, MAPVK_VK_TO_VSC);
-
-  wchar_t chars[5];
-  int code = ::ToUnicode(key_code, scan_code, keyboard_state, chars, 4, 0);
-
-  if (code == -1) {
-    // dead key
-    if (chars[0] == 0 || iswcntrl(chars[0])) {
-      return std::string();
-    }
-    code = 1;
-  }
-
-  ClearKeyboardBuffer(clear_key_code, clear_scan_code, keyboard_state);
-
-  if (code <= 0 || (code == 1 && iswcntrl(chars[0]))) {
-    return std::string();
-  }
-
-  return vscode_keyboard::UTF16toUTF8(chars, code);
-}
-
-} // namespace
-
-namespace vscode_keyboard {
-
-#define DOM_CODE(usb, evdev, xkb, win, mac, code, id) {usb, win, code}
-#define DOM_CODE_DECLARATION const KeycodeMapEntry usb_keycode_map[] =
-#include "../deps/chromium/dom_code_data.inc"
-#undef DOM_CODE
-#undef DOM_CODE_DECLARATION
-
-typedef struct {
-  int vkey;
-  const char* str_vkey;
-} VKeyStrEntry;
-
-const char* VKeyToStr(int vkey) {
-  switch (vkey) {
-  case VK_LBUTTON: return "VK_LBUTTON"; // Left mouse button
-  case VK_RBUTTON: return "VK_RBUTTON"; // Right mouse button
-  case VK_CANCEL: return "VK_CANCEL"; // Control-break processing
-  case VK_MBUTTON: return "VK_MBUTTON"; // Middle mouse button (three-button mouse)
-  case VK_XBUTTON1: return "VK_XBUTTON1"; // X1 mouse button
-  case VK_XBUTTON2: return "VK_XBUTTON2"; // X2 mouse button
-  case VK_BACK: return "VK_BACK"; // BACKSPACE key
-  case VK_TAB: return "VK_TAB"; // TAB key
-  case VK_CLEAR: return "VK_CLEAR"; // CLEAR key
-  case VK_RETURN: return "VK_RETURN"; // ENTER key
-  case VK_SHIFT: return "VK_SHIFT"; // SHIFT key
-  case VK_CONTROL: return "VK_CONTROL"; // CTRL key
-  case VK_MENU: return "VK_MENU"; // ALT key
-  case VK_PAUSE: return "VK_PAUSE"; // PAUSE key
-  case VK_CAPITAL: return "VK_CAPITAL"; // CAPS LOCK key
-  case VK_KANA: return "VK_KANA"; // IME Kana mode
-  //case VK_HANGUL: return "VK_HANGUEL"; // IME Hangul mode
-  case VK_JUNJA: return "VK_JUNJA"; // IME Junja mode
-  case VK_FINAL: return "VK_FINAL"; // IME final mode
-  case VK_HANJA: return "VK_HANJA"; // IME Hanja mode
-  //case VK_KANJI: return "VK_KANJI"; // IME Kanji mode
-  case VK_ESCAPE: return "VK_ESCAPE"; // ESC key
-  case VK_CONVERT: return "VK_CONVERT"; // IME convert
-  case VK_NONCONVERT: return "VK_NONCONVERT"; // IME nonconvert
-  case VK_ACCEPT: return "VK_ACCEPT"; // IME accept
-  case VK_MODECHANGE: return "VK_MODECHANGE"; // IME mode change request
-  case VK_SPACE: return "VK_SPACE"; // SPACEBAR
-  case VK_PRIOR: return "VK_PRIOR"; // PAGE UP key
-  case VK_NEXT: return "VK_NEXT"; // PAGE DOWN key
-  case VK_END: return "VK_END"; // END key
-  case VK_HOME: return "VK_HOME"; // HOME key
-  case VK_LEFT: return "VK_LEFT"; // LEFT ARROW key
-  case VK_UP: return "VK_UP"; // UP ARROW key
-  case VK_RIGHT: return "VK_RIGHT"; // RIGHT ARROW key
-  case VK_DOWN: return "VK_DOWN"; // DOWN ARROW key
-  case VK_SELECT: return "VK_SELECT"; // SELECT key
-  case VK_PRINT: return "VK_PRINT"; // PRINT key
-  case VK_EXECUTE: return "VK_EXECUTE"; // EXECUTE key
-  case VK_SNAPSHOT: return "VK_SNAPSHOT"; // PRINT SCREEN key
-  case VK_INSERT: return "VK_INSERT"; // INS key
-  case VK_DELETE: return "VK_DELETE"; // DEL key
-  case VK_HELP: return "VK_HELP"; // HELP key
-
-  case '0': return "VK_0";
-  case '1': return "VK_1";
-  case '2': return "VK_2";
-  case '3': return "VK_3";
-  case '4': return "VK_4";
-  case '5': return "VK_5";
-  case '6': return "VK_6";
-  case '7': return "VK_7";
-  case '8': return "VK_8";
-  case '9': return "VK_9";
-  case 'A': return "VK_A";
-  case 'B': return "VK_B";
-  case 'C': return "VK_C";
-  case 'D': return "VK_D";
-  case 'E': return "VK_E";
-  case 'F': return "VK_F";
-  case 'G': return "VK_G";
-  case 'H': return "VK_H";
-  case 'I': return "VK_I";
-  case 'J': return "VK_J";
-  case 'K': return "VK_K";
-  case 'L': return "VK_L";
-  case 'M': return "VK_M";
-  case 'N': return "VK_N";
-  case 'O': return "VK_O";
-  case 'P': return "VK_P";
-  case 'Q': return "VK_Q";
-  case 'R': return "VK_R";
-  case 'S': return "VK_S";
-  case 'T': return "VK_T";
-  case 'U': return "VK_U";
-  case 'V': return "VK_V";
-  case 'W': return "VK_W";
-  case 'X': return "VK_X";
-  case 'Y': return "VK_Y";
-  case 'Z': return "VK_Z";
-
-  case VK_LWIN: return "VK_LWIN"; // Left Windows key (Natural keyboard)
-  case VK_RWIN: return "VK_RWIN"; // Right Windows key (Natural keyboard)
-  case VK_APPS: return "VK_APPS"; // Applications key (Natural keyboard)
-  case VK_SLEEP: return "VK_SLEEP"; // Computer Sleep key
-  case VK_NUMPAD0: return "VK_NUMPAD0"; // Numeric keypad 0 key
-  case VK_NUMPAD1: return "VK_NUMPAD1"; // Numeric keypad 1 key
-  case VK_NUMPAD2: return "VK_NUMPAD2"; // Numeric keypad 2 key
-  case VK_NUMPAD3: return "VK_NUMPAD3"; // Numeric keypad 3 key
-  case VK_NUMPAD4: return "VK_NUMPAD4"; // Numeric keypad 4 key
-  case VK_NUMPAD5: return "VK_NUMPAD5"; // Numeric keypad 5 key
-  case VK_NUMPAD6: return "VK_NUMPAD6"; // Numeric keypad 6 key
-  case VK_NUMPAD7: return "VK_NUMPAD7"; // Numeric keypad 7 key
-  case VK_NUMPAD8: return "VK_NUMPAD8"; // Numeric keypad 8 key
-  case VK_NUMPAD9: return "VK_NUMPAD9"; // Numeric keypad 9 key
-  case VK_MULTIPLY: return "VK_MULTIPLY"; // Multiply key
-  case VK_ADD: return "VK_ADD"; // Add key
-  case VK_SEPARATOR: return "VK_SEPARATOR"; // Separator key
-  case VK_SUBTRACT: return "VK_SUBTRACT"; // Subtract key
-  case VK_DECIMAL: return "VK_DECIMAL"; // Decimal key
-  case VK_DIVIDE: return "VK_DIVIDE"; // Divide key
-  case VK_F1: return "VK_F1"; // F1 key
-  case VK_F2: return "VK_F2"; // F2 key
-  case VK_F3: return "VK_F3"; // F3 key
-  case VK_F4: return "VK_F4"; // F4 key
-  case VK_F5: return "VK_F5"; // F5 key
-  case VK_F6: return "VK_F6"; // F6 key
-  case VK_F7: return "VK_F7"; // F7 key
-  case VK_F8: return "VK_F8"; // F8 key
-  case VK_F9: return "VK_F9"; // F9 key
-  case VK_F10: return "VK_F10"; // F10 key
-  case VK_F11: return "VK_F11"; // F11 key
-  case VK_F12: return "VK_F12"; // F12 key
-  case VK_F13: return "VK_F13"; // F13 key
-  case VK_F14: return "VK_F14"; // F14 key
-  case VK_F15: return "VK_F15"; // F15 key
-  case VK_F16: return "VK_F16"; // F16 key
-  case VK_F17: return "VK_F17"; // F17 key
-  case VK_F18: return "VK_F18"; // F18 key
-  case VK_F19: return "VK_F19"; // F19 key
-  case VK_F20: return "VK_F20"; // F20 key
-  case VK_F21: return "VK_F21"; // F21 key
-  case VK_F22: return "VK_F22"; // F22 key
-  case VK_F23: return "VK_F23"; // F23 key
-  case VK_F24: return "VK_F24"; // F24 key
-  case VK_NUMLOCK: return "VK_NUMLOCK"; // NUM LOCK key
-  case VK_SCROLL: return "VK_SCROLL"; // SCROLL LOCK key
-  case VK_LSHIFT: return "VK_LSHIFT"; // Left SHIFT key
-  case VK_RSHIFT: return "VK_RSHIFT"; // Right SHIFT key
-  case VK_LCONTROL: return "VK_LCONTROL"; // Left CONTROL key
-  case VK_RCONTROL: return "VK_RCONTROL"; // Right CONTROL key
-  case VK_LMENU: return "VK_LMENU"; // Left MENU key
-  case VK_RMENU: return "VK_RMENU"; // Right MENU key
-  case VK_BROWSER_BACK: return "VK_BROWSER_BACK"; // Browser Back key
-  case VK_BROWSER_FORWARD: return "VK_BROWSER_FORWARD"; // Browser Forward key
-  case VK_BROWSER_REFRESH: return "VK_BROWSER_REFRESH"; // Browser Refresh key
-  case VK_BROWSER_STOP: return "VK_BROWSER_STOP"; // Browser Stop key
-  case VK_BROWSER_SEARCH: return "VK_BROWSER_SEARCH"; // Browser Search key
-  case VK_BROWSER_FAVORITES: return "VK_BROWSER_FAVORITES"; // Browser Favorites key
-  case VK_BROWSER_HOME: return "VK_BROWSER_HOME"; // Browser Start and Home key
-  case VK_VOLUME_MUTE: return "VK_VOLUME_MUTE"; // Volume Mute key
-  case VK_VOLUME_DOWN: return "VK_VOLUME_DOWN"; // Volume Down key
-  case VK_VOLUME_UP: return "VK_VOLUME_UP"; // Volume Up key
-  case VK_MEDIA_NEXT_TRACK: return "VK_MEDIA_NEXT_TRACK"; // Next Track key
-  case VK_MEDIA_PREV_TRACK: return "VK_MEDIA_PREV_TRACK"; // Previous Track key
-  case VK_MEDIA_STOP: return "VK_MEDIA_STOP"; // Stop Media key
-  case VK_MEDIA_PLAY_PAUSE: return "VK_MEDIA_PLAY_PAUSE"; // Play/Pause Media key
-  case VK_LAUNCH_MAIL: return "VK_LAUNCH_MAIL"; // Start Mail key
-  case VK_LAUNCH_MEDIA_SELECT: return "VK_LAUNCH_MEDIA_SELECT"; // Select Media key
-  case VK_LAUNCH_APP1: return "VK_LAUNCH_APP1"; // Start Application 1 key
-  case VK_LAUNCH_APP2: return "VK_LAUNCH_APP2"; // Start Application 2 key
-  case VK_OEM_1: return "VK_OEM_1"; // Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the ';:' key
-  case VK_OEM_PLUS: return "VK_OEM_PLUS"; // For any country/region, the '+' key
-  case VK_OEM_COMMA: return "VK_OEM_COMMA"; // For any country/region, the ',' key
-  case VK_OEM_MINUS: return "VK_OEM_MINUS"; // For any country/region, the '-' key
-  case VK_OEM_PERIOD: return "VK_OEM_PERIOD"; // For any country/region, the '.' key
-  case VK_OEM_2: return "VK_OEM_2"; // Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '/?' key
-  case VK_OEM_3: return "VK_OEM_3"; // Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '`~' key
-  case 0xC1: return "VK_ABNT_C1"; // Brazilian (ABNT) Keyboard
-  case 0xC2: return "VK_ABNT_C2"; // Brazilian (ABNT) Keyboard
-  case VK_OEM_4: return "VK_OEM_4"; // Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '[{' key
-  case VK_OEM_5: return "VK_OEM_5"; // Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '\|' key
-  case VK_OEM_6: return "VK_OEM_6"; // Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the ']}' key
-  case VK_OEM_7: return "VK_OEM_7"; // Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the 'single-quote/double-quote' key
-  case VK_OEM_8: return "VK_OEM_8"; // Used for miscellaneous characters; it can vary by keyboard.
-  case VK_OEM_102: return "VK_OEM_102"; // Either the angle bracket key or the backslash key on the RT 102-key keyboard
-  case VK_PROCESSKEY: return "VK_PROCESSKEY"; // IME PROCESS key
-  case VK_PACKET: return "VK_PACKET"; // Used to pass Unicode characters as if they were keystrokes. The VK_PACKET key is the low word of a 32-bit Virtual Key value used for non-keyboard input methods. For more information, see Remark in KEYBDINPUT, SendInput, WM_KEYDOWN, and WM_KEYUP // 0xE8
-  case VK_ATTN: return "VK_ATTN"; // Attn key
-  case VK_CRSEL: return "VK_CRSEL"; // CrSel key
-  case VK_EXSEL: return "VK_EXSEL"; // ExSel key
-  case VK_EREOF: return "VK_EREOF"; // Erase EOF key
-  case VK_PLAY: return "VK_PLAY"; // Play key
-  case VK_ZOOM: return "VK_ZOOM"; // Zoom key
-  case VK_NONAME: return "VK_NONAME"; // Reserved
-  case VK_PA1: return "VK_PA1"; // PA1 key
-  case VK_OEM_CLEAR: return "VK_OEM_CLEAR"; // Clear key
-  }
-
-  return "VK_UNKNOWN";
-}
-
-class UseForegroundKeyboardLayoutScope {
- public:
-  UseForegroundKeyboardLayoutScope() : original_layout_(GetKeyboardLayout(0)) {
-    if (auto window = GetForegroundWindow()) {
-      const auto thread_id = GetWindowThreadProcessId(window, nullptr);
-      ActivateKeyboardLayout(GetKeyboardLayout(thread_id), 0);
-    }
-  }
-
-  ~UseForegroundKeyboardLayoutScope() {
-    ActivateKeyboardLayout(original_layout_, 0);
-  }
-
-  UseForegroundKeyboardLayoutScope(const UseForegroundKeyboardLayoutScope&) = delete;
-  UseForegroundKeyboardLayoutScope& operator=(const UseForegroundKeyboardLayoutScope&) = delete;
-
- private:
-  HKL original_layout_ = nullptr;
-};
-
-napi_value GetKeyMapImpl(napi_env env, napi_callback_info info) {
-  UseForegroundKeyboardLayoutScope use_foreground_keyboard_layout;
-
-  napi_value result;
-  NAPI_CALL(env, napi_create_object(env, &result));
-
-  UINT clear_key_code = VK_DECIMAL;
-  UINT clear_scan_code = ::MapVirtualKeyW(clear_key_code, MAPVK_VK_TO_VSC);
-  BYTE keyboard_state[256];
-
-  size_t cnt = sizeof(usb_keycode_map) / sizeof(usb_keycode_map[0]);
-  for (size_t i = 0; i < cnt; ++i) {
-    const char *code = usb_keycode_map[i].code;
-    int native_scancode = usb_keycode_map[i].native_keycode;
-
-    if (!code || native_scancode <= 0) {
-      continue;
-    }
-
-    int native_keycode = ::MapVirtualKeyW(native_scancode, MAPVK_VSC_TO_VK);
-
-    napi_value entry;
-    NAPI_CALL(env, napi_create_object(env, &entry));
-
-    NAPI_CALL(env, napi_set_named_property_string_utf8(env, entry, "vkey", VKeyToStr(native_keycode)));
-
-    std::string value = GetStrFromKeyPress(native_keycode, 0, keyboard_state, clear_key_code, clear_scan_code);
-    NAPI_CALL(env, napi_set_named_property_string_utf8(env, entry, "value", value.c_str()));
-
-    std::string with_shift = GetStrFromKeyPress(native_keycode, kShiftKeyModifierMask, keyboard_state, clear_key_code, clear_scan_code);
-    NAPI_CALL(env, napi_set_named_property_string_utf8(env, entry, "withShift", with_shift.c_str()));
-
-    std::string with_alt_gr = GetStrFromKeyPress(native_keycode, kControlKeyModifierMask | kAltKeyModifierMask, keyboard_state, clear_key_code, clear_scan_code);
-    NAPI_CALL(env, napi_set_named_property_string_utf8(env, entry, "withAltGr", with_alt_gr.c_str()));
-
-    std::string with_shift_alt_gr = GetStrFromKeyPress(native_keycode, kShiftKeyModifierMask | kControlKeyModifierMask | kAltKeyModifierMask, keyboard_state, clear_key_code, clear_scan_code);
-    NAPI_CALL(env, napi_set_named_property_string_utf8(env, entry, "withShiftAltGr", with_shift_alt_gr.c_str()));
-
-    NAPI_CALL(env, napi_set_named_property(env, result, code, entry));
-  }
-  return result;
-}
-
-std::string GetStringRegKey(std::string path, std::string name) {
-  std::string result = "";
-
-  HKEY hKey;
-  if (ERROR_SUCCESS != RegOpenKeyEx(HKEY_LOCAL_MACHINE, path.c_str(), 0, KEY_READ, &hKey)) {
-    return result;
-  }
-
-  char szBuffer[512];
-  DWORD dwBufferSize = sizeof(szBuffer);
-
-  if (ERROR_SUCCESS == RegQueryValueEx(hKey, name.c_str(), 0, NULL, (LPBYTE)szBuffer, &dwBufferSize)) {
-    result = szBuffer;
-  }
-
-  RegCloseKey(hKey);
-
-  return result;
-}
-
-napi_value GetCurrentKeyboardLayoutImpl(napi_env env, napi_callback_info info) {
-  UseForegroundKeyboardLayoutScope use_foreground_keyboard_layout;
-
-  char chr_layout_name[KL_NAMELENGTH];
-  if (!GetKeyboardLayoutName(chr_layout_name)) {
-    return napi_fetch_null(env);
-  }
-  std::string layout_name = chr_layout_name;
-
-  // https://docs.microsoft.com/windows-hardware/manufacture/desktop/windows-language-pack-default-values
-  std::string layout_id = GetStringRegKey("System\\CurrentControlSet\\Control\\Keyboard Layouts\\" + layout_name, "Layout Id");
-  std::string layout_text = GetStringRegKey("System\\CurrentControlSet\\Control\\Keyboard Layouts\\" + layout_name, "Layout Text");
-
-  napi_value result;
-  NAPI_CALL(env, napi_create_object(env, &result));
-  NAPI_CALL(env, napi_set_named_property_string_utf8(env, result, "name", layout_name.c_str()));
-  NAPI_CALL(env, napi_set_named_property_string_utf8(env, result, "id", layout_id.c_str()));
-  NAPI_CALL(env, napi_set_named_property_string_utf8(env, result, "text", layout_text.c_str()));
-  return result;
-}
-
-class TfInputListener : public ITfInputProcessorProfileActivationSink {
-private:
-  NotificationCallbackData *data_;
-  ULONG ref_count_;
-  ITfSource *source_;
-  DWORD cookie_;
-
-public:
-  explicit TfInputListener(NotificationCallbackData *data) {
-    data_ = data;
-    ref_count_ = 1;
-    source_ = NULL;
-    cookie_ = TF_INVALID_COOKIE;
-  }
-
-  void StartListening() {
-    HRESULT hr;
-
-    ITfThreadMgr* thread_mgr;
-    hr = CoCreateInstance(CLSID_TF_ThreadMgr, NULL, CLSCTX_INPROC_SERVER, IID_ITfThreadMgr, (void**)&thread_mgr);
-    if (!SUCCEEDED(hr)) {
-      printf("native-keymap: Could not create ITfThreadMgr.\n");
-      return;
-    }
-
-    hr = thread_mgr->QueryInterface(IID_ITfSource, (LPVOID*)&source_);
-    if (!SUCCEEDED(hr)) {
-      printf("native-keymap: Could not obtain ITfSource.\n");
-      thread_mgr->Release();
-      return;
-    }
-
-    hr = source_->AdviseSink(IID_ITfInputProcessorProfileActivationSink,
-      static_cast<ITfInputProcessorProfileActivationSink*>(this),
-      &cookie_);
-
-    if (!SUCCEEDED(hr)) {
-      printf("native-keymap: Could not register ITfInputProcessorProfileActivationSink.\n");
-    }
-    thread_mgr->Release();
-  }
-
-  void StopListening() {
-    if (source_ != NULL) {
-      if (cookie_ != TF_INVALID_COOKIE) {
-        source_->UnadviseSink(cookie_);
-        cookie_ = TF_INVALID_COOKIE;
-      }
-      source_->Release();
-      source_ = NULL;
-    }
-  }
-
-  virtual ~TfInputListener() {
-    this->StopListening();
-  }
-
-  virtual HRESULT STDMETHODCALLTYPE OnActivated(
-    /* [in] */ DWORD dwProfileType,
-    /* [in] */ LANGID langid,
-    /* [in] */ __RPC__in REFCLSID clsid,
-    /* [in] */ __RPC__in REFGUID catid,
-    /* [in] */ __RPC__in REFGUID guidProfile,
-    /* [in] */ HKL hkl,
-    /* [in] */ DWORD dwFlags) override {
-
-    InvokeNotificationCallback(data_);
-    return S_OK;
-  }
-
-  // IUnknown methods
-  ULONG STDMETHODCALLTYPE AddRef() override {
-    return InterlockedIncrement(&ref_count_);
-  }
-
-  ULONG STDMETHODCALLTYPE Release() override {
-    ULONG newCount = InterlockedDecrement(&ref_count_);
-    if (0 == newCount) {
-      delete this;
-    }
-    return newCount;
-  }
-
-  virtual HRESULT STDMETHODCALLTYPE QueryInterface(IID const& riid, void** ppvObject) override {
-    if (__uuidof(IUnknown) == riid || __uuidof(ITfInputProcessorProfileActivationSink) == riid) {
-      *ppvObject = this;
-      this->AddRef();
-      return S_OK;
-    }
-    *ppvObject = nullptr;
-    return E_FAIL;
-  }
-};
-
-void RegisterKeyboardLayoutChangeListenerImpl(NotificationCallbackData *data) {
-  TfInputListener* listener = new TfInputListener(data);
-  listener->StartListening();
-  data->listener = listener;
-}
-
-void DisposeKeyboardLayoutChangeListenerImpl(NotificationCallbackData *data) {
-  TfInputListener* listener = static_cast<TfInputListener*>(data->listener);
-  listener->Release();
-}
-
-napi_value IsISOKeyboardImpl(napi_env env, napi_callback_info info) {
-  return napi_fetch_undefined(env);
-}
-
-}  // namespace vscode_keyboard
diff --git a/node_modules/native-keymap/src/keyboard_x.cc b/node_modules/native-keymap/src/keyboard_x.cc
deleted file mode 100644
index d06833b..0000000
--- a/node_modules/native-keymap/src/keyboard_x.cc
+++ /dev/null
@@ -1,407 +0,0 @@
-/*---------------------------------------------------------------------------------------------
- *  Copyright (c) Microsoft Corporation. All rights reserved.
- *  Licensed under the MIT License. See License.txt in the project root for license information.
- *--------------------------------------------------------------------------------------------*/
-
-#include "keymapping.h"
-#include "string_conversion.h"
-#include "common.h"
-
-#include <X11/XKBlib.h>
-#include <X11/Xlib.h>
-#include <X11/Xutil.h>
-#include <X11/extensions/XKBrules.h>
-
-#include "../deps/chromium/macros.h"
-#include "../deps/chromium/x/keysym_to_unicode.h"
-
-typedef struct _XDisplay XDisplay;
-
-namespace {
-
-class KeyModifierMaskToXModifierMask {
- public:
-  static KeyModifierMaskToXModifierMask& GetInstance() {
-    static KeyModifierMaskToXModifierMask instance;
-    return instance;
-  }
-
-  void Initialize(Display* display) {
-    alt_modifier_ = 0;
-    meta_modifier_ = 0;
-    num_lock_modifier_ = 0;
-    mode_switch_modifier_ = 0;
-    level3_modifier_ = 0;  // AltGr is often mapped to the level3 modifier
-    level5_modifier_ = 0;  // AltGr is mapped to the level5 modifier in the Neo layout family
-    effective_group_index_ = 0;
-
-    if (!display) {
-      return;
-    }
-
-    // See https://www.x.org/releases/X11R7.6/doc/libX11/specs/XKB/xkblib.html#determining_keyboard_state
-    XkbStateRec xkb_state;
-    XkbGetState(display, XkbUseCoreKbd, &xkb_state);
-    effective_group_index_ = xkb_state.group;
-
-    XModifierKeymap* mod_map = XGetModifierMapping(display);
-    int max_mod_keys = mod_map->max_keypermod;
-    for (int mod_index = 0; mod_index <= 8; ++mod_index) {
-      for (int key_index = 0; key_index < max_mod_keys; ++key_index) {
-        int key = mod_map->modifiermap[mod_index * max_mod_keys + key_index];
-        if (!key) {
-          continue;
-        }
-
-        int keysym = XkbKeycodeToKeysym(display, key, 0, 0);
-        if (!keysym) {
-          continue;
-        }
-
-        if (keysym == XK_Alt_L || keysym == XK_Alt_R) {
-          alt_modifier_ = 1 << mod_index;
-        }
-        if (keysym == XK_Mode_switch) {
-          mode_switch_modifier_ = 1 << mod_index;
-        }
-        if (keysym == XK_Meta_L || keysym == XK_Super_L || keysym == XK_Meta_R || keysym == XK_Super_R) {
-          meta_modifier_ = 1 << mod_index;
-        }
-        if (keysym == XK_Num_Lock) {
-          num_lock_modifier_ = 1 << mod_index;
-        }
-        if (keysym == XK_ISO_Level3_Shift) {
-          level3_modifier_ = 1 << mod_index;
-        }
-        if (keysym == XK_ISO_Level5_Shift) {
-          level5_modifier_ = 1 << mod_index;
-        }
-      }
-    }
-
-    XFreeModifiermap(mod_map);
-  }
-
-  int XStateFromKeyMod(int keyMod) {
-    int x_modifier = 0;
-
-    // Ctrl + Alt => AltGr
-    if (keyMod & kControlKeyModifierMask && keyMod & kAltKeyModifierMask) {
-      x_modifier |= mode_switch_modifier_;//alt_r_modifier;
-    } else if (keyMod & kControlKeyModifierMask) {
-      x_modifier |= ControlMask;
-    } else if (keyMod & kAltKeyModifierMask) {
-      x_modifier |= alt_modifier_;
-    }
-
-    if (keyMod & kShiftKeyModifierMask) {
-      x_modifier |= ShiftMask;
-    }
-
-    if (keyMod & kMetaKeyModifierMask) {
-      x_modifier |= meta_modifier_;
-    }
-
-    if (keyMod & kNumLockKeyModifierMask) {
-      x_modifier |= num_lock_modifier_;
-    }
-
-    if (keyMod & kLevel3KeyModifierMask) {
-      x_modifier |= level3_modifier_;
-    }
-
-    if (keyMod & kLevel5KeyModifierMask) {
-      x_modifier |= level5_modifier_;
-    }
-
-    // See https://www.x.org/releases/X11R7.6/doc/libX11/specs/XKB/xkblib.html#xkb_state_to_core_protocol_state_transformation
-    x_modifier |= (effective_group_index_ << 13);
-
-    return x_modifier;
-  }
-
- private:
-  KeyModifierMaskToXModifierMask() {
-    Initialize(NULL);
-  }
-
-  int alt_modifier_;
-  int meta_modifier_;
-  int num_lock_modifier_;
-  int mode_switch_modifier_;
-  int level3_modifier_;
-  int level5_modifier_;
-  int effective_group_index_;
-
-  KeyModifierMaskToXModifierMask(const KeyModifierMaskToXModifierMask&) = delete;
-  KeyModifierMaskToXModifierMask& operator=(const KeyModifierMaskToXModifierMask&) = delete;
-};
-
-std::string GetStrFromXEvent(const XEvent* xev) {
-  const XKeyEvent* xkey = &xev->xkey;
-  KeySym keysym = XK_VoidSymbol;
-  XLookupString(const_cast<XKeyEvent*>(xkey), NULL, 0, &keysym, NULL);
-  uint16_t character = ui::GetUnicodeCharacterFromXKeySym(keysym);
-
-  if (!character)
-    return std::string();
-
-  wchar_t value = character;
-
-  return vscode_keyboard::UTF16toUTF8(&value, 1);
-}
-
-} // namespace
-
-
-namespace vscode_keyboard {
-
-#define DOM_CODE(usb, evdev, xkb, win, mac, code, id) {usb, xkb, code}
-#define DOM_CODE_DECLARATION const KeycodeMapEntry usb_keycode_map[] =
-#include "../deps/chromium/dom_code_data.inc"
-#undef DOM_CODE
-#undef DOM_CODE_DECLARATION
-
-napi_value GetKeyMapImpl(napi_env env, napi_callback_info info) {
-
-  napi_value result;
-  NAPI_CALL(env, napi_create_object(env, &result));
-
-  Display *display;
-  if (!(display = XOpenDisplay(""))) {
-    return result;
-  }
-
-  XEvent event;
-  memset(&event, 0, sizeof(XEvent));
-  XKeyEvent* key_event = &event.xkey;
-  key_event->display = display;
-  key_event->type = KeyPress;
-
-  KeyModifierMaskToXModifierMask *mask_provider = &KeyModifierMaskToXModifierMask::GetInstance();
-  mask_provider->Initialize(display);
-
-  size_t cnt = sizeof(usb_keycode_map) / sizeof(usb_keycode_map[0]);
-
-  for (size_t i = 0; i < cnt; ++i) {
-    const char *code = usb_keycode_map[i].code;
-    int native_keycode = usb_keycode_map[i].native_keycode;
-
-    if (!code || native_keycode <= 0) {
-      continue;
-    }
-
-    napi_value entry;
-    NAPI_CALL(env, napi_create_object(env, &entry));
-
-    key_event->keycode = native_keycode;
-    {
-      key_event->state = mask_provider->XStateFromKeyMod(0);
-      std::string value = GetStrFromXEvent(&event);
-      NAPI_CALL(env, napi_set_named_property_string_utf8(env, entry, "value", value.c_str()));
-    }
-
-    {
-      key_event->state = mask_provider->XStateFromKeyMod(kShiftKeyModifierMask);
-      std::string with_shift = GetStrFromXEvent(&event);
-      NAPI_CALL(env, napi_set_named_property_string_utf8(env, entry, "withShift", with_shift.c_str()));
-    }
-
-    {
-      key_event->state = mask_provider->XStateFromKeyMod(kLevel3KeyModifierMask);
-      std::string with_alt_gr = GetStrFromXEvent(&event);
-      NAPI_CALL(env, napi_set_named_property_string_utf8(env, entry, "withAltGr", with_alt_gr.c_str()));
-    }
-
-    {
-      key_event->state = mask_provider->XStateFromKeyMod(kShiftKeyModifierMask | kLevel3KeyModifierMask);
-      std::string with_shift_alt_gr = GetStrFromXEvent(&event);
-      NAPI_CALL(env, napi_set_named_property_string_utf8(env, entry, "withShiftAltGr", with_shift_alt_gr.c_str()));
-    }
-
-    {
-      // level 5 is important for the Neo layout family
-      key_event->state = mask_provider->XStateFromKeyMod(kLevel5KeyModifierMask);
-      std::string with_level5 = GetStrFromXEvent(&event);
-      NAPI_CALL(env, napi_set_named_property_string_utf8(env, entry, "withLevel5", with_level5.c_str()));
-    }
-
-    {
-      // level3 + level5 is Level 6 in terms of the Neo layout family. (Shift + level5 has no special meaning.)
-      key_event->state = mask_provider->XStateFromKeyMod(kLevel3KeyModifierMask | kLevel5KeyModifierMask);
-      std::string with_level3_level5 = GetStrFromXEvent(&event);
-      NAPI_CALL(env, napi_set_named_property_string_utf8(env, entry, "withLevel3Level5", with_level3_level5.c_str()));
-    }
-
-    NAPI_CALL(env, napi_set_named_property(env, result, code, entry));
-  }
-
-  XFlush(display);
-  XCloseDisplay(display);
-
-  return result;
-}
-
-napi_value GetCurrentKeyboardLayoutImpl(napi_env env, napi_callback_info info) {
-
-  napi_value result;
-  NAPI_CALL(env, napi_get_null(env, &result));
-
-  Display *display;
-  if (!(display = XOpenDisplay(""))) {
-    return result;
-  }
-
-  // See https://www.x.org/releases/X11R7.6/doc/libX11/specs/XKB/xkblib.html#determining_keyboard_state
-  XkbStateRec xkb_state;
-  XkbGetState(display, XkbUseCoreKbd, &xkb_state);
-  int effective_group_index = xkb_state.group;
-
-  XkbRF_VarDefsRec vdr;
-  char *tmp = NULL;
-  int res = XkbRF_GetNamesProp(display, &tmp, &vdr);
-  if (res) {
-    NAPI_CALL(env, napi_create_object(env, &result));
-
-    NAPI_CALL(env, napi_set_named_property_string_utf8(env, result, "model", vdr.model ? vdr.model : ""));
-    NAPI_CALL(env, napi_set_named_property_int32(env, result, "group", effective_group_index));
-    NAPI_CALL(env, napi_set_named_property_string_utf8(env, result, "layout", vdr.layout ? vdr.layout : ""));
-    NAPI_CALL(env, napi_set_named_property_string_utf8(env, result, "variant", vdr.variant ? vdr.variant : ""));
-    NAPI_CALL(env, napi_set_named_property_string_utf8(env, result, "options", vdr.options ? vdr.options : ""));
-    NAPI_CALL(env, napi_set_named_property_string_utf8(env, result, "rules", tmp ? tmp : ""));
-  }
-
-  XFlush(display);
-  XCloseDisplay(display);
-  return result;
-}
-
-typedef struct {
-  int effective_group_index;
-  std::string layout;
-  std::string variant;
-} KbState;
-
-bool KbStatesEqual(KbState *a, KbState *b) {
-  return (
-    a->effective_group_index == b->effective_group_index
-    && a->layout == b->layout
-    && a->variant == b->variant
-  );
-}
-
-void ReadKbState(Display *display, KbState *dst) {
-  // See https://www.x.org/releases/X11R7.6/doc/libX11/specs/XKB/xkblib.html#determining_keyboard_state
-  // Get effective group index
-  XkbStateRec xkb_state;
-  XkbGetState(display, XkbUseCoreKbd, &xkb_state);
-  dst->effective_group_index = xkb_state.group;
-
-  XkbRF_VarDefsRec vdr;
-  char *tmp = NULL;
-  int res = XkbRF_GetNamesProp(display, &tmp, &vdr);
-  if (res) {
-    dst->layout = (vdr.layout ? vdr.layout : "");
-    dst->variant = (vdr.variant ? vdr.variant : "");
-  } else {
-    dst->layout = "";
-    dst->variant = "";
-  }
-}
-
-static void FlushAndCloseDisplay(void *arg) {
-  Display *display = static_cast<Display*>(arg);
-  XFlush(display);
-  XCloseDisplay(display);
-}
-
-void* ListenToXEvents(void *arg) {
-  NotificationCallbackData *data = static_cast<NotificationCallbackData*>(arg);
-
-  Display *display;
-  if (!(display = XOpenDisplay(""))) {
-    return NULL;
-  }
-
-  pthread_cleanup_push(FlushAndCloseDisplay, display);
-
-  int xkblib_major = XkbMajorVersion;
-  int xkblib_minor = XkbMinorVersion;
-  if (!XkbLibraryVersion(&xkblib_major, &xkblib_minor)) {
-    return NULL;
-  }
-
-  int opcode = 0;
-  int xkb_base_event_code = 0;
-  int xkb_base_error_code = 0;
-  if (!XkbQueryExtension(display, &opcode, &xkb_base_event_code, &xkb_base_error_code, &xkblib_major, &xkblib_minor)) {
-    return NULL;
-  }
-
-  // See https://www.x.org/releases/X11R7.6/doc/libX11/specs/XKB/xkblib.html#xkb_event_types
-  // Listen only to the `XkbStateNotify` event
-  XkbSelectEvents(display, XkbUseCoreKbd, XkbAllEventsMask, XkbStateNotifyMask);
-
-  KbState last_state;
-  ReadKbState(display, &last_state);
-
-  XkbEvent event;
-  KbState current_state;
-  fd_set in_fds;
-  struct timeval tv;
-  int x11_fd = ConnectionNumber(display);
-
-  while (true) {
-    // See https://stackoverflow.com/a/8592969 which explains
-    // the technique of waiting for an XEvent with a timeout
-
-    // Create a File Description Set containing x11_fd
-    FD_ZERO(&in_fds);
-    FD_SET(x11_fd, &in_fds);
-
-    // Set the timer to 1s.
-    tv.tv_usec = 0;
-    tv.tv_sec = 1;
-
-    // Wait for X Event or the timer
-    select(x11_fd + 1, &in_fds, NULL, NULL, &tv);
-
-    // Handle pending XEvents
-    while (XPending(display)) {
-
-      XNextEvent(display, &event.core);
-
-      if (event.type == xkb_base_event_code && event.any.xkb_type == XkbStateNotify) {
-        ReadKbState(display, &current_state);
-        // printf("current state: %d | %s | %s\n", current_state.effective_group_index, current_state.layout.c_str(), current_state.variant.c_str());
-        if (!KbStatesEqual(&last_state, &current_state)) {
-          last_state.effective_group_index = current_state.effective_group_index;
-          last_state.layout = current_state.layout;
-          last_state.variant = current_state.variant;
-
-          InvokeNotificationCallback(data);
-        }
-      }
-    }
-  }
-
-  pthread_cleanup_pop(1);
-
-  return NULL;
-}
-
-void RegisterKeyboardLayoutChangeListenerImpl(NotificationCallbackData *data) {
-  pthread_create(&data->tid, NULL, &ListenToXEvents, data);
-}
-
-void DisposeKeyboardLayoutChangeListenerImpl(NotificationCallbackData *data) {
-  pthread_cancel(data->tid);
-  void *res;
-  pthread_join(data->tid, &res);
-}
-
-napi_value IsISOKeyboardImpl(napi_env env, napi_callback_info info) {
-  return napi_fetch_undefined(env);
-}
-
-} // namespace vscode_keyboard
diff --git a/node_modules/native-keymap/src/keymapping.cc b/node_modules/native-keymap/src/keymapping.cc
deleted file mode 100644
index 765b708..0000000
--- a/node_modules/native-keymap/src/keymapping.cc
+++ /dev/null
@@ -1,147 +0,0 @@
-/*---------------------------------------------------------------------------------------------
- *  Copyright (c) Microsoft Corporation. All rights reserved.
- *  Licensed under the MIT License. See License.txt in the project root for license information.
- *--------------------------------------------------------------------------------------------*/
-
-#define NODE_API_EXPERIMENTAL_NOGC_ENV_OPT_OUT
-#include <node.h>
-#include <map>
-
-#include "keymapping.h"
-#include "common.h"
-
-namespace vscode_keyboard {
-
-napi_status napi_set_named_property_string_utf8(napi_env env, napi_value object, const char *utf8_name, const char *value) {
-  napi_value _value;
-  NAPI_CALL_RETURN_STATUS(env, napi_create_string_utf8(env, value, NAPI_AUTO_LENGTH, &_value));
-  NAPI_CALL_RETURN_STATUS(env, napi_set_named_property(env, object, utf8_name, _value));
-  return napi_ok;
-}
-
-napi_status napi_set_named_property_int32(napi_env env, napi_value object, const char *utf8_name, int value) {
-  napi_value _value;
-  NAPI_CALL_RETURN_STATUS(env, napi_create_int32(env, value, &_value));
-  NAPI_CALL_RETURN_STATUS(env, napi_set_named_property(env, object, utf8_name, _value));
-  return napi_ok;
-}
-
-napi_value napi_fetch_null(napi_env env) {
-  napi_value result;
-  NAPI_CALL(env, napi_get_null(env, &result));
-  return result;
-}
-
-napi_value napi_fetch_undefined(napi_env env) {
-  napi_value result;
-  NAPI_CALL(env, napi_get_undefined(env, &result));
-  return result;
-}
-
-napi_value napi_fetch_boolean(napi_env env, bool value) {
-  napi_value result;
-  NAPI_CALL(env, napi_get_boolean(env, value, &result));
-  return result;
-}
-
-void InvokeNotificationCallback(NotificationCallbackData *data) {
-  if (data->tsfn == NULL) {
-    // This indicates we are in the shutdown phase and the thread safe function has been finalized
-    return;
-  }
-
-  // No need to call napi_acquire_threadsafe_function because
-  // the refcount is set to 1 in the main thread.
-  napi_call_threadsafe_function(data->tsfn, NULL, napi_tsfn_blocking);
-}
-
-static void NotifyJS(napi_env env, napi_value func, void* context, void* data) {
-  // env may be NULL if nodejs is shutting down
-  if (env != NULL) {
-    napi_value global;
-    NAPI_CALL_RETURN_VOID(env, napi_get_global(env, &global));
-
-    std::vector<napi_value> argv;
-    NAPI_CALL_RETURN_VOID(env, napi_call_function(env, global, func, argv.size(), argv.data(), NULL));
-  }
-}
-
-static void FinalizeThreadsafeFunction(napi_env env, void* raw_data, void* hint) {
-  NotificationCallbackData *data;
-  napi_get_instance_data(env, (void**)&data);
-  data->tsfn = NULL;
-}
-
-static void EnvCleanupHook(void *raw_data) {
-  NotificationCallbackData* data = static_cast<NotificationCallbackData*>(raw_data);
-  DisposeKeyboardLayoutChangeListenerImpl(data);
-}
-
-napi_value OnDidChangeKeyboardLayoutImpl(napi_env env, napi_callback_info info) {
-  size_t argc = 2;
-  napi_value args[2];
-  NotificationCallbackData *data;
-  NAPI_CALL(env, napi_get_instance_data(env, (void**)&data));
-  NAPI_CALL(env, napi_get_cb_info(env, info, &argc, args, NULL, NULL));
-
-  NAPI_ASSERT(env, argc == 1, "Wrong number of arguments. Expects a single argument.");
-
-  napi_valuetype valuetype0;
-  NAPI_CALL(env, napi_typeof(env, args[0], &valuetype0));
-  NAPI_ASSERT(env, valuetype0 == napi_function, "Wrong type of arguments. Expects a function as first argument.");
-
-  napi_value func = args[0];
-
-  napi_value resource_name;
-  NAPI_CALL(env, napi_create_string_utf8(env, "onDidChangeKeyboardLayoutCallback", NAPI_AUTO_LENGTH, &resource_name));
-
-  // Convert the callback retrieved from JavaScript into a thread-safe function
-  napi_threadsafe_function tsfn;
-  NAPI_CALL(env, napi_create_threadsafe_function(env, func, NULL, resource_name, 0, 1, NULL,
-                                                 FinalizeThreadsafeFunction, NULL, NotifyJS,
-                                                 &tsfn));
-  data->tsfn = tsfn;
-
-  RegisterKeyboardLayoutChangeListenerImpl(data);
-
-  napi_add_env_cleanup_hook(env, EnvCleanupHook, data);
-
-  return napi_fetch_undefined(env);
-}
-
-void DeleteInstanceData(napi_env env, void *raw_data, void *hint) {
-  NotificationCallbackData *data = static_cast<NotificationCallbackData*>(raw_data);
-  delete data;
-}
-
-napi_value Init(napi_env env, napi_value exports) {
-  NotificationCallbackData *data = new NotificationCallbackData();
-  NAPI_CALL(env, napi_set_instance_data(env, data, DeleteInstanceData, NULL));
-
-  {
-    napi_value get_key_map_fn;
-    NAPI_CALL(env, napi_create_function(env, NULL, 0, GetKeyMapImpl, NULL, &get_key_map_fn));
-    NAPI_CALL(env, napi_set_named_property(env, exports, "getKeyMap", get_key_map_fn));
-  }
-  {
-    napi_value get_current_keyboard_layout_fn;
-    NAPI_CALL(env, napi_create_function(env, NULL, 0, GetCurrentKeyboardLayoutImpl, NULL, &get_current_keyboard_layout_fn));
-    NAPI_CALL(env, napi_set_named_property(env, exports, "getCurrentKeyboardLayout", get_current_keyboard_layout_fn));
-  }
-  {
-    napi_value on_did_change_keyboard_layout_fn;
-    NAPI_CALL(env, napi_create_function(env, NULL, 0, OnDidChangeKeyboardLayoutImpl, NULL, &on_did_change_keyboard_layout_fn));
-    NAPI_CALL(env, napi_set_named_property(env, exports, "onDidChangeKeyboardLayout", on_did_change_keyboard_layout_fn));
-  }
-  {
-    napi_value is_iso_keyboard_fn;
-    NAPI_CALL(env, napi_create_function(env, NULL, 0, IsISOKeyboardImpl, NULL, &is_iso_keyboard_fn));
-    NAPI_CALL(env, napi_set_named_property(env, exports, "isISOKeyboard", is_iso_keyboard_fn));
-  }
-
-  return exports;
-}
-
-NAPI_MODULE(NODE_GYP_MODULE_NAME, Init)
-
-} // namespace vscode_keyboard
diff --git a/node_modules/native-keymap/src/keymapping.h b/node_modules/native-keymap/src/keymapping.h
deleted file mode 100644
index 6e88b11..0000000
--- a/node_modules/native-keymap/src/keymapping.h
+++ /dev/null
@@ -1,65 +0,0 @@
-/*---------------------------------------------------------------------------------------------
- *  Copyright (c) Microsoft Corporation. All rights reserved.
- *  Licensed under the MIT License. See License.txt in the project root for license information.
- *--------------------------------------------------------------------------------------------*/
-
-#ifndef KEYMAPPING_H_
-#define KEYMAPPING_H_
-
-#include <node_api.h>
-
-#include <string>
-#include <vector>
-#include "../deps/chromium/keyboard_codes.h"
-
-#if defined(__unix__)
-#include <pthread.h>
-#endif
-
-namespace vscode_keyboard {
-
-// This structure is used to define the keycode mapping table.
-// It is defined here because the unittests need access to it.
-typedef struct {
-  // USB keycode:
-  //  Upper 16-bits: USB Usage Page.
-  //  Lower 16-bits: USB Usage Id: Assigned ID within this usage page.
-  uint32_t usb_keycode;
-
-  // Contains one of the following:
-  //  On Linux: XKB scancode
-  //  On Windows: Windows OEM scancode
-  //  On Mac: Mac keycode
-  int native_keycode;
-
-  // The UIEvents (aka: DOM4Events) |code| value as defined in:
-  // http://www.w3.org/TR/DOM-Level-3-Events-code/
-  const char* code;
-} KeycodeMapEntry;
-
-typedef struct {
-#if defined(_WIN32)
-  void* listener;
-#endif
-#if defined(__unix__)
-  pthread_t tid;
-#endif
-  volatile napi_threadsafe_function tsfn;
-} NotificationCallbackData;
-
-napi_value GetKeyMapImpl(napi_env env, napi_callback_info info);
-napi_value GetCurrentKeyboardLayoutImpl(napi_env env, napi_callback_info info);
-void RegisterKeyboardLayoutChangeListenerImpl(NotificationCallbackData *data);
-void DisposeKeyboardLayoutChangeListenerImpl(NotificationCallbackData *data);
-napi_value IsISOKeyboardImpl(napi_env env, napi_callback_info info);
-
-void InvokeNotificationCallback(NotificationCallbackData *data);
-napi_status napi_set_named_property_string_utf8(napi_env env, napi_value object, const char *utf8_name, const char *value);
-napi_status napi_set_named_property_int32(napi_env env, napi_value object, const char *utf8_name, int value);
-napi_value napi_fetch_null(napi_env env);
-napi_value napi_fetch_undefined(napi_env env);
-napi_value napi_fetch_boolean(napi_env env, bool value);
-
-}  // namespace vscode_keyboard
-
-#endif  // KEYMAPPING_H_
diff --git a/node_modules/native-keymap/src/string_conversion.cc b/node_modules/native-keymap/src/string_conversion.cc
deleted file mode 100644
index 290318c..0000000
--- a/node_modules/native-keymap/src/string_conversion.cc
+++ /dev/null
@@ -1,67 +0,0 @@
-/*---------------------------------------------------------------------------------------------
- *  Copyright (c) Microsoft Corporation. All rights reserved.
- *  Licensed under the MIT License. See License.txt in the project root for license information.
- *--------------------------------------------------------------------------------------------*/
-
-#include "string_conversion.h"
-
-namespace vscode_keyboard {
-
-wchar_t conversion_buffer[10];
-
-std::string UTF16toUTF8(const wchar_t * in, int length) {
-  if (length < 10) {
-    for (int i = 0; i < length; ++i) {
-      conversion_buffer[i] = in[i];
-    }
-    conversion_buffer[length] = 0;
-    return UTF16to8(conversion_buffer);
-  }
-
-  wchar_t *t = new wchar_t[length + 1];
-  for (int i = 0; i < length; ++i) {
-    t[i] = in[i];
-  }
-  t[length] = 0;
-  std::string result = UTF16to8(t);
-  delete []t;
-
-  return result;
-}
-
-// http://stackoverflow.com/a/148766
-std::string UTF16to8(const wchar_t * in) {
-  std::string out;
-  unsigned int codepoint = 0;
-  for (;  *in != 0;  ++in) {
-    if (*in >= 0xd800 && *in <= 0xdbff) {
-      codepoint = ((*in - 0xd800) << 10) + 0x10000;
-    } else {
-      if (*in >= 0xdc00 && *in <= 0xdfff) {
-        codepoint |= *in - 0xdc00;
-      } else {
-        codepoint = *in;
-      }
-
-      if (codepoint <= 0x7f) {
-        out.append(1, static_cast<char>(codepoint));
-      } else if (codepoint <= 0x7ff) {
-        out.append(1, static_cast<char>(0xc0 | ((codepoint >> 6) & 0x1f)));
-        out.append(1, static_cast<char>(0x80 | (codepoint & 0x3f)));
-      } else if (codepoint <= 0xffff) {
-        out.append(1, static_cast<char>(0xe0 | ((codepoint >> 12) & 0x0f)));
-        out.append(1, static_cast<char>(0x80 | ((codepoint >> 6) & 0x3f)));
-        out.append(1, static_cast<char>(0x80 | (codepoint & 0x3f)));
-      } else {
-        out.append(1, static_cast<char>(0xf0 | ((codepoint >> 18) & 0x07)));
-        out.append(1, static_cast<char>(0x80 | ((codepoint >> 12) & 0x3f)));
-        out.append(1, static_cast<char>(0x80 | ((codepoint >> 6) & 0x3f)));
-        out.append(1, static_cast<char>(0x80 | (codepoint & 0x3f)));
-      }
-      codepoint = 0;
-    }
-  }
-  return out;
-}
-
-}  // namespace vscode_keyboard
diff --git a/node_modules/native-keymap/src/string_conversion.h b/node_modules/native-keymap/src/string_conversion.h
deleted file mode 100644
index d9dc788..0000000
--- a/node_modules/native-keymap/src/string_conversion.h
+++ /dev/null
@@ -1,18 +0,0 @@
-/*---------------------------------------------------------------------------------------------
- *  Copyright (c) Microsoft Corporation. All rights reserved.
- *  Licensed under the MIT License. See License.txt in the project root for license information.
- *--------------------------------------------------------------------------------------------*/
-
-#ifndef STRING_CONVERSION_H_
-#define STRING_CONVERSION_H_
-
-#include <string>
-
-namespace vscode_keyboard {
-
-std::string UTF16to8(const wchar_t * in);
-std::string UTF16toUTF8(const wchar_t * in, int length);
-
-}  // namespace vscode_keyboard
-
-#endif  // STRING_CONVERSION_H_
